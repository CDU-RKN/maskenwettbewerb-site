!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define("uikit",e):(t="undefined"!=typeof globalThis?globalThis:t||self).UIkit=e()}(this,function(){"use strict";var t=Object.prototype,i=t.hasOwnProperty;function c(t,e){return i.call(t,e)}var e={},n=/([a-z\d])([A-Z])/g;function d(t){return t in e||(e[t]=t.replace(n,"$1-$2").toLowerCase()),e[t]}var o=/-(\w)/g;function f(t){return t.replace(o,r)}function r(t,e){return e?e.toUpperCase():""}function u(t){return t.length?r(0,t.charAt(0))+t.slice(1):""}var s=String.prototype,h=s.startsWith||function(t){return 0===this.lastIndexOf(t,0)};function v(t,e){return h.call(t,e)}var a=s.endsWith||function(t){return this.substr(-t.length)===t};function l(t,e){return a.call(t,e)}var g=Array.prototype,p=function(t,e){return!!~this.indexOf(t,e)},w=s.includes||p,m=g.includes||p;function x(t,e){return t&&(A(t)?w:m).call(t,e)}var y=g.findIndex||function(t){for(var e=arguments,i=0;i<this.length;i++)if(t.call(e[1],this[i],i,this))return i;return-1};function k(t,e){return y.call(t,e)}var C=Array.isArray;function b(t){return"function"==typeof t}function L(t){return null!==t&&"object"==typeof t}var $=t.toString;function M(t){return"[object Object]"===$.call(t)}function B(t){return L(t)&&t===t.window}function I(t){return L(t)&&9===t.nodeType}function S(t){return L(t)&&!!t.jquery}function T(t){return L(t)&&1<=t.nodeType}function E(t){return L(t)&&1===t.nodeType}function z(t){return $.call(t).match(/^\[object (NodeList|HTMLCollection)\]$/)}function _(t){return"boolean"==typeof t}function A(t){return"string"==typeof t}function N(t){return"number"==typeof t}function D(t){return N(t)||A(t)&&!isNaN(t-parseFloat(t))}function H(t){return!(C(t)?t.length:L(t)&&Object.keys(t).length)}function P(t){return void 0===t}function O(t){return _(t)?t:"true"===t||"1"===t||""===t||"false"!==t&&"0"!==t&&t}function Z(t){t=Number(t);return!isNaN(t)&&t}function j(t){return parseFloat(t)||0}function F(t){return T(t)?t:z(t)||S(t)?t[0]:C(t)?F(t[0]):null}function V(t){return T(t)?[t]:z(t)?g.slice.call(t):C(t)?t.map(F).filter(Boolean):S(t)?t.toArray():[]}function W(t){return B(t)?t:(t=F(t))?(I(t)?t:t.ownerDocument).defaultView:window}function R(t){return C(t)?t:A(t)?t.split(/,(?![^(]*\))/).map(function(t){return D(t)?Z(t):O(t.trim())}):[t]}function q(t){return t?l(t,"ms")?j(t):1e3*j(t):0}function U(t,i){return t===i||L(t)&&L(i)&&Object.keys(t).length===Object.keys(i).length&&J(t,function(t,e){return t===i[e]})}function Y(t,e,i){return t.replace(new RegExp(e+"|"+i,"g"),function(t){return t===e?i:e})}var X=Object.assign||function(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];t=Object(t);for(var n=0;n<e.length;n++){var o=e[n];if(null!==o)for(var r in o)c(o,r)&&(t[r]=o[r])}return t};function G(t){return t[t.length-1]}function J(t,e){for(var i in t)if(!1===e(t[i],i))return!1;return!0}function K(t,i){return t.sort(function(t,e){t=t[i];void 0===t&&(t=0);e=e[i];return void 0===e&&(e=0),e<t?1:t<e?-1:0})}function Q(t,e){var i=new Set;return t.filter(function(t){t=t[e];return!i.has(t)&&(i.add(t)||!0)})}function tt(t,e,i){return void 0===e&&(e=0),void 0===i&&(i=1),Math.min(Math.max(Z(t)||0,e),i)}function et(){}function it(t,e){return t.left<e.right&&t.right>e.left&&t.top<e.bottom&&t.bottom>e.top}function nt(t,e){return t.x<=e.right&&t.x>=e.left&&t.y<=e.bottom&&t.y>=e.top}var ot={ratio:function(t,e,i){var n="width"===e?"height":"width",o={};return o[n]=t[e]?Math.round(i*t[n]/t[e]):t[n],o[e]=i,o},contain:function(i,n){var o=this;return J(i=X({},i),function(t,e){return i=i[e]>n[e]?o.ratio(i,e,n[e]):i}),i},cover:function(i,n){var o=this;return J(i=this.contain(i,n),function(t,e){return i=i[e]<n[e]?o.ratio(i,e,n[e]):i}),i}};function rt(t,e,i){if(L(e))for(var n in e)rt(t,n,e[n]);else{if(P(i))return(t=F(t))&&t.getAttribute(e);V(t).forEach(function(t){b(i)&&(i=i.call(t,rt(t,e))),null===i?ht(t,e):t.setAttribute(e,i)})}}function st(t,e){return V(t).some(function(t){return t.hasAttribute(e)})}function ht(t,e){t=V(t),e.split(" ").forEach(function(e){return t.forEach(function(t){return t.hasAttribute(e)&&t.removeAttribute(e)})})}function at(t,e){for(var i=0,n=[e,"data-"+e];i<n.length;i++)if(st(t,n[i]))return rt(t,n[i])}var lt="undefined"!=typeof window,ct=lt&&/msie|trident/i.test(window.navigator.userAgent),ut=lt&&"rtl"===rt(document.documentElement,"dir"),dt=lt&&"ontouchstart"in window,ft=lt&&window.PointerEvent,gt=lt&&(dt||window.DocumentTouch&&document instanceof DocumentTouch||navigator.maxTouchPoints),pt=ft?"pointerdown":dt?"touchstart":"mousedown",vt=ft?"pointermove":dt?"touchmove":"mousemove",wt=ft?"pointerup":dt?"touchend":"mouseup",mt=ft?"pointerenter":dt?"":"mouseenter",xt=ft?"pointerleave":dt?"":"mouseleave",yt=ft?"pointercancel":"touchcancel";function kt(t,e){return F(t)||Lt(t,bt(t,e))}function Ct(t,e){var i=V(t);return i.length&&i||$t(t,bt(t,e))}function bt(t,e){return void 0===e&&(e=document),St(t)||I(e)?e:e.ownerDocument}function Lt(t,e){return F(Mt(t,e,"querySelector"))}function $t(t,e){return V(Mt(t,e,"querySelectorAll"))}function Mt(t,r,e){if(void 0===r&&(r=document),!t||!A(t))return null;var s;St(t=t.replace(It,"$1 *"))&&(s=[],t=t.match(Tt).map(function(t){return t.replace(/,$/,"").trim()}).map(function(t,e){var i,n,o=r;return"!"===t[0]&&(n=t.substr(1).trim().split(" "),o=Nt(Dt(r),n[0]),t=n.slice(1).join(" ").trim()),"-"===t[0]&&(i=t.substr(1).trim().split(" "),n=(o||r).previousElementSibling,o=_t(n,t.substr(1))?n:null,t=i.slice(1).join(" ")),o?(o.id||(o.id="uk-"+Date.now()+e,s.push(function(){return ht(o,"id")})),"#"+Pt(o.id)+" "+t):null}).filter(Boolean).join(","),r=document);try{return r[e](t)}catch(t){return null}finally{s&&s.forEach(function(t){return t()})}}var Bt=/(^|[^\\],)\s*[!>+~-]/,It=/([!>+~-])(?=\s+[!>+~-]|\s*$)/g;function St(t){return A(t)&&t.match(Bt)}var Tt=/.*?[^\\](?:,|$)/g;var Et=lt?Element.prototype:{},zt=Et.matches||Et.webkitMatchesSelector||Et.msMatchesSelector||et;function _t(t,e){return V(t).some(function(t){return zt.call(t,e)})}var At=Et.closest||function(t){var e=this;do{if(_t(e,t))return e}while(e=Dt(e))};function Nt(t,e){return v(e,">")&&(e=e.slice(1)),E(t)?At.call(t,e):V(t).map(function(t){return Nt(t,e)}).filter(Boolean)}function Dt(t){return(t=F(t))&&E(t.parentNode)&&t.parentNode}var Ht=lt&&window.CSS&&CSS.escape||function(t){return t.replace(/([^\x7f-\uFFFF\w-])/g,function(t){return"\\"+t})};function Pt(t){return A(t)?Ht.call(null,t):""}var Ot={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,menuitem:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};function Zt(t){return V(t).some(function(t){return Ot[t.tagName.toLowerCase()]})}function jt(t){return V(t).some(function(t){return t.offsetWidth||t.offsetHeight||t.getClientRects().length})}var Ft="input,select,textarea,button";function Vt(t){return V(t).some(function(t){return _t(t,Ft)})}function Wt(t,e){return V(t).filter(function(t){return _t(t,e)})}function Rt(t,e){return A(e)?_t(t,e)||!!Nt(t,e):t===e||(I(e)?e.documentElement:F(e)).contains(F(t))}function qt(t,e){for(var i=[];t=Dt(t);)e&&!_t(t,e)||i.push(t);return i}function Ut(t,e){t=(t=F(t))?V(t.children):[];return e?Wt(t,e):t}function Yt(){for(var t=[],e=arguments.length;e--;)t[e]=arguments[e];var i,n,o=Qt(t),r=o[0],s=o[1],h=o[2],a=o[3],l=o[4],r=ne(r);return 1<a.length&&(i=a,a=function(t){return C(t.detail)?i.apply(void 0,[t].concat(t.detail)):i(t)}),l&&l.self&&(n=a,a=function(t){if(t.target===t.currentTarget||t.target===t.current)return n.call(null,t)}),h&&(a=function(t,n,o){var r=this;return function(i){t.forEach(function(t){var e=">"===n[0]?$t(n,t).reverse().filter(function(t){return Rt(i.target,t)})[0]:Nt(i.target,n);e&&(i.delegate=t,i.current=e,o.call(r,i))})}}(r,h,a)),l=te(l),s.split(" ").forEach(function(e){return r.forEach(function(t){return t.addEventListener(e,a,l)})}),function(){return Xt(r,s,a,l)}}function Xt(t,e,i,n){void 0===n&&(n=!1),n=te(n),t=ne(t),e.split(" ").forEach(function(e){return t.forEach(function(t){return t.removeEventListener(e,i,n)})})}function Gt(){for(var t=[],e=arguments.length;e--;)t[e]=arguments[e];var i=Qt(t),n=i[0],o=i[1],r=i[2],s=i[3],h=i[4],a=i[5],l=Yt(n,o,r,function(t){var e=!a||a(t);e&&(l(),s(t,e))},h);return l}function Jt(t,i,n){return ne(t).reduce(function(t,e){return t&&e.dispatchEvent(Kt(i,!0,!0,n))},!0)}function Kt(t,e,i,n){var o;return void 0===e&&(e=!0),void 0===i&&(i=!1),A(t)&&((o=document.createEvent("CustomEvent")).initCustomEvent(t,e,i,n),t=o),t}function Qt(t){return b(t[2])&&t.splice(2,0,!1),t}function te(t){return t&&ct&&!_(t)?!!t.capture:t}function ee(t){return t&&"addEventListener"in t}function ie(t){return ee(t)?t:F(t)}function ne(t){return C(t)?t.map(ie).filter(Boolean):A(t)?$t(t):ee(t)?[t]:V(t)}function oe(t){return"touch"===t.pointerType||!!t.touches}function re(t){var e=t.touches,i=t.changedTouches,t=e&&e[0]||i&&i[0]||t;return{x:t.clientX,y:t.clientY}}function se(){var i=this;this.promise=new he(function(t,e){i.reject=e,i.resolve=t})}var he=lt&&window.Promise||ce,ae=2,le=lt&&window.setImmediate||setTimeout;function ce(t){this.state=ae,this.value=void 0,this.deferred=[];var e=this;try{t(function(t){e.resolve(t)},function(t){e.reject(t)})}catch(t){e.reject(t)}}ce.reject=function(i){return new ce(function(t,e){e(i)})},ce.resolve=function(i){return new ce(function(t,e){t(i)})},ce.all=function(r){return new ce(function(i,t){var n=[],o=0;0===r.length&&i(n);for(var e=0;e<r.length;e+=1)ce.resolve(r[e]).then(function(e){return function(t){n[e]=t,(o+=1)===r.length&&i(n)}}(e),t)})},ce.race=function(n){return new ce(function(t,e){for(var i=0;i<n.length;i+=1)ce.resolve(n[i]).then(t,e)})};var ue=ce.prototype;function de(s,h){return new he(function(t,e){var i=X({data:null,method:"GET",headers:{},xhr:new XMLHttpRequest,beforeSend:et,responseType:""},h);i.beforeSend(i);var n,o,r=i.xhr;for(n in i)if(n in r)try{r[n]=i[n]}catch(t){}for(o in r.open(i.method.toUpperCase(),s),i.headers)r.setRequestHeader(o,i.headers[o]);Yt(r,"load",function(){0===r.status||200<=r.status&&r.status<300||304===r.status?("json"===i.responseType&&A(r.response)&&(r=X(function(t){var e,i={};for(e in t)i[e]=t[e];return i}(r),{response:JSON.parse(r.response)})),t(r)):e(X(Error(r.statusText),{xhr:r,status:r.status}))}),Yt(r,"error",function(){return e(X(Error("Network Error"),{xhr:r}))}),Yt(r,"timeout",function(){return e(X(Error("Network Timeout"),{xhr:r}))}),r.send(i.data)})}function fe(n,o,r){return new he(function(t,e){var i=new Image;i.onerror=function(t){return e(t)},i.onload=function(){return t(i)},r&&(i.sizes=r),o&&(i.srcset=o),i.src=n})}function ge(t){var e;"loading"===document.readyState?e=Yt(document,"DOMContentLoaded",function(){e(),t()}):t()}function pe(t,e){return e?V(t).indexOf(F(e)):Ut(Dt(t)).indexOf(t)}function ve(t,e,i,n){void 0===i&&(i=0),void 0===n&&(n=!1);var o=(e=V(e)).length;return t=D(t)?Z(t):"next"===t?i+1:"previous"===t?i-1:pe(e,t),n?tt(t,0,o-1):(t%=o)<0?t+o:t}function we(t){return(t=Ee(t)).innerHTML="",t}function me(t,e){return t=Ee(t),P(e)?t.innerHTML:xe(t.hasChildNodes()?we(t):t,e)}function xe(e,t){return e=Ee(e),Ce(t,function(t){return e.appendChild(t)})}function ye(e,t){return e=Ee(e),Ce(t,function(t){return e.parentNode.insertBefore(t,e)})}function ke(e,t){return e=Ee(e),Ce(t,function(t){return e.nextSibling?ye(e.nextSibling,t):xe(e.parentNode,t)})}function Ce(t,e){return(t=A(t)?Se(t):t)?"length"in t?V(t).map(e):e(t):null}function be(t){V(t).map(function(t){return t.parentNode&&t.parentNode.removeChild(t)})}function Le(t,e){for(e=F(ye(t,e));e.firstChild;)e=e.firstChild;return xe(e,t),e}function $e(t,e){return V(V(t).map(function(t){return t.hasChildNodes?Le(V(t.childNodes),e):xe(t,e)}))}function Me(t){V(t).map(Dt).filter(function(t,e,i){return i.indexOf(t)===e}).forEach(function(t){ye(t,t.childNodes),be(t)})}ue.resolve=function(t){var e=this;if(e.state===ae){if(t===e)throw new TypeError("Promise settled with itself.");var i=!1;try{var n=t&&t.then;if(null!==t&&L(t)&&b(n))return void n.call(t,function(t){i||e.resolve(t),i=!0},function(t){i||e.reject(t),i=!0})}catch(t){return void(i||e.reject(t))}e.state=0,e.value=t,e.notify()}},ue.reject=function(t){var e=this;if(e.state===ae){if(t===e)throw new TypeError("Promise settled with itself.");e.state=1,e.value=t,e.notify()}},ue.notify=function(){var r=this;le(function(){if(r.state!==ae)for(;r.deferred.length;){var t=r.deferred.shift(),e=t[0],i=t[1],n=t[2],o=t[3];try{0===r.state?b(e)?n(e.call(void 0,r.value)):n(r.value):1===r.state&&(b(i)?n(i.call(void 0,r.value)):o(r.value))}catch(t){o(t)}}})},ue.then=function(i,n){var o=this;return new ce(function(t,e){o.deferred.push([i,n,t,e]),o.notify()})},ue.catch=function(t){return this.then(void 0,t)};var Be=/^\s*<(\w+|!)[^>]*>/,Ie=/^<(\w+)\s*\/?>(?:<\/\1>)?$/;function Se(t){var e=Ie.exec(t);if(e)return document.createElement(e[1]);e=document.createElement("div");return Be.test(t)?e.insertAdjacentHTML("beforeend",t.trim()):e.textContent=t,1<e.childNodes.length?V(e.childNodes):e.firstChild}function Te(t,e){if(E(t))for(e(t),t=t.firstElementChild;t;){var i=t.nextElementSibling;Te(t,e),t=i}}function Ee(t,e){return A(t)?_e(t)?F(Se(t)):Lt(t,e):F(t)}function ze(t,e){return A(t)?_e(t)?V(Se(t)):$t(t,e):V(t)}function _e(t){return"<"===t[0]||t.match(/^\s*</)}function Ae(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];Ze(t,e,"add")}function Ne(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];Ze(t,e,"remove")}function De(t,e){rt(t,"class",function(t){return(t||"").replace(new RegExp("\\b"+e+"\\b","g"),"")})}function He(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];e[0]&&Ne(t,e[0]),e[1]&&Ae(t,e[1])}function Pe(t,e){return e&&V(t).some(function(t){return t.classList.contains(e.split(" ")[0])})}function Oe(t){for(var n,o=[],e=arguments.length-1;0<e--;)o[e]=arguments[e+1];o.length&&(n=A(G(o=je(o)))?[]:o.pop(),o=o.filter(Boolean),V(t).forEach(function(t){for(var e=t.classList,i=0;i<o.length;i++)Fe.Force?e.toggle.apply(e,[o[i]].concat(n)):e[(P(n)?!e.contains(o[i]):n)?"add":"remove"](o[i])}))}function Ze(t,i,n){(i=je(i).filter(Boolean)).length&&V(t).forEach(function(t){var e=t.classList;Fe.Multiple?e[n].apply(e,i):i.forEach(function(t){return e[n](t)})})}function je(t){return t.reduce(function(t,e){return t.concat.call(t,A(e)&&x(e," ")?e.trim().split(" "):e)},[])}var Fe={get Multiple(){return this.get("_multiple")},get Force(){return this.get("_force")},get:function(t){var e;return c(this,t)||((e=document.createElement("_").classList).add("a","b"),e.toggle("c",!1),this._multiple=e.contains("b"),this._force=!e.contains("c")),this[t]}},Ve={"animation-iteration-count":!0,"column-count":!0,"fill-opacity":!0,"flex-grow":!0,"flex-shrink":!0,"font-weight":!0,"line-height":!0,opacity:!0,order:!0,orphans:!0,"stroke-dasharray":!0,"stroke-dashoffset":!0,widows:!0,"z-index":!0,zoom:!0};function We(t,e,o){return V(t).map(function(i){if(A(e)){if(e=Ge(e),P(o))return qe(i,e);o||N(o)?i.style[e]=D(o)&&!Ve[e]?o+"px":o:i.style.removeProperty(e)}else{if(C(e)){var n=Re(i);return e.reduce(function(t,e){return t[e]=n[Ge(e)],t},{})}L(e)&&J(e,function(t,e){return We(i,e,t)})}return i})[0]}function Re(t,e){return(t=F(t)).ownerDocument.defaultView.getComputedStyle(t,e)}function qe(t,e,i){return Re(t,i)[e]}var Ue={};function Ye(t){var e,i=document.documentElement;return ct?(t in Ue||(Ae(e=xe(i,document.createElement("div")),"uk-"+t),Ue[t]=qe(e,"content",":before").replace(/^["'](.*)["']$/,"$1"),be(e)),Ue[t]):Re(i).getPropertyValue("--uk-"+t)}var Xe={};function Ge(t){return Xe[t]||(Xe[t]=function(t){t=d(t);var e=document.documentElement.style;if(t in e)return t;var i,n=Je.length;for(;n--;)if((i="-"+Je[n]+"-"+t)in e)return i}(t)||t)}var Je=["webkit","moz","ms"];function Ke(t,s,h,a){return void 0===h&&(h=400),void 0===a&&(a="linear"),he.all(V(t).map(function(r){return new he(function(e,i){for(var t in s){var n=We(r,t);""===n&&We(r,t,n)}var o=setTimeout(function(){return Jt(r,"transitionend")},h);Gt(r,"transitionend transitioncanceled",function(t){t=t.type;clearTimeout(o),Ne(r,"uk-transition"),We(r,{transitionProperty:"",transitionDuration:"",transitionTimingFunction:""}),("transitioncanceled"===t?i:e)()},{self:!0}),Ae(r,"uk-transition"),We(r,X({transitionProperty:Object.keys(s).map(Ge).join(","),transitionDuration:h+"ms",transitionTimingFunction:a},s))})}))}var Qe={start:Ke,stop:function(t){return Jt(t,"transitionend"),he.resolve()},cancel:function(t){Jt(t,"transitioncanceled")},inProgress:function(t){return Pe(t,"uk-transition")}},ti="uk-animation-";function ei(t,r,s,h,a){return void 0===s&&(s=200),he.all(V(t).map(function(o){return new he(function(e,i){Jt(o,"animationcanceled");var n=setTimeout(function(){return Jt(o,"animationend")},s);Gt(o,"animationend animationcanceled",function(t){t=t.type;clearTimeout(n),("animationcanceled"===t?i:e)(),We(o,"animationDuration",""),De(o,ti+"\\S*")},{self:!0}),We(o,"animationDuration",s+"ms"),Ae(o,r,ti+(a?"leave":"enter")),v(r,ti)&&Ae(o,h&&"uk-transform-origin-"+h,a&&ti+"reverse")})}))}var ii=new RegExp(ti+"(enter|leave)"),ni={in:ei,out:function(t,e,i,n){return ei(t,e,i,n,!0)},inProgress:function(t){return ii.test(rt(t,"class"))},cancel:function(t){Jt(t,"animationcanceled")}},oi={width:["x","left","right"],height:["y","top","bottom"]};function ri(t,e,c,u,d,i,n,o){c=pi(c),u=pi(u);var f={element:c,target:u};if(!t||!e)return f;var r,g=hi(t),p=hi(e),v=p;return gi(v,c,g,-1),gi(v,u,p,1),d=vi(d,g.width,g.height),i=vi(i,p.width,p.height),d.x+=i.x,d.y+=i.y,v.left+=d.x,v.top+=d.y,n&&(r=[hi(W(t))],o&&r.unshift(hi(o)),J(oi,function(t,s){var h=t[0],a=t[1],l=t[2];!0!==n&&!x(n,h)||r.some(function(i){var t=c[h]===a?-g[s]:c[h]===l?g[s]:0,e=u[h]===a?p[s]:u[h]===l?-p[s]:0;if(v[a]<i[a]||v[a]+g[s]>i[l]){var n=g[s]/2,o="center"===u[h]?-p[s]/2:0;return"center"===c[h]&&(r(n,o)||r(-n,-o))||r(t,e)}function r(e,t){t=j((v[a]+e+t-2*d[h]).toFixed(4));if(t>=i[a]&&t+g[s]<=i[l])return v[a]=t,["element","target"].forEach(function(t){f[t][h]=e?f[t][h]===oi[s][1]?oi[s][2]:oi[s][1]:f[t][h]}),!0}})})),si(t,v),f}function si(i,n){if(!n)return hi(i);var o=hi(i),r=We(i,"position");["left","top"].forEach(function(t){var e;t in n&&(e=We(i,t),We(i,t,n[t]-o[t]+j("absolute"===r&&"auto"===e?ai(i)[t]:e)))})}function hi(t){var e=W(t),i=e.pageYOffset,e=e.pageXOffset,t=B(t)?{height:ci(t),width:ui(t),top:0,left:0}:function(t){if(!t)return{};var e;jt(t)||(e=rt(t,"style"),t.style.setProperty("display","block","important"));var i=t.getBoundingClientRect();return rt(t,"style",e),i}(F(t));return{height:t.height,width:t.width,top:t.top+i,left:t.left+e,bottom:t.top+t.height+i,right:t.left+t.width+e}}function ai(t,e){e=e||(F(t)||{}).offsetParent||W(t).document.documentElement;var i=si(t),t=si(e);return{top:i.top-t.top-j(We(e,"borderTopWidth")),left:i.left-t.left-j(We(e,"borderLeftWidth"))}}function li(t){var e=[0,0];t=F(t);do{if(e[0]+=t.offsetTop,e[1]+=t.offsetLeft,"fixed"===We(t,"position")){var i=W(t);return e[0]+=i.pageYOffset,e[1]+=i.pageXOffset,e}}while(t=t.offsetParent);return e}var ci=di("height"),ui=di("width");function di(n){var o=u(n);return function(t,e){if(P(e)){if(B(t))return t["inner"+o];if(I(t)){var i=t.documentElement;return Math.max(i["offset"+o],i["scroll"+o])}return(e="auto"===(e=We(t=F(t),n))?t["offset"+o]:j(e)||0)-fi(t,n)}We(t,n,e||0===e?+e+fi(t,n)+"px":"")}}function fi(i,t,e){return void 0===e&&(e="border-box"),We(i,"boxSizing")===e?oi[t].slice(1).map(u).reduce(function(t,e){return t+j(We(i,"padding"+e))+j(We(i,"border"+e+"Width"))},0):0}function gi(o,r,s,h){J(oi,function(t,e){var i=t[0],n=t[1],t=t[2];r[i]===t?o[n]+=s[e]*h:"center"===r[i]&&(o[n]+=s[e]*h/2)})}function pi(t){var e=/left|center|right/,i=/top|center|bottom/;return 1===(t=(t||"").split(" ")).length&&(t=e.test(t[0])?t.concat("center"):i.test(t[0])?["center"].concat(t):["center","center"]),{x:e.test(t[0])?t[0]:"center",y:i.test(t[1])?t[1]:"center"}}function vi(t,e,i){var n=(t||"").split(" "),t=n[0],n=n[1];return{x:t?j(t)*(l(t,"%")?e/100:1):0,y:n?j(n)*(l(n,"%")?i/100:1):0}}function wi(t){switch(t){case"left":return"right";case"right":return"left";case"top":return"bottom";case"bottom":return"top";default:return t}}function mi(t,e,i){return void 0===e&&(e="width"),void 0===i&&(i=window),D(t)?+t:l(t,"vh")?xi(ci(W(i)),t):l(t,"vw")?xi(ui(W(i)),t):l(t,"%")?xi(hi(i)[e],t):j(t)}function xi(t,e){return t*j(e)/100}var yi={reads:[],writes:[],read:function(t){return this.reads.push(t),bi(),t},write:function(t){return this.writes.push(t),bi(),t},clear:function(t){return $i(this.reads,t)||$i(this.writes,t)},flush:ki};function ki(t){void 0===t&&(t=1),Li(yi.reads),Li(yi.writes.splice(0,yi.writes.length)),yi.scheduled=!1,(yi.reads.length||yi.writes.length)&&bi(t+1)}var Ci=4;function bi(t){yi.scheduled||(yi.scheduled=!0,t&&t<Ci?he.resolve().then(function(){return ki(t)}):requestAnimationFrame(function(){return ki()}))}function Li(t){for(var e;e=t.shift();)e()}function $i(t,e){e=t.indexOf(e);return!!~e&&!!t.splice(e,1)}function Mi(){}Mi.prototype={positions:[],init:function(){var e,t=this;this.positions=[],this.unbind=Yt(document,"mousemove",function(t){return e=re(t)}),this.interval=setInterval(function(){e&&(t.positions.push(e),5<t.positions.length&&t.positions.shift())},50)},cancel:function(){this.unbind&&this.unbind(),this.interval&&clearInterval(this.interval)},movesTo:function(t){if(this.positions.length<2)return!1;var e=t.getBoundingClientRect(),i=e.left,n=e.right,o=e.top,r=e.bottom,s=this.positions[0],t=G(this.positions),h=[s,t];return!nt(t,e)&&[[{x:i,y:o},{x:n,y:r}],[{x:i,y:r},{x:n,y:o}]].some(function(t){t=function(t,e){var i=t[0],n=i.x,o=i.y,r=t[1],s=r.x,h=r.y,a=e[0],i=a.x,t=a.y,r=e[1],a=r.x,e=r.y,r=(e-t)*(s-n)-(a-i)*(h-o);if(0==r)return!1;r=((a-i)*(o-t)-(e-t)*(n-i))/r;if(r<0)return!1;return{x:n+r*(s-n),y:o+r*(h-o)}}(h,t);return t&&nt(t,e)})}};var Bi={};function Ii(t,e,i){return Bi.computed(b(t)?t.call(i,i):t,b(e)?e.call(i,i):e)}function Si(t,e){return t=t&&!C(t)?[t]:t,e?t?t.concat(e):C(e)?e:[e]:t}function Ti(e,i,n){var t,o,r={};if(b(i)&&(i=i.options),i.extends&&(e=Ti(e,i.extends,n)),i.mixins)for(var s=0,h=i.mixins.length;s<h;s++)e=Ti(e,i.mixins[s],n);for(t in e)a(t);for(o in i)c(e,o)||a(o);function a(t){r[t]=(Bi[t]||function(t,e){return P(e)?t:e})(e[t],i[t],n)}return r}function Ei(t,e){var i;void 0===e&&(e=[]);try{return t?v(t,"{")?JSON.parse(t):e.length&&!x(t,":")?((i={})[e[0]]=t,i):t.split(";").reduce(function(t,e){var i=e.split(/:(.*)/),e=i[0],i=i[1];return e&&!P(i)&&(t[e.trim()]=i.trim()),t},{}):{}}catch(t){return{}}}function zi(t){if(Di(t)&&Oi(t,{func:"playVideo",method:"play"}),Ni(t))try{t.play().catch(et)}catch(t){}}function _i(t){Di(t)&&Oi(t,{func:"pauseVideo",method:"pause"}),Ni(t)&&t.pause()}function Ai(t){Di(t)&&Oi(t,{func:"mute",method:"setVolume",value:0}),Ni(t)&&(t.muted=!0)}function Ni(t){return t&&"VIDEO"===t.tagName}function Di(t){return t&&"IFRAME"===t.tagName&&(Hi(t)||Pi(t))}function Hi(t){return!!t.src.match(/\/\/.*?youtube(-nocookie)?\.[a-z]+\/(watch\?v=[^&\s]+|embed)|youtu\.be\/.*/)}function Pi(t){return!!t.src.match(/vimeo\.com\/video\/.*/)}function Oi(t,e){(function(e){if(e[ji])return e[ji];var i,n=Hi(e),o=Pi(e),r=++Fi;return e[ji]=new he(function(t){n&&Gt(e,"load",function(){function t(){return Zi(e,{event:"listening",id:r})}i=setInterval(t,100),t()}),Gt(window,"message",t,!1,function(t){var e=t.data;try{return(e=JSON.parse(e))&&(n&&e.id===r&&"onReady"===e.event||o&&Number(e.player_id)===r)}catch(t){}}),e.src=e.src+(x(e.src,"?")?"&":"?")+(n?"enablejsapi=1":"api=1&player_id="+r)}).then(function(){return clearInterval(i)})})(t).then(function(){return Zi(t,e)})}function Zi(t,e){try{t.contentWindow.postMessage(JSON.stringify(X({event:"command"},e)),"*")}catch(t){}}Bi.events=Bi.created=Bi.beforeConnect=Bi.connected=Bi.beforeDisconnect=Bi.disconnected=Bi.destroy=Si,Bi.args=function(t,e){return!1!==e&&Si(e||t)},Bi.update=function(t,e){return K(Si(t,b(e)?{read:e}:e),"order")},Bi.props=function(t,e){return C(e)&&(e=e.reduce(function(t,e){return t[e]=String,t},{})),Bi.methods(t,e)},Bi.computed=Bi.methods=function(t,e){return e?t?X({},t,e):e:t},Bi.data=function(e,i,t){return t?Ii(e,i,t):i?e?function(t){return Ii(e,i,t)}:i:e};var ji="_ukPlayer",Fi=0;function Vi(r,s,h){if(void 0===s&&(s=0),void 0===h&&(h=0),!jt(r))return!1;var a=Xi(r);return a.every(function(t,e){var i=si(a[e+1]||r),n=si(Yi(t)),o=n.top,e=n.left,t=n.bottom,n=n.right;return it(i,{top:o-s,left:e-h,bottom:t+s,right:n+h})})}function Wi(t,e){(t=(B(t)||I(t)?Gi:F)(t)).scrollTop=e}function Ri(t,e){void 0===e&&(e={});var l=e.offset;if(void 0===l&&(l=0),jt(t)){for(var c=Xi(t).concat(t),i=he.resolve(),n=function(a){i=i.then(function(){return new he(function(e){var i=c[a],t=c[a+1],n=i.scrollTop,o=Math.ceil(ai(t,Yi(i)).top-l),r=(t=Math.abs(o),40*Math.pow(t,.375)),s=Date.now(),h=function(){var t,t=(t=tt((Date.now()-s)/r),.5*(1-Math.cos(Math.PI*t)));Wi(i,n+o*t),1!=t?requestAnimationFrame(h):e()};h()})})},o=0;o<c.length-1;o++)n(o);return i}}function qi(t,e){if(void 0===e&&(e=0),!jt(t))return 0;var i=G(Ui(t)),n=i.scrollHeight,o=i.scrollTop,r=si(Yi(i)).height,s=li(t)[0]-o-li(i)[0],i=Math.min(r,s+o);return tt(-1*(s-i)/Math.min(si(t).height+e+i,n-(s+o),n-r))}function Ui(t,e){void 0===e&&(e=/auto|scroll/);var i=Gi(t),t=qt(t).filter(function(t){return t===i||e.test(We(t,"overflow"))&&t.scrollHeight>Math.round(si(t).height)}).reverse();return t.length?t:[i]}function Yi(t){return t===Gi(t)?window:t}function Xi(t){return Ui(t,/auto|scroll|hidden/)}function Gi(t){t=W(t).document;return t.scrollingElement||t.documentElement}var Ji=lt&&window.IntersectionObserver||function(){function t(e,t){var i=this;void 0===t&&(t={});var n=t.rootMargin;void 0===n&&(n="0 0"),this.targets=[];var o,t=(n||"0 0").split(" ").map(j),n=t[0],t=t[1];this.offsetTop=n,this.offsetLeft=t,this.apply=function(){o=o||requestAnimationFrame(function(){return setTimeout(function(){var t=i.takeRecords();t.length&&e(t,i),o=!1})})},this.off=Yt(window,"scroll resize load",this.apply,{passive:!0,capture:!0})}return t.prototype.takeRecords=function(){var i=this;return this.targets.filter(function(t){var e=Vi(t.target,i.offsetTop,i.offsetLeft);if(null===t.isIntersecting||e^t.isIntersecting)return t.isIntersecting=e,!0})},t.prototype.observe=function(t){this.targets.push({target:t,isIntersecting:null}),this.apply()},t.prototype.disconnect=function(){this.targets=[],this.off()},t}();function Ki(t){return!(!v(t,"uk-")&&!v(t,"data-uk-"))&&f(t.replace("data-uk-","").replace("uk-",""))}function Qi(t){this._init(t)}var tn,en,nn,on,rn,sn,hn,an,ln;function cn(t,e){if(t)for(var i in t)t[i]._connected&&t[i]._callUpdate(e)}function un(t,e){var i={},n=t.args;void 0===n&&(n=[]);var o=t.props;void 0===o&&(o={});var r,s=t.el;if(!o)return i;for(r in o){var h=d(r),a=at(s,h);P(a)||(a=o[r]===Boolean&&""===a||fn(o[r],a),("target"!==h||a&&!v(a,"_"))&&(i[r]=a))}var l,c=Ei(at(s,e),n);for(l in c){var u=f(l);void 0!==o[u]&&(i[u]=fn(o[u],c[l]))}return i}function dn(e,i,n){M(i)||(i={name:n,handler:i});var t=i.name,o=i.el,r=i.handler,s=i.capture,h=i.passive,a=i.delegate,l=i.filter,c=i.self,o=b(o)?o.call(e):o||e.$el;C(o)?o.forEach(function(t){return dn(e,X({},i,{el:t}),n)}):!o||l&&!l.call(e)||e._events.push(Yt(o,t,a?A(a)?a:a.call(e):null,A(r)?e[r]:r.bind(e),{passive:h,capture:s,self:c}))}function fn(t,e){return t===Boolean?O(e):t===Number?Z(e):"list"===t?R(e):t?t(e):e}Qi.util=Object.freeze({__proto__:null,ajax:de,getImage:fe,transition:Ke,Transition:Qe,animate:ei,Animation:ni,attr:rt,hasAttr:st,removeAttr:ht,data:at,addClass:Ae,removeClass:Ne,removeClasses:De,replaceClass:He,hasClass:Pe,toggleClass:Oe,positionAt:ri,offset:si,position:ai,offsetPosition:li,height:ci,width:ui,boxModelAdjust:fi,flipPosition:wi,toPx:mi,ready:ge,index:pe,getIndex:ve,empty:we,html:me,prepend:function(e,t){return(e=Ee(e)).hasChildNodes()?Ce(t,function(t){return e.insertBefore(t,e.firstChild)}):xe(e,t)},append:xe,before:ye,after:ke,remove:be,wrapAll:Le,wrapInner:$e,unwrap:Me,fragment:Se,apply:Te,$:Ee,$$:ze,inBrowser:lt,isIE:ct,isRtl:ut,hasTouch:gt,pointerDown:pt,pointerMove:vt,pointerUp:wt,pointerEnter:mt,pointerLeave:xt,pointerCancel:yt,on:Yt,off:Xt,once:Gt,trigger:Jt,createEvent:Kt,toEventTargets:ne,isTouch:oe,getEventPos:re,fastdom:yi,isVoidElement:Zt,isVisible:jt,selInput:Ft,isInput:Vt,filter:Wt,within:Rt,parents:qt,children:Ut,hasOwn:c,hyphenate:d,camelize:f,ucfirst:u,startsWith:v,endsWith:l,includes:x,findIndex:k,isArray:C,isFunction:b,isObject:L,isPlainObject:M,isWindow:B,isDocument:I,isJQuery:S,isNode:T,isElement:E,isNodeCollection:z,isBoolean:_,isString:A,isNumber:N,isNumeric:D,isEmpty:H,isUndefined:P,toBoolean:O,toNumber:Z,toFloat:j,toNode:F,toNodes:V,toWindow:W,toList:R,toMs:q,isEqual:U,swap:Y,assign:X,last:G,each:J,sortBy:K,uniqueBy:Q,clamp:tt,noop:et,intersectRect:it,pointInRect:nt,Dimensions:ot,MouseTracker:Mi,mergeOptions:Ti,parseOptions:Ei,play:zi,pause:_i,mute:Ai,Promise:he,Deferred:se,IntersectionObserver:Ji,query:kt,queryAll:Ct,find:Lt,findAll:$t,matches:_t,closest:Nt,parent:Dt,escape:Pt,css:We,getStyles:Re,getStyle:qe,getCssVar:Ye,propName:Ge,isInView:Vi,scrollTop:Wi,scrollIntoView:Ri,scrolledOver:qi,scrollParents:Ui,getViewport:Yi}),Qi.data="__uikit__",Qi.prefix="uk-",Qi.options={},Qi.version="3.5.8",nn=(tn=Qi).data,tn.use=function(t){if(!t.installed)return t.call(null,this),t.installed=!0,this},tn.mixin=function(t,e){(e=(A(e)?tn.component(e):e)||this).options=Ti(e.options,t)},tn.extend=function(t){t=t||{};function e(t){this._init(t)}return((e.prototype=Object.create(this.prototype)).constructor=e).options=Ti(this.options,t),e.super=this,e.extend=this.extend,e},tn.update=function(t,e){qt(t=t?F(t):document.body).reverse().forEach(function(t){return cn(t[nn],e)}),Te(t,function(t){return cn(t[nn],e)})},Object.defineProperty(tn,"container",{get:function(){return en||document.body},set:function(t){en=Ee(t)}}),(on=Qi).prototype._callHook=function(t){var e=this,t=this.$options[t];t&&t.forEach(function(t){return t.call(e)})},on.prototype._callConnected=function(){this._connected||(this._data={},this._computeds={},this._frames={reads:{},writes:{}},this._initProps(),this._callHook("beforeConnect"),this._connected=!0,this._initEvents(),this._initObserver(),this._callHook("connected"),this._callUpdate())},on.prototype._callDisconnected=function(){this._connected&&(this._callHook("beforeDisconnect"),this._observer&&(this._observer.disconnect(),this._observer=null),this._unbindEvents(),this._callHook("disconnected"),this._connected=!1)},on.prototype._callUpdate=function(t){var o=this;void 0===t&&(t="update");var r=t.type||t;x(["update","resize"],r)&&this._callWatches();var e=this.$options.update,t=this._frames,s=t.reads,h=t.writes;e&&e.forEach(function(t,e){var i=t.read,n=t.write,t=t.events;"update"!==r&&!x(t,r)||(i&&!x(yi.reads,s[e])&&(s[e]=yi.read(function(){var t=o._connected&&i.call(o,o._data,r);!1===t&&n?yi.clear(h[e]):M(t)&&X(o._data,t)})),n&&!x(yi.writes,h[e])&&(h[e]=yi.write(function(){return o._connected&&n.call(o,o._data,r)})))})},on.prototype._callWatches=function(){var h,a=this,l=this._frames;l._watch||(h=!c(l,"_watch"),l._watch=yi.read(function(){if(a._connected){var t,e=a.$options.computed,i=a._computeds;for(t in e){var n=c(i,t),o=i[t];delete i[t];var r=e[t],s=r.watch,r=r.immediate;s&&(h&&r||n&&!U(o,a[t]))&&s.call(a,a[t],o)}l._watch=null}}))},sn=0,(rn=Qi).prototype._init=function(t){(t=t||{}).data=function(t,e){var i=t.data,n=(t.el,e.args),o=e.props;void 0===o&&(o={});if(i=C(i)?H(n)?void 0:i.slice(0,n.length).reduce(function(t,e,i){return M(e)?X(t,e):t[n[i]]=e,t},{}):i)for(var r in i)P(i[r])?delete i[r]:i[r]=o[r]?fn(o[r],i[r]):i[r];return i}(t,this.constructor.options),this.$options=Ti(this.constructor.options,t,this),this.$el=null,this.$props={},this._uid=sn++,this._initData(),this._initMethods(),this._initComputeds(),this._callHook("created"),t.el&&this.$mount(t.el)},rn.prototype._initData=function(){var t,e=this.$options.data;for(t in void 0===e&&(e={}),e)this.$props[t]=this[t]=e[t]},rn.prototype._initMethods=function(){var t=this.$options.methods;if(t)for(var e in t)this[e]=t[e].bind(this)},rn.prototype._initComputeds=function(){var t=this.$options.computed;if(this._computeds={},t)for(var e in t)!function(n,o,r){Object.defineProperty(n,o,{enumerable:!0,get:function(){var t=n._computeds,e=n.$props,i=n.$el;return c(t,o)||(t[o]=(r.get||r).call(n,e,i)),t[o]},set:function(t){var e=n._computeds;e[o]=r.set?r.set.call(n,t):t,P(e[o])&&delete e[o]}})}(this,e,t[e])},rn.prototype._initProps=function(t){for(var e in t=t||un(this.$options,this.$name))P(t[e])||(this.$props[e]=t[e]);var i=[this.$options.computed,this.$options.methods];for(e in this.$props)e in t&&function(t,e){return t.every(function(t){return!t||!c(t,e)})}(i,e)&&(this[e]=this.$props[e])},rn.prototype._initEvents=function(){var i=this;this._events=[];var t=this.$options.events;t&&t.forEach(function(t){if(c(t,"handler"))dn(i,t);else for(var e in t)dn(i,t[e],e)})},rn.prototype._unbindEvents=function(){this._events.forEach(function(t){return t()}),delete this._events},rn.prototype._initObserver=function(){var n=this,t=this.$options,o=t.attrs,e=t.props,t=t.el;!this._observer&&e&&!1!==o&&(o=C(o)?o:Object.keys(e),this._observer=new MutationObserver(function(t){var i=un(n.$options,n.$name);t.some(function(t){var e=t.attributeName,t=e.replace("data-","");return(t===n.$name?o:[f(t),f(e)]).some(function(t){return!P(i[t])&&i[t]!==n.$props[t]})})&&n.$reset()}),e=o.map(d).concat(this.$name),this._observer.observe(t,{attributes:!0,attributeFilter:e.concat(e.map(function(t){return"data-"+t}))}))},an=(hn=Qi).data,ln={},hn.component=function(s,t){var e=d(s);if(s=f(e),!t)return M(ln[s])&&(ln[s]=hn.extend(ln[s])),ln[s];hn[s]=function(t,i){for(var e=arguments.length,n=Array(e);e--;)n[e]=arguments[e];var o=hn.component(s);return o.options.functional?new o({data:M(t)?t:[].concat(n)}):t?ze(t).map(r)[0]:r(t);function r(t){var e=hn.getComponent(t,s);if(e){if(!i)return e;e.$destroy()}return new o({el:t,data:i})}};var i=M(t)?X({},t):t.options;return i.name=s,i.install&&i.install(hn,i,s),hn._initialized&&!i.functional&&yi.read(function(){return hn[s]("[uk-"+e+"],[data-uk-"+e+"]")}),ln[s]=M(t)?i:t},hn.getComponents=function(t){return t&&t[an]||{}},hn.getComponent=function(t,e){return hn.getComponents(t)[e]},hn.connect=function(t){if(t[an])for(var e in t[an])t[an][e]._callConnected();for(var i=0;i<t.attributes.length;i++){var n=Ki(t.attributes[i].name);n&&n in ln&&hn[n](t)}},hn.disconnect=function(t){for(var e in t[an])t[an][e]._callDisconnected()},function(n){var o=n.data;n.prototype.$create=function(t,e,i){return n[t](e,i)},n.prototype.$mount=function(t){var e=this.$options.name;t[o]||(t[o]={}),t[o][e]||((t[o][e]=this).$el=this.$options.el=this.$options.el||t,Rt(t,document)&&this._callConnected())},n.prototype.$reset=function(){this._callDisconnected(),this._callConnected()},n.prototype.$destroy=function(t){void 0===t&&(t=!1);var e=this.$options,i=e.el,e=e.name;i&&this._callDisconnected(),this._callHook("destroy"),i&&i[o]&&(delete i[o][e],H(i[o])||delete i[o],t&&be(this.$el))},n.prototype.$emit=function(t){this._callUpdate(t)},n.prototype.$update=function(t,e){void 0===t&&(t=this.$el),n.update(t,e)},n.prototype.$getComponent=n.getComponent;var e={};Object.defineProperties(n.prototype,{$container:Object.getOwnPropertyDescriptor(n,"container"),$name:{get:function(){var t=this.$options.name;return e[t]||(e[t]=n.prefix+d(t)),e[t]}}})}(Qi);var gn={connected:function(){Pe(this.$el,this.$name)||Ae(this.$el,this.$name)}},pn={props:{cls:Boolean,animation:"list",duration:Number,origin:String,transition:String},data:{cls:!1,animation:[!1],duration:200,origin:!1,transition:"linear",initProps:{overflow:"",height:"",paddingTop:"",paddingBottom:"",marginTop:"",marginBottom:""},hideProps:{overflow:"hidden",height:0,paddingTop:0,paddingBottom:0,marginTop:0,marginBottom:0}},computed:{hasAnimation:function(t){return!!t.animation[0]},hasTransition:function(t){t=t.animation;return this.hasAnimation&&!0===t[0]}},methods:{toggleElement:function(t,i,n){var o=this;return he.all(V(t).map(function(e){return new he(function(t){return o._toggleElement(e,i,n).then(t,et)})}))},isToggled:function(t){t=V(t||this.$el);return this.cls?Pe(t,this.cls.split(" ")[0]):!st(t,"hidden")},updateAria:function(t){!1===this.cls&&rt(t,"aria-hidden",!this.isToggled(t))},_toggleElement:function(t,e,i){var n=this;if(e=_(e)?e:ni.inProgress(t)?Pe(t,"uk-animation-leave"):Qe.inProgress(t)?"0px"===t.style.height:!this.isToggled(t),!Jt(t,"before"+(e?"show":"hide"),[this]))return he.reject();var r,i=(b(i)?i:!1!==i&&this.hasAnimation?this.hasTransition?vn(this):(r=this,function(t,e){ni.cancel(t);var i=r.animation,n=r.duration,o=r._toggle;return e?(o(t,!0),ni.in(t,i[0],n,r.origin)):ni.out(t,i[1]||i[0],n,r.origin).then(function(){return o(t,!1)})}):this._toggle)(t,e);Jt(t,e?"show":"hide",[this]);return(i||he.resolve()).then(function(){Jt(t,e?"shown":"hidden",[n]),n.$update(t)})},_toggle:function(t,e){var i;t&&(e=Boolean(e),this.cls?(i=x(this.cls," ")||e!==Pe(t,this.cls))&&Oe(t,this.cls,x(this.cls," ")?void 0:e):(i=e===t.hidden)&&(t.hidden=!e),ze("[autofocus]",t).some(function(t){return jt(t)?t.focus()||!0:t.blur()}),this.updateAria(t),i&&(Jt(t,"toggled",[this]),this.$update(t)))}}};function vn(t){var r=t.isToggled,s=t.duration,h=t.initProps,a=t.hideProps,l=t.transition,c=t._toggle;return function(t,e){var i=Qe.inProgress(t),n=t.hasChildNodes?j(We(t.firstElementChild,"marginTop"))+j(We(t.lastElementChild,"marginBottom")):0,o=jt(t)?ci(t)+(i?0:n):0;Qe.cancel(t),r(t)||c(t,!0),ci(t,""),yi.flush();n=ci(t)+(i?0:n);return ci(t,o),(e?Qe.start(t,X({},h,{overflow:"hidden",height:n}),Math.round(s*(1-o/n)),l):Qe.start(t,a,Math.round(s*(o/n)),l).then(function(){return c(t,!1)})).then(function(){return We(t,h)})}}var wn={mixins:[gn,pn],props:{targets:String,active:null,collapsible:Boolean,multiple:Boolean,toggle:String,content:String,transition:String,offset:Number},data:{targets:"> *",active:!1,animation:[!0],collapsible:!0,multiple:!1,clsOpen:"uk-open",toggle:"> .uk-accordion-title",content:"> .uk-accordion-content",transition:"ease",offset:0},computed:{items:{get:function(t,e){return ze(t.targets,e)},watch:function(t,e){var i=this;t.forEach(function(t){return mn(Ee(i.content,t),!Pe(t,i.clsOpen))}),e||Pe(t,this.clsOpen)||(t=!1!==this.active&&t[Number(this.active)]||!this.collapsible&&t[0])&&this.toggle(t,!1)},immediate:!0}},events:[{name:"click",delegate:function(){return this.targets+" "+this.$props.toggle},handler:function(t){t.preventDefault(),this.toggle(pe(ze(this.targets+" "+this.$props.toggle,this.$el),t.current))}}],methods:{toggle:function(t,o){var r=this,e=[this.items[ve(t,this.items)]],t=Wt(this.items,"."+this.clsOpen);this.multiple||x(t,e[0])||(e=e.concat(t)),!this.collapsible&&t.length<2&&!Wt(e,":not(."+this.clsOpen+")").length||e.forEach(function(t){return r.toggleElement(t,!Pe(t,r.clsOpen),function(e,i){Oe(e,r.clsOpen,i);var n=Ee((e._wrapper?"> * ":"")+r.content,e);if(!1!==o&&r.hasTransition)return e._wrapper||(e._wrapper=Le(n,"<div"+(i?" hidden":"")+">")),mn(n,!1),vn(r)(e._wrapper,i).then(function(){var t;mn(n,!i),delete e._wrapper,Me(n),i&&(Vi(t=Ee(r.$props.toggle,e))||Ri(t,{offset:r.offset}))});mn(n,!i)})})}}};function mn(t,e){t&&(t.hidden=e)}var xn={mixins:[gn,pn],args:"animation",props:{close:String},data:{animation:[!0],selClose:".uk-alert-close",duration:150,hideProps:X({opacity:0},pn.data.hideProps)},events:[{name:"click",delegate:function(){return this.selClose},handler:function(t){t.preventDefault(),this.close()}}],methods:{close:function(){var t=this;this.toggleElement(this.$el).then(function(){return t.$destroy(!0)})}}},yn={args:"autoplay",props:{automute:Boolean,autoplay:Boolean},data:{automute:!1,autoplay:!0},computed:{inView:function(t){return"inview"===t.autoplay}},connected:function(){this.inView&&!st(this.$el,"preload")&&(this.$el.preload="none"),this.automute&&Ai(this.$el)},update:{read:function(){return{visible:jt(this.$el)&&"hidden"!==We(this.$el,"visibility"),inView:this.inView&&Vi(this.$el)}},write:function(t){var e=t.visible,t=t.inView;!e||this.inView&&!t?_i(this.$el):(!0===this.autoplay||this.inView&&t)&&zi(this.$el)},events:["resize","scroll"]}},kn={mixins:[gn,yn],props:{width:Number,height:Number},data:{automute:!0},update:{read:function(){var t=this.$el,e=function(t){for(;t=Dt(t);)if("static"!==We(t,"position"))return t}(t)||t.parentNode,i=e.offsetHeight,e=e.offsetWidth,i=ot.cover({width:this.width||t.naturalWidth||t.videoWidth||t.clientWidth,height:this.height||t.naturalHeight||t.videoHeight||t.clientHeight},{width:e+(e%2?1:0),height:i+(i%2?1:0)});return!(!i.width||!i.height)&&i},write:function(t){var e=t.height,t=t.width;We(this.$el,{height:e,width:t})},events:["resize"]}};var Cn,bn={props:{pos:String,offset:null,flip:Boolean,clsPos:String},data:{pos:"bottom-"+(ut?"right":"left"),flip:!0,offset:!1,clsPos:""},computed:{pos:function(t){t=t.pos;return(t+(x(t,"-")?"":"-center")).split("-")},dir:function(){return this.pos[0]},align:function(){return this.pos[1]}},methods:{positionAt:function(t,e,i){var n;De(t,this.clsPos+"-(top|bottom|left|right)(-[a-z]+)?");var o=this.offset,r=this.getAxis();D(o)||(o=(n=Ee(o))?si(n)["x"===r?"left":"top"]-si(e)["x"===r?"right":"bottom"]:0);o=ri(t,e,"x"===r?wi(this.dir)+" "+this.align:this.align+" "+wi(this.dir),"x"===r?this.dir+" "+this.align:this.align+" "+this.dir,"x"===r?""+("left"===this.dir?-o:o):" "+("top"===this.dir?-o:o),null,this.flip,i).target,i=o.x,o=o.y;this.dir="x"===r?i:o,this.align="x"===r?o:i,Oe(t,this.clsPos+"-"+this.dir+"-"+this.align,!1===this.offset)},getAxis:function(){return"top"===this.dir||"bottom"===this.dir?"y":"x"}}},Ln={mixins:[bn,pn],args:"pos",props:{mode:"list",toggle:Boolean,boundary:Boolean,boundaryAlign:Boolean,delayShow:Number,delayHide:Number,clsDrop:String},data:{mode:["click","hover"],toggle:"- *",boundary:lt&&window,boundaryAlign:!1,delayShow:0,delayHide:800,clsDrop:!1,animation:["uk-animation-fade"],cls:"uk-open"},computed:{boundary:function(t,e){return kt(t.boundary,e)},clsDrop:function(t){return t.clsDrop||"uk-"+this.$options.name},clsPos:function(){return this.clsDrop}},created:function(){this.tracker=new Mi},connected:function(){Ae(this.$el,this.clsDrop);var t=this.$props.toggle;this.toggle=t&&this.$create("toggle",kt(t,this.$el),{target:this.$el,mode:this.mode}),this.toggle||Jt(this.$el,"updatearia")},disconnected:function(){this.isActive()&&(Cn=null)},events:[{name:"click",delegate:function(){return"."+this.clsDrop+"-close"},handler:function(t){t.preventDefault(),this.hide(!1)}},{name:"click",delegate:function(){return'a[href^="#"]'},handler:function(t){var e=t.defaultPrevented,t=t.current.hash;e||!t||Rt(t,this.$el)||this.hide(!1)}},{name:"beforescroll",handler:function(){this.hide(!1)}},{name:"toggle",self:!0,handler:function(t,e){t.preventDefault(),this.isToggled()?this.hide(!1):this.show(e,!1)}},{name:"toggleshow",self:!0,handler:function(t,e){t.preventDefault(),this.show(e)}},{name:"togglehide",self:!0,handler:function(t){t.preventDefault(),this.hide()}},{name:mt,filter:function(){return x(this.mode,"hover")},handler:function(t){oe(t)||this.clearTimers()}},{name:xt,filter:function(){return x(this.mode,"hover")},handler:function(t){!oe(t)&&t.relatedTarget&&this.hide()}},{name:"toggled",self:!0,handler:function(){this.isToggled()&&(this.clearTimers(),this.position())}},{name:"show",self:!0,handler:function(){var o=this;(Cn=this).tracker.init(),Jt(this.$el,"updatearia"),Gt(this.$el,"hide",Yt(document,pt,function(t){var n=t.target;return!Rt(n,o.$el)&&Gt(document,wt+" "+yt+" scroll",function(t){var e=t.defaultPrevented,i=t.type,t=t.target;e||i!==wt||n!==t||o.toggle&&Rt(n,o.toggle.$el)||o.hide(!1)},!0)}),{self:!0}),Gt(this.$el,"hide",Yt(document,"keydown",function(t){27===t.keyCode&&(t.preventDefault(),o.hide(!1))}),{self:!0})}},{name:"beforehide",self:!0,handler:function(){this.clearTimers()}},{name:"hide",handler:function(t){t=t.target;this.$el===t?(Cn=this.isActive()?null:Cn,Jt(this.$el,"updatearia"),this.tracker.cancel()):Cn=null===Cn&&Rt(t,this.$el)&&this.isToggled()?this:Cn}},{name:"updatearia",self:!0,handler:function(t,e){t.preventDefault(),this.updateAria(this.$el),(e||this.toggle)&&(rt((e||this.toggle).$el,"aria-expanded",this.isToggled()),Oe(this.toggle.$el,this.cls,this.isToggled()))}}],update:{write:function(){this.isToggled()&&!ni.inProgress(this.$el)&&this.position()},events:["resize"]},methods:{show:function(t,e){var i,n=this;if(void 0===t&&(t=this.toggle),void 0===e&&(e=!0),this.isToggled()&&t&&this.toggle&&t.$el!==this.toggle.$el&&this.hide(!1),this.toggle=t,this.clearTimers(),!this.isActive()){if(Cn){if(e&&Cn.isDelaying)return void(this.showTimer=setTimeout(this.show,10));for(;Cn&&i!==Cn&&!Rt(this.$el,Cn.$el);)(i=Cn).hide(!1)}this.showTimer=setTimeout(function(){return!n.isToggled()&&n.toggleElement(n.$el,!0)},e&&this.delayShow||0)}},hide:function(t){var e=this;void 0===t&&(t=!0);function i(){return e.toggleElement(e.$el,!1,!1)}var n,o;this.clearTimers(),this.isDelaying=(n=this.$el,o=[],Te(n,function(t){return"static"!==We(t,"position")&&o.push(t)}),o.some(function(t){return e.tracker.movesTo(t)})),t&&this.isDelaying?this.hideTimer=setTimeout(this.hide,50):t&&this.delayHide?this.hideTimer=setTimeout(i,this.delayHide):i()},clearTimers:function(){clearTimeout(this.showTimer),clearTimeout(this.hideTimer),this.showTimer=null,this.hideTimer=null,this.isDelaying=!1},isActive:function(){return Cn===this},position:function(){Ne(this.$el,this.clsDrop+"-stack"),Oe(this.$el,this.clsDrop+"-boundary",this.boundaryAlign);var t,e=si(this.boundary),i=this.boundaryAlign?e:si(this.toggle.$el);"justify"===this.align?(t="y"===this.getAxis()?"width":"height",We(this.$el,t,i[t])):this.$el.offsetWidth>Math.max(e.right-i.left,i.right-e.left)&&Ae(this.$el,this.clsDrop+"-stack"),this.positionAt(this.$el,this.boundaryAlign?this.boundary:this.toggle.$el,this.boundary)}}};var $n={mixins:[gn],args:"target",props:{target:Boolean},data:{target:!1},computed:{input:function(t,e){return Ee(Ft,e)},state:function(){return this.input.nextElementSibling},target:function(t,e){t=t.target;return t&&(!0===t&&this.input.parentNode===e&&this.input.nextElementSibling||kt(t,e))}},update:function(){var t,e,i=this.target,n=this.input;!i||i[e=Vt(i)?"value":"textContent"]!==(n=n.files&&n.files[0]?n.files[0].name:_t(n,"select")&&(t=ze("option",n).filter(function(t){return t.selected})[0])?t.textContent:n.value)&&(i[e]=n)},events:[{name:"change",handler:function(){this.$update()}},{name:"reset",el:function(){return Nt(this.$el,"form")},handler:function(){this.$update()}}]},Mn={update:{read:function(t){var e=Vi(this.$el);if(!e||t.isInView===e)return!1;t.isInView=e},write:function(){this.$el.src=""+this.$el.src},events:["scroll","resize"]}},Bn={props:{margin:String,firstColumn:Boolean},data:{margin:"uk-margin-small-top",firstColumn:"uk-first-column"},update:{read:function(){var i,t=In(this.$el.children);return{rows:t,columns:(i=[[]],t.forEach(function(t){return Sn(t,"left","right").forEach(function(t,e){return i[e]=i[e]?i[e].concat(t):t})}),ut?i.reverse():i)}},write:function(t){var i=this,n=t.columns;t.rows.forEach(function(t,e){return t.forEach(function(t){Oe(t,i.margin,0!==e),Oe(t,i.firstColumn,x(n[0],t))})})},events:["resize"]}};function In(t){return Sn(t,"top","bottom")}function Sn(t,e,i){for(var n=[[]],o=0;o<t.length;o++){var r=t[o];if(jt(r))for(var s=Tn(r),h=n.length-1;0<=h;h--){var a=n[h];if(!a[0]){a.push(r);break}var l=void 0,l=a[0].offsetParent===r.offsetParent?Tn(a[0]):(s=Tn(r,!0),Tn(a[0],!0));if(s[e]>=l[i]-1&&s[e]!==l[e]){n.push([r]);break}if(s[i]-1>l[e]||s[e]===l[e]){a.push(r);break}if(0===h){n.unshift([r]);break}}}return n}function Tn(t,e){void 0===e&&(e=!1);var i=t.offsetTop,n=t.offsetLeft,o=t.offsetHeight,r=t.offsetWidth;return e&&(i=(t=li(t))[0],n=t[1]),{top:i,left:n,bottom:i+o,right:n+r}}var En={extends:Bn,mixins:[gn],name:"grid",props:{masonry:Boolean,parallax:Number},data:{margin:"uk-grid-margin",clsStack:"uk-grid-stack",masonry:!1,parallax:0},connected:function(){this.masonry&&Ae(this.$el,"uk-flex-top uk-flex-wrap-top")},update:[{write:function(t){t=t.columns;Oe(this.$el,this.clsStack,t.length<2)},events:["resize"]},{read:function(t){var e=t.columns,i=t.rows,n=Ut(this.$el);if(!n.length||!this.masonry&&!this.parallax)return!1;var o,r,s=n.some(Qe.inProgress),h=!1,a=e.map(function(t){return t.reduce(function(t,e){return t+e.offsetHeight},0)}),l=(t=n,o=this.margin,j((n=t.filter(function(t){return Pe(t,o)})[0])?We(n,"marginTop"):We(t[0],"paddingLeft"))*(i.length-1)),c=Math.max.apply(Math,a)+l;this.masonry&&(e=e.map(function(t){return K(t,"offsetTop")}),t=e,r=i.map(function(t){return Math.max.apply(Math,t.map(function(t){return t.offsetHeight}))}),h=t.map(function(i){var n=0;return i.map(function(t,e){return n+=e?r[e-1]-i[e-1].offsetHeight:0})}));var u=Math.abs(this.parallax);return{padding:u=u&&a.reduce(function(t,e,i){return Math.max(t,e+l+(i%2?u:u/8)-c)},0),columns:e,translates:h,height:!s&&(this.masonry?c:"")}},write:function(t){var e=t.height,t=t.padding;We(this.$el,"paddingBottom",t||""),!1!==e&&We(this.$el,"height",e)},events:["resize"]},{read:function(t){t=t.height;return{scrolled:!!this.parallax&&qi(this.$el,t?t-ci(this.$el):0)*Math.abs(this.parallax)}},write:function(t){var e=t.columns,n=t.scrolled,o=t.translates;!1===n&&!o||e.forEach(function(t,i){return t.forEach(function(t,e){return We(t,"transform",n||o?"translateY("+((o&&-o[i][e])+(n?i%2?n:n/8:0))+"px)":"")})})},events:["scroll","resize"]}]};var zn=ct?{props:{selMinHeight:String},data:{selMinHeight:!1,forceHeight:!1},computed:{elements:function(t,e){t=t.selMinHeight;return t?ze(t,e):[e]}},update:[{read:function(){We(this.elements,"height","")},order:-5,events:["resize"]},{write:function(){var i=this;this.elements.forEach(function(t){var e=j(We(t,"minHeight"));e&&(i.forceHeight||Math.round(e+fi(t,"height","content-box"))>=t.offsetHeight)&&We(t,"height",e)})},order:5,events:["resize"]}]}:{},_n={mixins:[zn],args:"target",props:{target:String,row:Boolean},data:{target:"> *",row:!0,forceHeight:!0},computed:{elements:function(t,e){return ze(t.target,e)}},update:{read:function(){return{rows:(this.row?In(this.elements):[this.elements]).map(An)}},write:function(t){t.rows.forEach(function(t){var i=t.heights;return t.elements.forEach(function(t,e){return We(t,"minHeight",i[e])})})},events:["resize"]}};function An(t){if(t.length<2)return{heights:[""],elements:t};var e=Nn(t),i=e.heights,n=e.max,o=t.some(function(t){return t.style.minHeight}),e=t.some(function(t,e){return!t.style.minHeight&&i[e]<n});return o&&e&&(We(t,"minHeight",""),e=Nn(t),i=e.heights,n=e.max),{heights:i=t.map(function(t,e){return i[e]===n&&j(t.style.minHeight).toFixed(2)!==n.toFixed(2)?"":n}),elements:t}}function Nn(t){t=t.map(function(t){return si(t).height-fi(t,"height","content-box")});return{heights:t,max:Math.max.apply(null,t)}}var Dn={mixins:[zn],props:{expand:Boolean,offsetTop:Boolean,offsetBottom:Boolean,minHeight:Number},data:{expand:!1,offsetTop:!1,offsetBottom:!1,minHeight:0},update:{read:function(t){var e=t.minHeight;if(!jt(this.$el))return!1;var i="",n=fi(this.$el,"height","content-box");if(this.expand){if(this.$el.dataset.heightExpand="",Ee("[data-height-expand]")!==this.$el)return!1;i=ci(window)-(Hn(document.documentElement)-Hn(this.$el))-n||""}else{i="calc(100vh";this.offsetTop&&(i+=0<(t=si(this.$el).top)&&t<ci(window)/2?" - "+t+"px":""),!0===this.offsetBottom?i+=" - "+Hn(this.$el.nextElementSibling)+"px":D(this.offsetBottom)?i+=" - "+this.offsetBottom+"vh":this.offsetBottom&&l(this.offsetBottom,"px")?i+=" - "+j(this.offsetBottom)+"px":A(this.offsetBottom)&&(i+=" - "+Hn(kt(this.offsetBottom,this.$el))+"px"),i+=(n?" - "+n+"px":"")+")"}return{minHeight:i,prev:e}},write:function(t){var e=t.minHeight,t=t.prev;We(this.$el,{minHeight:e}),e!==t&&this.$update(this.$el,"resize"),this.minHeight&&j(We(this.$el,"minHeight"))<this.minHeight&&We(this.$el,"minHeight",this.minHeight)},events:["resize"]}};function Hn(t){return t&&si(t).height||0}var Pn={args:"src",props:{id:Boolean,icon:String,src:String,style:String,width:Number,height:Number,ratio:Number,class:String,strokeAnimation:Boolean,focusable:Boolean,attributes:"list"},data:{ratio:1,include:["style","class","focusable"],class:"",strokeAnimation:!1},beforeConnect:function(){this.class+=" uk-svg"},connected:function(){var t,e=this;!this.icon&&x(this.src,"#")&&(t=this.src.split("#"),this.src=t[0],this.icon=t[1]),this.svg=this.getSvg().then(function(t){return e.applyAttributes(t),e.svgEl=function(t,e){if(Zt(e)||"CANVAS"===e.tagName){e.hidden=!0;var i=e.nextElementSibling;return Vn(t,i)?i:ke(e,t)}i=e.lastElementChild;return Vn(t,i)?i:xe(e,t)}(t,e.$el)},et)},disconnected:function(){var e=this;Zt(this.$el)&&(this.$el.hidden=!1),this.svg&&this.svg.then(function(t){return(!e._connected||t!==e.svgEl)&&be(t)},et),this.svg=this.svgEl=null},update:{read:function(){return!!(this.strokeAnimation&&this.svgEl&&jt(this.svgEl))},write:function(){var t,e;t=this.svgEl,(e=Fn(t))&&t.style.setProperty("--uk-animation-stroke",e)},type:["resize"]},methods:{getSvg:function(){var e=this;return function(i){if(On[i])return On[i];return On[i]=new he(function(e,t){i?v(i,"data:")?e(decodeURIComponent(i.split(",")[1])):de(i).then(function(t){return e(t.response)},function(){return t("SVG not found.")}):t()})}(this.src).then(function(t){return function(t,e){e&&x(t,"<symbol")&&(t=function(t,e){if(!jn[t]){var i;for(jn[t]={},Zn.lastIndex=0;i=Zn.exec(t);)jn[t][i[3]]='<svg xmlns="http://www.w3.org/2000/svg"'+i[1]+"svg>"}return jn[t][e]}(t,e)||t);return(t=Ee(t.substr(t.indexOf("<svg"))))&&t.hasChildNodes()&&t}(t,e.icon)||he.reject("SVG not found.")})},applyAttributes:function(i){var t,e,n=this;for(t in this.$options.props)this[t]&&x(this.include,t)&&rt(i,t,this[t]);for(e in this.attributes){var o=this.attributes[e].split(":",2),r=o[0],o=o[1];rt(i,r,o)}this.id||ht(i,"id");var s=["width","height"],h=[this.width,this.height];h.some(function(t){return t})||(h=s.map(function(t){return rt(i,t)}));var a=rt(i,"viewBox");a&&!h.some(function(t){return t})&&(h=a.split(" ").slice(2)),h.forEach(function(t,e){(t=(0|t)*n.ratio)&&rt(i,s[e],t),t&&!h[1^e]&&ht(i,s[1^e])}),rt(i,"data-svg",this.icon||this.src)}}},On={};var Zn=/<symbol([^]*?id=(['"])(.+?)\2[^]*?<\/)symbol>/g,jn={};function Fn(t){return Math.ceil(Math.max.apply(Math,[0].concat(ze("[stroke]",t).map(function(t){try{return t.getTotalLength()}catch(t){return 0}}))))}function Vn(t,e){return rt(t,"data-svg")===rt(e,"data-svg")}var Wn={spinner:'<svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" cx="15" cy="15" r="14"/></svg>',totop:'<svg width="18" height="10" viewBox="0 0 18 10" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 9 9 1 17 9 "/></svg>',marker:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="9" y="4" width="1" height="11"/><rect x="4" y="9" width="11" height="1"/></svg>',"close-icon":'<svg width="14" height="14" viewBox="0 0 14 14" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.1" x1="1" y1="1" x2="13" y2="13"/><line fill="none" stroke="#000" stroke-width="1.1" x1="13" y1="1" x2="1" y2="13"/></svg>',"close-large":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.4" x1="1" y1="1" x2="19" y2="19"/><line fill="none" stroke="#000" stroke-width="1.4" x1="19" y1="1" x2="1" y2="19"/></svg>',"navbar-toggle-icon":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect y="9" width="20" height="2"/><rect y="3" width="20" height="2"/><rect y="15" width="20" height="2"/></svg>',"overlay-icon":'<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><rect x="19" y="0" width="1" height="40"/><rect x="0" y="19" width="40" height="1"/></svg>',"pagination-next":'<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 1 6 6 1 11"/></svg>',"pagination-previous":'<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="6 1 1 6 6 11"/></svg>',"search-icon":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9" cy="9" r="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M14,14 L18,18 L14,14 Z"/></svg>',"search-large":'<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.8" cx="17.5" cy="17.5" r="16.5"/><line fill="none" stroke="#000" stroke-width="1.8" x1="38" y1="39" x2="29" y2="30"/></svg>',"search-navbar":'<svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10.5" cy="10.5" r="9.5"/><line fill="none" stroke="#000" stroke-width="1.1" x1="23" y1="23" x2="17" y2="17"/></svg>',"slidenav-next":'<svg width="14px" height="24px" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="1.225,23 12.775,12 1.225,1 "/></svg>',"slidenav-next-large":'<svg width="25px" height="40px" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="4.002,38.547 22.527,20.024 4,1.5 "/></svg>',"slidenav-previous":'<svg width="14px" height="24px" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="12.775,1 1.225,12 12.775,23 "/></svg>',"slidenav-previous-large":'<svg width="25px" height="40px" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="20.527,1.5 2,20.024 20.525,38.547 "/></svg>'},Rn={install:function(o){o.icon.add=function(t,e){var i,n=A(t)?((i={})[t]=e,i):t;J(n,function(t,e){Wn[e]=t,delete Jn[e]}),o._initialized&&Te(document.body,function(t){return J(o.getComponents(t),function(t){t.$options.isIcon&&t.icon in n&&t.$reset()})})}},extends:Pn,args:"icon",props:["icon"],data:{include:["focusable"]},isIcon:!0,beforeConnect:function(){Ae(this.$el,"uk-icon")},methods:{getSvg:function(){var t=function(t){if(!Wn[t])return null;Jn[t]||(Jn[t]=Ee((Wn[function(t){return ut?Y(Y(t,"left","right"),"previous","next"):t}(t)]||Wn[t]).trim()));return Jn[t].cloneNode(!0)}(this.icon);return t?he.resolve(t):he.reject("Icon not found.")}}},qn={args:!1,extends:Rn,data:function(t){return{icon:d(t.constructor.options.name)}},beforeConnect:function(){Ae(this.$el,this.$name)}},Un={extends:qn,beforeConnect:function(){Ae(this.$el,"uk-slidenav")},computed:{icon:function(t,e){t=t.icon;return Pe(e,"uk-slidenav-large")?t+"-large":t}}},Yn={extends:qn,computed:{icon:function(t,e){t=t.icon;return Pe(e,"uk-search-icon")&&qt(e,".uk-search-large").length?"search-large":qt(e,".uk-search-navbar").length?"search-navbar":t}}},Xn={extends:qn,computed:{icon:function(){return"close-"+(Pe(this.$el,"uk-close-large")?"large":"icon")}}},Gn={extends:qn,connected:function(){var e=this;this.svg.then(function(t){return 1!==e.ratio&&We(Ee("circle",t),"strokeWidth",1/e.ratio)},et)}},Jn={};var Kn={args:"dataSrc",props:{dataSrc:String,dataSrcset:Boolean,sizes:String,width:Number,height:Number,offsetTop:String,offsetLeft:String,target:String},data:{dataSrc:"",dataSrcset:!1,sizes:!1,width:!1,height:!1,offsetTop:"50vh",offsetLeft:0,target:!1},computed:{cacheKey:function(t){t=t.dataSrc;return this.$name+"."+t},width:function(t){var e=t.width,t=t.dataWidth;return e||t},height:function(t){var e=t.height,t=t.dataHeight;return e||t},sizes:function(t){var e=t.sizes,t=t.dataSizes;return e||t},isImg:function(t,e){return ro(e)},target:{get:function(t){t=t.target;return[this.$el].concat(Ct(t,this.$el))},watch:function(){this.observe()}},offsetTop:function(t){return mi(t.offsetTop,"height")},offsetLeft:function(t){return mi(t.offsetLeft,"width")}},connected:function(){ho[this.cacheKey]?Qn(this.$el,ho[this.cacheKey],this.dataSrcset,this.sizes):this.isImg&&this.width&&this.height&&Qn(this.$el,function(t,e,i){i&&(i=ot.ratio({width:t,height:e},"width",mi(eo(i))),t=i.width,e=i.height);return'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="'+t+'" height="'+e+'"></svg>'}(this.width,this.height,this.sizes)),this.observer=new Ji(this.load,{rootMargin:this.offsetTop+"px "+this.offsetLeft+"px"}),requestAnimationFrame(this.observe)},disconnected:function(){this.observer.disconnect()},update:{read:function(t){var e=this,t=t.image;if(t||"complete"!==document.readyState||this.load(this.observer.takeRecords()),this.isImg)return!1;t&&t.then(function(t){return t&&""!==t.currentSrc&&Qn(e.$el,so(t))})},write:function(t){var e,i,n;this.dataSrcset&&1!==window.devicePixelRatio&&(!(i=We(this.$el,"backgroundSize")).match(/^(auto\s?)+$/)&&j(i)!==t.bgSize||(t.bgSize=(e=this.dataSrcset,i=this.sizes,n=mi(eo(i)),(e=(e.match(oo)||[]).map(j).sort(function(t,e){return t-e})).filter(function(t){return n<=t})[0]||e.pop()||""),We(this.$el,"backgroundSize",t.bgSize+"px")))},events:["resize"]},methods:{load:function(t){var e=this;t.some(function(t){return P(t.isIntersecting)||t.isIntersecting})&&(this._data.image=fe(this.dataSrc,this.dataSrcset,this.sizes).then(function(t){return Qn(e.$el,so(t),t.srcset,t.sizes),ho[e.cacheKey]=so(t),t},function(t){return Jt(e.$el,new t.constructor(t.type,t))}),this.observer.disconnect())},observe:function(){var e=this;this._connected&&!this._data.image&&this.target.forEach(function(t){return e.observer.observe(t)})}}};function Qn(t,e,i,n){ro(t)?(n&&(t.sizes=n),i&&(t.srcset=i),e&&(t.src=e)):e&&!x(t.style.backgroundImage,e)&&(We(t,"backgroundImage","url("+Pt(e)+")"),Jt(t,Kt("load",!1)))}var to=/\s*(.*?)\s*(\w+|calc\(.*?\))\s*(?:,|$)/g;function eo(t){var e,i;for(to.lastIndex=0;e=to.exec(t);)if(!e[1]||window.matchMedia(e[1]).matches){e=v(i=e[2],"calc")?i.substring(5,i.length-1).replace(io,function(t){return mi(t)}).replace(/ /g,"").match(no).reduce(function(t,e){return t+ +e},0):i;break}return e||"100vw"}var io=/\d+(?:\w+|%)/g,no=/[+-]?(\d+)/g;var oo=/\s+\d+w\s*(?:,|$)/g;function ro(t){return"IMG"===t.tagName}function so(t){return t.currentSrc||t.src}var ho,ao="__test__";try{(ho=window.sessionStorage||{})[ao]=1,delete ho[ao]}catch(t){ho={}}var lo={props:{media:Boolean},data:{media:!1},computed:{matchMedia:function(){var t=function(t){if(A(t)){if("@"===t[0])t=j(Ye("breakpoint-"+t.substr(1)));else if(isNaN(t))return t}return!(!t||isNaN(t))&&"(min-width: "+t+"px)"}(this.media);return!t||window.matchMedia(t).matches}}};var co={mixins:[gn,lo],props:{fill:String},data:{fill:"",clsWrapper:"uk-leader-fill",clsHide:"uk-leader-hide",attrFill:"data-fill"},computed:{fill:function(t){return t.fill||Ye("leader-fill-content")}},connected:function(){var t=$e(this.$el,'<span class="'+this.clsWrapper+'">');this.wrapper=t[0]},disconnected:function(){Me(this.wrapper.childNodes)},update:{read:function(t){var e=t.changed,i=t.width,t=i;return{width:i=Math.floor(this.$el.offsetWidth/2),fill:this.fill,changed:e||t!==i,hide:!this.matchMedia}},write:function(t){Oe(this.wrapper,this.clsHide,t.hide),t.changed&&(t.changed=!1,rt(this.wrapper,this.attrFill,new Array(t.width).join(t.fill)))},events:["resize"]}},uo={props:{container:Boolean},data:{container:!0},computed:{container:function(t){t=t.container;return!0===t&&this.$container||t&&Ee(t)}}},fo=[],go={mixins:[gn,uo,pn],props:{selPanel:String,selClose:String,escClose:Boolean,bgClose:Boolean,stack:Boolean},data:{cls:"uk-open",escClose:!0,bgClose:!0,overlay:!0,stack:!1},computed:{panel:function(t,e){return Ee(t.selPanel,e)},transitionElement:function(){return this.panel},bgClose:function(t){return t.bgClose&&this.panel}},beforeDisconnect:function(){this.isToggled()&&this.toggleElement(this.$el,!1,!1)},events:[{name:"click",delegate:function(){return this.selClose},handler:function(t){t.preventDefault(),this.hide()}},{name:"toggle",self:!0,handler:function(t){t.defaultPrevented||(t.preventDefault(),this.isToggled()===x(fo,this)&&this.toggle())}},{name:"beforeshow",self:!0,handler:function(t){if(x(fo,this))return!1;!this.stack&&fo.length?(he.all(fo.map(function(t){return t.hide()})).then(this.show),t.preventDefault()):fo.push(this)}},{name:"show",self:!0,handler:function(){var o=this;ui(window)-ui(document)&&this.overlay&&We(document.body,"overflowY","scroll"),this.stack&&We(this.$el,"zIndex",j(We(this.$el,"zIndex"))+fo.length),Ae(document.documentElement,this.clsPage),this.bgClose&&Gt(this.$el,"hide",Yt(document,pt,function(t){var n=t.target;G(fo)!==o||o.overlay&&!Rt(n,o.$el)||Rt(n,o.panel)||Gt(document,wt+" "+yt+" scroll",function(t){var e=t.defaultPrevented,i=t.type,t=t.target;e||i!==wt||n!==t||o.hide()},!0)}),{self:!0}),this.escClose&&Gt(this.$el,"hide",Yt(document,"keydown",function(t){27===t.keyCode&&G(fo)===o&&(t.preventDefault(),o.hide())}),{self:!0})}},{name:"hidden",self:!0,handler:function(){var e=this;fo.splice(fo.indexOf(this),1),fo.length||We(document.body,"overflowY",""),We(this.$el,"zIndex",""),fo.some(function(t){return t.clsPage===e.clsPage})||Ne(document.documentElement,this.clsPage)}}],methods:{toggle:function(){return this.isToggled()?this.hide():this.show()},show:function(){var e=this;return this.container&&this.$el.parentNode!==this.container?(xe(this.container,this.$el),new he(function(t){return requestAnimationFrame(function(){return e.show().then(t)})})):this.toggleElement(this.$el,!0,po(this))},hide:function(){return this.toggleElement(this.$el,!1,po(this))}}};function po(t){var s=t.transitionElement,h=t._toggle;return function(o,r){return new he(function(i,n){return Gt(o,"show hide",function(){o._reject&&o._reject(),o._reject=n,h(o,r);var t=Gt(s,"transitionstart",function(){Gt(s,"transitionend transitioncancel",i,{self:!0}),clearTimeout(e)},{self:!0}),e=setTimeout(function(){t(),i()},q(We(s,"transitionDuration")))})})}}var vo={install:function(t){var h=t.modal;function n(t,e,i,n){e=X({bgClose:!1,escClose:!0,labels:h.labels},e);var o=h.dialog(t(e),e),r=new se,s=!1;return Yt(o.$el,"submit","form",function(t){t.preventDefault(),r.resolve(n&&n(o)),s=!0,o.hide()}),Yt(o.$el,"hide",function(){return!s&&i(r)}),r.promise.dialog=o,r.promise}h.dialog=function(t,e){var i=h('<div class="uk-modal"> <div class="uk-modal-dialog">'+t+"</div> </div>",e);return i.show(),Yt(i.$el,"hidden",function(){return he.resolve().then(function(){return i.$destroy(!0)})},{self:!0}),i},h.alert=function(e,t){return n(function(t){t=t.labels;return'<div class="uk-modal-body">'+(A(e)?e:me(e))+'</div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-primary uk-modal-close" autofocus>'+t.ok+"</button> </div>"},t,function(t){return t.resolve()})},h.confirm=function(e,t){return n(function(t){t=t.labels;return'<form> <div class="uk-modal-body">'+(A(e)?e:me(e))+'</div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-default uk-modal-close" type="button">'+t.cancel+'</button> <button class="uk-button uk-button-primary" autofocus>'+t.ok+"</button> </div> </form>"},t,function(t){return t.reject()})},h.prompt=function(e,i,t){return n(function(t){t=t.labels;return'<form class="uk-form-stacked"> <div class="uk-modal-body"> <label>'+(A(e)?e:me(e))+'</label> <input class="uk-input" value="'+(i||"")+'" autofocus> </div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-default uk-modal-close" type="button">'+t.cancel+'</button> <button class="uk-button uk-button-primary">'+t.ok+"</button> </div> </form>"},t,function(t){return t.resolve(null)},function(t){return Ee("input",t.$el).value})},h.labels={ok:"Ok",cancel:"Cancel"}},mixins:[go],data:{clsPage:"uk-modal-page",selPanel:".uk-modal-dialog",selClose:".uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full"},events:[{name:"show",self:!0,handler:function(){Pe(this.panel,"uk-margin-auto-vertical")?Ae(this.$el,"uk-flex"):We(this.$el,"display","block"),ci(this.$el)}},{name:"hidden",self:!0,handler:function(){We(this.$el,"display",""),Ne(this.$el,"uk-flex")}}]};var wo={extends:wn,data:{targets:"> .uk-parent",toggle:"> a",content:"> ul"}},mo={mixins:[gn,zn],props:{dropdown:String,mode:"list",align:String,offset:Number,boundary:Boolean,boundaryAlign:Boolean,clsDrop:String,delayShow:Number,delayHide:Number,dropbar:Boolean,dropbarMode:String,dropbarAnchor:Boolean,duration:Number},data:{dropdown:".uk-navbar-nav > li",align:ut?"right":"left",clsDrop:"uk-navbar-dropdown",mode:void 0,offset:void 0,delayShow:void 0,delayHide:void 0,boundaryAlign:void 0,flip:"x",boundary:!0,dropbar:!1,dropbarMode:"slide",dropbarAnchor:!1,duration:200,forceHeight:!0,selMinHeight:".uk-navbar-nav > li > a, .uk-navbar-item, .uk-navbar-toggle"},computed:{boundary:function(t,e){var i=t.boundary,t=t.boundaryAlign;return!0===i||t?e:i},dropbarAnchor:function(t,e){return kt(t.dropbarAnchor,e)},pos:function(t){return"bottom-"+t.align},dropbar:{get:function(t){t=t.dropbar;return t?(t=this._dropbar||kt(t,this.$el)||Ee("+ .uk-navbar-dropbar",this.$el))||(this._dropbar=Ee("<div></div>")):null},watch:function(t){Ae(t,"uk-navbar-dropbar")},immediate:!0},dropdowns:{get:function(t,e){return ze(t.dropdown+" ."+t.clsDrop,e)},watch:function(t){var e=this;this.$create("drop",t.filter(function(t){return!e.getDropdown(t)}),X({},this.$props,{boundary:this.boundary,pos:this.pos,offset:this.dropbar||this.offset}))},immediate:!0}},disconnected:function(){this.dropbar&&be(this.dropbar),delete this._dropbar},events:[{name:"mouseover",delegate:function(){return this.dropdown},handler:function(t){var e=t.current,t=this.getActive();t&&t.toggle&&!Rt(t.toggle.$el,e)&&!t.tracker.movesTo(t.$el)&&t.hide(!1)}},{name:"mouseleave",el:function(){return this.dropbar},handler:function(){var t=this.getActive();t&&!this.dropdowns.some(function(t){return _t(t,":hover")})&&t.hide()}},{name:"beforeshow",capture:!0,filter:function(){return this.dropbar},handler:function(){this.dropbar.parentNode||ke(this.dropbarAnchor||this.$el,this.dropbar)}},{name:"show",filter:function(){return this.dropbar},handler:function(t,e){var i=e.$el,e=e.dir;Pe(i,this.clsDrop)&&("slide"===this.dropbarMode&&Ae(this.dropbar,"uk-navbar-dropbar-slide"),this.clsDrop&&Ae(i,this.clsDrop+"-dropbar"),"bottom"===e&&this.transitionTo(i.offsetHeight+j(We(i,"marginTop"))+j(We(i,"marginBottom")),i))}},{name:"beforehide",filter:function(){return this.dropbar},handler:function(t,e){var i=e.$el,e=this.getActive();_t(this.dropbar,":hover")&&e&&e.$el===i&&t.preventDefault()}},{name:"hide",filter:function(){return this.dropbar},handler:function(t,e){var i=e.$el;!Pe(i,this.clsDrop)||(!(e=this.getActive())||e&&e.$el===i)&&this.transitionTo(0)}}],methods:{getActive:function(){var t=this.dropdowns.map(this.getDropdown).filter(function(t){return t&&t.isActive()})[0];return t&&x(t.mode,"hover")&&Rt(t.toggle.$el,this.$el)&&t},transitionTo:function(t,e){var i=this,n=this.dropbar,o=jt(n)?ci(n):0;return We(e=o<t&&e,"clip","rect(0,"+e.offsetWidth+"px,"+o+"px,0)"),ci(n,o),Qe.cancel([e,n]),he.all([Qe.start(n,{height:t},this.duration),Qe.start(e,{clip:"rect(0,"+e.offsetWidth+"px,"+t+"px,0)"},this.duration)]).catch(et).then(function(){We(e,{clip:""}),i.$update(n)})},getDropdown:function(t){return this.$getComponent(t,"drop")||this.$getComponent(t,"dropdown")}}},xo={mixins:[go],args:"mode",props:{mode:String,flip:Boolean,overlay:Boolean},data:{mode:"slide",flip:!1,overlay:!1,clsPage:"uk-offcanvas-page",clsContainer:"uk-offcanvas-container",selPanel:".uk-offcanvas-bar",clsFlip:"uk-offcanvas-flip",clsContainerAnimation:"uk-offcanvas-container-animation",clsSidebarAnimation:"uk-offcanvas-bar-animation",clsMode:"uk-offcanvas",clsOverlay:"uk-offcanvas-overlay",selClose:".uk-offcanvas-close",container:!1},computed:{clsFlip:function(t){var e=t.flip,t=t.clsFlip;return e?t:""},clsOverlay:function(t){var e=t.overlay,t=t.clsOverlay;return e?t:""},clsMode:function(t){var e=t.mode;return t.clsMode+"-"+e},clsSidebarAnimation:function(t){var e=t.mode,t=t.clsSidebarAnimation;return"none"===e||"reveal"===e?"":t},clsContainerAnimation:function(t){var e=t.mode,t=t.clsContainerAnimation;return"push"!==e&&"reveal"!==e?"":t},transitionElement:function(t){return"reveal"===t.mode?this.panel.parentNode:this.panel}},events:[{name:"click",delegate:function(){return'a[href^="#"]'},handler:function(t){var e=t.current.hash;!t.defaultPrevented&&e&&Ee(e,document.body)&&this.hide()}},{name:"touchstart",passive:!0,el:function(){return this.panel},handler:function(t){t=t.targetTouches;1===t.length&&(this.clientY=t[0].clientY)}},{name:"touchmove",self:!0,passive:!1,filter:function(){return this.overlay},handler:function(t){t.cancelable&&t.preventDefault()}},{name:"touchmove",passive:!1,el:function(){return this.panel},handler:function(t){var e,i,n,o;1===t.targetTouches.length&&(e=event.targetTouches[0].clientY-this.clientY,i=(o=this.panel).scrollTop,((n=o.scrollHeight)<=(o=o.clientHeight)||0===i&&0<e||n-i<=o&&e<0)&&t.cancelable&&t.preventDefault())}},{name:"show",self:!0,handler:function(){"reveal"!==this.mode||Pe(this.panel.parentNode,this.clsMode)||(Le(this.panel,"<div>"),Ae(this.panel.parentNode,this.clsMode)),We(document.documentElement,"overflowY",this.overlay?"hidden":""),Ae(document.body,this.clsContainer,this.clsFlip),We(document.body,"touch-action","pan-y pinch-zoom"),We(this.$el,"display","block"),Ae(this.$el,this.clsOverlay),Ae(this.panel,this.clsSidebarAnimation,"reveal"!==this.mode?this.clsMode:""),ci(document.body),Ae(document.body,this.clsContainerAnimation),this.clsContainerAnimation&&(yo().content+=",user-scalable=0")}},{name:"hide",self:!0,handler:function(){Ne(document.body,this.clsContainerAnimation),We(document.body,"touch-action","")}},{name:"hidden",self:!0,handler:function(){var t;this.clsContainerAnimation&&((t=yo()).content=t.content.replace(/,user-scalable=0$/,"")),"reveal"===this.mode&&Me(this.panel),Ne(this.panel,this.clsSidebarAnimation,this.clsMode),Ne(this.$el,this.clsOverlay),We(this.$el,"display",""),Ne(document.body,this.clsContainer,this.clsFlip),We(document.documentElement,"overflowY","")}},{name:"swipeLeft swipeRight",handler:function(t){this.isToggled()&&l(t.type,"Left")^this.flip&&this.hide()}}]};function yo(){return Ee('meta[name="viewport"]',document.head)||xe(document.head,'<meta name="viewport">')}var ko={mixins:[gn],props:{selContainer:String,selContent:String},data:{selContainer:".uk-modal",selContent:".uk-modal-dialog"},computed:{container:function(t,e){return Nt(e,t.selContainer)},content:function(t,e){return Nt(e,t.selContent)}},connected:function(){We(this.$el,"minHeight",150)},update:{read:function(){return!(!this.content||!this.container)&&{current:j(We(this.$el,"maxHeight")),max:Math.max(150,ci(this.container)-(si(this.content).height-ci(this.$el)))}},write:function(t){var e=t.current,t=t.max;We(this.$el,"maxHeight",t),Math.round(e)!==Math.round(t)&&Jt(this.$el,"resize")},events:["resize"]}},s={props:["width","height"],connected:function(){Ae(this.$el,"uk-responsive-width")},update:{read:function(){return!!(jt(this.$el)&&this.width&&this.height)&&{width:ui(this.$el.parentNode),height:this.height}},write:function(t){ci(this.$el,ot.contain({height:this.height,width:this.width},t).height)},events:["resize"]}},p={props:{offset:Number},data:{offset:0},methods:{scrollTo:function(t){var e=this;t=t&&Ee(t)||document.body,Jt(this.$el,"beforescroll",[this,t])&&Ri(t,{offset:this.offset}).then(function(){return Jt(e.$el,"scrolled",[e,t])})}},events:{click:function(t){t.defaultPrevented||(t.preventDefault(),this.scrollTo(Pt(decodeURIComponent(this.$el.hash)).substr(1)))}}},Co="_ukScrollspy",t={args:"cls",props:{cls:String,target:String,hidden:Boolean,offsetTop:Number,offsetLeft:Number,repeat:Boolean,delay:Number},data:function(){return{cls:!1,target:!1,hidden:!0,offsetTop:0,offsetLeft:0,repeat:!1,delay:0,inViewClass:"uk-scrollspy-inview"}},computed:{elements:{get:function(t,e){t=t.target;return t?ze(t,e):[e]},watch:function(t){this.hidden&&We(Wt(t,":not(."+this.inViewClass+")"),"visibility","hidden")},immediate:!0}},update:[{read:function(t){var e=this;t.update&&this.elements.forEach(function(t){t[Co]||(t[Co]={cls:at(t,"uk-scrollspy-class")||e.cls}),t[Co].show=Vi(t,e.offsetTop,e.offsetLeft)})},write:function(n){var o=this;if(!n.update)return this.$emit(),n.update=!0;this.elements.forEach(function(e){function t(t){We(e,"visibility",!t&&o.hidden?"hidden":""),Oe(e,o.inViewClass,t),Oe(e,i.cls),Jt(e,t?"inview":"outview"),i.inview=t,o.$update(e)}var i=e[Co];!i.show||i.inview||i.queued?!i.show&&i.inview&&!i.queued&&o.repeat&&t(!1):(i.queued=!0,n.promise=(n.promise||he.resolve()).then(function(){return new he(function(t){return setTimeout(t,o.delay)})}).then(function(){t(!0),setTimeout(function(){i.queued=!1,o.$emit()},300)}))})},events:["scroll","resize"]}]},dt={props:{cls:String,closest:String,scroll:Boolean,overflow:Boolean,offset:Number},data:{cls:"uk-active",closest:!1,scroll:!1,overflow:!0,offset:0},computed:{links:{get:function(t,e){return ze('a[href^="#"]',e).filter(function(t){return t.hash})},watch:function(t){this.scroll&&this.$create("scroll",t,{offset:this.offset||0})},immediate:!0},targets:function(){return ze(this.links.map(function(t){return Pt(t.hash).substr(1)}).join(","))},elements:function(t){t=t.closest;return Nt(this.links,t||"*")}},update:[{read:function(){var i=this,t=this.targets.length;if(!t||!jt(this.$el))return!1;var e=G(Ui(this.targets[0])),n=e.scrollTop,o=e.scrollHeight,r=Yi(e),o=o-si(r).height,s=!1;return n===o?s=t-1:(this.targets.every(function(t,e){if(ai(t,r).top-i.offset<=0)return s=e,!0}),!1===s&&this.overflow&&(s=0)),{active:s}},write:function(t){t=t.active;this.links.forEach(function(t){return t.blur()}),Ne(this.elements,this.cls),!1!==t&&Jt(this.$el,"active",[t,Ae(this.elements[t],this.cls)])},events:["scroll","resize"]}]},ft={mixins:[gn,lo],props:{top:null,bottom:Boolean,offset:String,animation:String,clsActive:String,clsInactive:String,clsFixed:String,clsBelow:String,selTarget:String,widthElement:Boolean,showOnUp:Boolean,targetOffset:Number},data:{top:0,bottom:!1,offset:0,animation:"",clsActive:"uk-active",clsInactive:"",clsFixed:"uk-sticky-fixed",clsBelow:"uk-sticky-below",selTarget:"",widthElement:!1,showOnUp:!1,targetOffset:!1},computed:{offset:function(t){return mi(t.offset)},selTarget:function(t,e){t=t.selTarget;return t&&Ee(t,e)||e},widthElement:function(t,e){return kt(t.widthElement,e)||this.placeholder},isActive:{get:function(){return Pe(this.selTarget,this.clsActive)},set:function(t){t&&!this.isActive?(He(this.selTarget,this.clsInactive,this.clsActive),Jt(this.$el,"active")):t||Pe(this.selTarget,this.clsInactive)||(He(this.selTarget,this.clsActive,this.clsInactive),Jt(this.$el,"inactive"))}}},connected:function(){this.placeholder=Ee("+ .uk-sticky-placeholder",this.$el)||Ee('<div class="uk-sticky-placeholder"></div>'),this.isFixed=!1,this.isActive=!1},disconnected:function(){this.isFixed&&(this.hide(),Ne(this.selTarget,this.clsInactive)),be(this.placeholder),this.placeholder=null,this.widthElement=null},events:[{name:"load hashchange popstate",el:lt&&window,handler:function(){var n,o=this;!1!==this.targetOffset&&location.hash&&0<window.pageYOffset&&((n=Ee(location.hash))&&yi.read(function(){var t=si(n).top,e=si(o.$el).top,i=o.$el.offsetHeight;o.isFixed&&t<=e+i&&e<=t+n.offsetHeight&&Wi(window,t-i-(D(o.targetOffset)?o.targetOffset:0)-o.offset)}))}}],update:[{read:function(t,e){t=t.height;if(this.inactive=!this.matchMedia||!jt(this.$el),this.inactive)return!1;this.isActive&&"update"!==e&&(this.hide(),t=this.$el.offsetHeight,this.show()),t=this.isActive?t:this.$el.offsetHeight,this.topOffset=si(this.isFixed?this.placeholder:this.$el).top,this.bottomOffset=this.topOffset+t;e=bo("bottom",this);return this.top=Math.max(j(bo("top",this)),this.topOffset)-this.offset,this.bottom=e&&e-this.$el.offsetHeight,this.width=si(jt(this.widthElement)?this.widthElement:this.$el).width,{height:t,top:li(this.placeholder)[0],margins:We(this.$el,["marginTop","marginBottom","marginLeft","marginRight"])}},write:function(t){var e=t.height,i=t.margins,t=this.placeholder;We(t,X({height:e},i)),Rt(t,document)||(ke(this.$el,t),t.hidden=!0),this.isActive=!!this.isActive},events:["resize"]},{read:function(t){t=t.scroll;return void 0===t&&(t=0),this.scroll=window.pageYOffset,{dir:t<=this.scroll?"down":"up",scroll:this.scroll}},write:function(t,e){var i=this,n=Date.now(),o=t.initTimestamp;void 0===o&&(o=0);var r=t.dir,s=t.lastDir,h=t.lastScroll,a=t.scroll,l=t.top;(t.lastScroll=a)<0||a===h&&"scroll"===e||this.showOnUp&&"scroll"!==e&&!this.isFixed||((300<n-o||r!==s)&&(t.initScroll=a,t.initTimestamp=n),t.lastDir=r,this.showOnUp&&!this.isFixed&&Math.abs(t.initScroll-a)<=30&&Math.abs(h-a)<=10||(this.inactive||a<this.top||this.showOnUp&&(a<=this.top||"down"===r&&"scroll"===e||"up"===r&&!this.isFixed&&a<=this.bottomOffset)?this.isFixed?(this.isFixed=!1,this.animation&&a>this.topOffset?(ni.cancel(this.$el),ni.out(this.$el,this.animation).then(function(){return i.hide()},et)):this.hide()):ni.inProgress(this.$el)&&a<l&&(ni.cancel(this.$el),this.hide()):this.isFixed?this.update():this.animation?(ni.cancel(this.$el),this.show(),ni.in(this.$el,this.animation).catch(et)):this.show()))},events:["resize","scroll"]}],methods:{show:function(){this.isFixed=!0,this.update(),this.placeholder.hidden=!1},hide:function(){this.isActive=!1,Ne(this.$el,this.clsFixed,this.clsBelow),We(this.$el,{position:"",top:"",width:""}),this.placeholder.hidden=!0},update:function(){var t=0!==this.top||this.scroll>this.top,e=Math.max(0,this.offset);D(this.bottom)&&this.scroll>this.bottom-this.offset&&(e=this.bottom-this.scroll),We(this.$el,{position:"fixed",top:e+"px",width:this.width}),this.isActive=t,Oe(this.$el,this.clsBelow,this.scroll>this.bottomOffset),Ae(this.$el,this.clsFixed)}}};function bo(t,e){var i=e.$props,n=e.$el,e=e[t+"Offset"],t=i[t];if(t)return A(t)&&t.match(/^-?\d/)?e+mi(t):si(!0===t?n.parentNode:kt(t,n)).bottom}var Lo,$o,Mo,Et={mixins:[pn],args:"connect",props:{connect:String,toggle:String,active:Number,swiping:Boolean},data:{connect:"~.uk-switcher",toggle:"> * > :first-child",active:0,swiping:!0,cls:"uk-active",clsContainer:"uk-switcher",attrItem:"uk-switcher-item"},computed:{connects:{get:function(t,e){return Ct(t.connect,e)},watch:function(t){var e=this;t.forEach(function(t){return e.updateAria(t.children)}),this.swiping&&We(t,"touch-action","pan-y pinch-zoom")},immediate:!0},toggles:{get:function(t,e){return ze(t.toggle,e).filter(function(t){return!_t(t,".uk-disabled *, .uk-disabled, [disabled]")})},watch:function(t){var e=this.index();this.show(~e&&e||t[this.active]||t[0])},immediate:!0},children:function(){var t=this;return Ut(this.$el).filter(function(e){return t.toggles.some(function(t){return Rt(t,e)})})}},events:[{name:"click",delegate:function(){return this.toggle},handler:function(t){x(this.toggles,t.current)&&(t.preventDefault(),this.show(t.current))}},{name:"click",el:function(){return this.connects},delegate:function(){return"["+this.attrItem+"],[data-"+this.attrItem+"]"},handler:function(t){t.preventDefault(),this.show(at(t.current,this.attrItem))}},{name:"swipeRight swipeLeft",filter:function(){return this.swiping},el:function(){return this.connects},handler:function(t){t=t.type;this.show(l(t,"Left")?"next":"previous")}}],methods:{index:function(){var e=this;return k(this.children,function(t){return Pe(t,e.cls)})},show:function(t){var i=this,n=this.index(),o=ve(t,this.toggles,n);n!==o&&(this.children.forEach(function(t,e){Oe(t,i.cls,o===e),rt(i.toggles[e],"aria-expanded",o===e)}),this.connects.forEach(function(t){var e=t.children;return i.toggleElement(V(e).filter(function(t,e){return e!==o&&i.isToggled(t)}),!1,0<=n).then(function(){return i.toggleElement(e[o],!0,0<=n)})}))}}},ue={mixins:[gn],extends:Et,props:{media:Boolean},data:{media:960,attrItem:"uk-tab-item"},connected:function(){var t=Pe(this.$el,"uk-tab-left")?"uk-tab-left":!!Pe(this.$el,"uk-tab-right")&&"uk-tab-right";t&&this.$create("toggle",this.$el,{cls:t,mode:"media",media:this.media})}},zn={mixins:[lo,pn],args:"target",props:{href:String,target:null,mode:"list",queued:Boolean},data:{href:!1,target:!1,mode:"click",queued:!0},computed:{target:{get:function(t,e){var i=t.href,t=t.target;return(t=Ct(t||i,e)).length&&t||[e]},watch:function(){Jt(this.target,"updatearia",[this])},immediate:!0}},events:[{name:mt+" "+xt,filter:function(){return x(this.mode,"hover")},handler:function(t){oe(t)||this.toggle("toggle"+(t.type===mt?"show":"hide"))}},{name:"click",filter:function(){return x(this.mode,"click")||gt&&x(this.mode,"hover")},handler:function(t){var e;(Nt(t.target,'a[href="#"], a[href=""]')||(e=Nt(t.target,"a[href]"))&&(this.cls&&!Pe(this.target,this.cls.split(" ")[0])||!jt(this.target)||e.hash&&_t(this.target,e.hash)))&&t.preventDefault(),this.toggle()}}],update:{read:function(){return!(!x(this.mode,"media")||!this.media)&&{match:this.matchMedia}},write:function(t){var e=t.match,t=this.isToggled(this.target);(e?!t:t)&&this.toggle()},events:["resize"]},methods:{toggle:function(t){var e,i=this;Jt(this.target,t||"toggle",[this])&&(this.queued?(e=this.target.filter(this.isToggled),this.toggleElement(e,!1).then(function(){return i.toggleElement(i.target.filter(function(t){return!x(e,t)}),!0)})):this.toggleElement(this.target))}}};J(Object.freeze({__proto__:null,Accordion:wn,Alert:xn,Cover:kn,Drop:Ln,Dropdown:Ln,FormCustom:$n,Gif:Mn,Grid:En,HeightMatch:_n,HeightViewport:Dn,Icon:Rn,Img:Kn,Leader:co,Margin:Bn,Modal:vo,Nav:wo,Navbar:mo,Offcanvas:xo,OverflowAuto:ko,Responsive:s,Scroll:p,Scrollspy:t,ScrollspyNav:dt,Sticky:ft,Svg:Pn,Switcher:Et,Tab:ue,Toggle:zn,Video:yn,Close:Xn,Spinner:Gn,SlidenavNext:Un,SlidenavPrevious:Un,SearchIcon:Yn,Marker:qn,NavbarToggleIcon:qn,OverlayIcon:qn,PaginationNext:qn,PaginationPrevious:qn,Totop:qn}),function(t,e){return Qi.component(e,t)}),Qi.use(function(o){lt&&ge(function(){var e;o.update(),Yt(window,"load resize",function(){return o.update(null,"resize")}),Yt(document,"loadedmetadata load",function(t){t=t.target;return o.update(t,"resize")},!0),Yt(window,"scroll",function(t){e||(e=!0,yi.write(function(){return e=!1}),o.update(null,t.type))},{passive:!0,capture:!0});var i,n=0;Yt(document,"animationstart",function(t){t=t.target;(We(t,"animationName")||"").match(/^uk-.*(left|right)/)&&(n++,We(document.body,"overflowX","hidden"),setTimeout(function(){--n||We(document.body,"overflowX","")},q(We(t,"animationDuration"))+100))},!0),Yt(document,pt,function(t){var s,h;i&&i(),oe(t)&&(s=re(t),h="tagName"in t.target?t.target:t.target.parentNode,i=Gt(document,wt+" "+yt,function(t){var t=re(t),o=t.x,r=t.y;(h&&o&&100<Math.abs(s.x-o)||r&&100<Math.abs(s.y-r))&&setTimeout(function(){var t,e,i,n;Jt(h,"swipe"),Jt(h,"swipe"+(t=s.x,e=s.y,i=o,n=r,Math.abs(t-i)>=Math.abs(e-n)?0<t-i?"Left":"Right":0<e-n?"Up":"Down"))})}))},{passive:!0})})}),$o=(Lo=Qi).connect,Mo=Lo.disconnect,lt&&window.MutationObserver&&yi.read(function(){document.body&&Te(document.body,$o);new MutationObserver(function(t){var n=[];t.forEach(function(t){return e=n,i=(t=t).target,void(("attributes"!==t.type?function(t){for(var e=t.addedNodes,i=t.removedNodes,n=0;n<e.length;n++)Te(e[n],$o);for(var o=0;o<i.length;o++)Te(i[o],Mo);return 1}:function(t){var e=t.target,i=t.attributeName;if("href"===i)return 1;t=Ki(i);if(!(t&&t in Lo))return;if(st(e,i))return Lo[t](e),1;t=Lo.getComponent(e,t);if(t)return t.$destroy(),1})(t)&&!e.some(function(t){return t.contains(i)})&&e.push(i.contains?i:i.parentNode));var e,i}),n.forEach(function(t){return Lo.update(t)})}).observe(document,{childList:!0,subtree:!0,characterData:!0,attributes:!0}),Lo._initialized=!0});Et={mixins:[gn],props:{date:String,clsWrapper:String},data:{date:"",clsWrapper:".uk-countdown-%unit%"},computed:{date:function(t){t=t.date;return Date.parse(t)},days:function(t,e){return Ee(t.clsWrapper.replace("%unit%","days"),e)},hours:function(t,e){return Ee(t.clsWrapper.replace("%unit%","hours"),e)},minutes:function(t,e){return Ee(t.clsWrapper.replace("%unit%","minutes"),e)},seconds:function(t,e){return Ee(t.clsWrapper.replace("%unit%","seconds"),e)},units:function(){var e=this;return["days","hours","minutes","seconds"].filter(function(t){return e[t]})}},connected:function(){this.start()},disconnected:function(){var e=this;this.stop(),this.units.forEach(function(t){return we(e[t])})},events:[{name:"visibilitychange",el:lt&&document,handler:function(){document.hidden?this.stop():this.start()}}],update:{write:function(){var n=this,o=function(t){t-=Date.now();return{total:t,seconds:t/1e3%60,minutes:t/1e3/60%60,hours:t/1e3/60/60%24,days:t/1e3/60/60/24}}(this.date);o.total<=0&&(this.stop(),o.days=o.hours=o.minutes=o.seconds=0),this.units.forEach(function(t){var e=(e=String(Math.floor(o[t]))).length<2?"0"+e:e,i=n[t];i.textContent!==e&&((e=e.split("")).length!==i.children.length&&me(i,e.map(function(){return"<span></span>"}).join("")),e.forEach(function(t,e){return i.children[e].textContent=t}))})}},methods:{start:function(){this.stop(),this.date&&this.units.length&&(this.$update(),this.timer=setInterval(this.$update,1e3))},stop:function(){this.timer&&(clearInterval(this.timer),this.timer=null)}}};var Bo,Io="uk-animation-target",ue={props:{animation:Number},data:{animation:150},methods:{animate:function(t,i){var n=this;void 0===i&&(i=this.$el),function(){if(Bo)return;(Bo=xe(document.head,"<style>").sheet).insertRule("."+Io+" > * {\n            margin-top: 0 !important;\n            transform: none !important;\n        }",0)}();var o=Ut(i),r=o.map(function(t){return So(t,!0)}),e=ci(i),s=window.pageYOffset;t(),Qe.cancel(i),o.forEach(Qe.cancel),To(i),this.$update(i,"resize"),yi.flush();var t=ci(i),h=(o=o.concat(Ut(i).filter(function(t){return!x(o,t)}))).map(function(t,e){return!!(t.parentNode&&e in r)&&(r[e]?jt(t)?Eo(t):{opacity:0}:{opacity:jt(t)?1:0})}),r=h.map(function(t,e){e=o[e].parentNode===i&&(r[e]||So(o[e]));return e&&(t?"opacity"in t||(e.opacity%1?t.opacity=1:delete e.opacity):delete e.opacity),e});return Ae(i,Io),o.forEach(function(t,e){return r[e]&&We(t,r[e])}),We(i,{height:e,display:"block"}),Wi(window,s),he.all(o.map(function(t,e){return["top","left","height","width"].some(function(t){return r[e][t]!==h[e][t]})&&Qe.start(t,h[e],n.animation,"ease")}).concat(e!==t&&Qe.start(i,{height:t},this.animation,"ease"))).then(function(){o.forEach(function(t,e){return We(t,{display:0===h[e].opacity?"none":"",zIndex:""})}),To(i),n.$update(i,"resize"),yi.flush()},et)}}};function So(t,e){var i=We(t,"zIndex");return!!jt(t)&&X({display:"",opacity:e?We(t,"opacity"):"0",pointerEvents:"none",position:"absolute",zIndex:"auto"===i?pe(t):i},Eo(t))}function To(t){We(t.children,{height:"",left:"",opacity:"",pointerEvents:"",position:"",top:"",width:""}),Ne(t,Io),We(t,{height:"",display:""})}function Eo(t){var e=si(t),i=e.height,e=e.width,t=ai(t);return{top:t.top,left:t.left,height:i,width:e}}zn={mixins:[ue],args:"target",props:{target:Boolean,selActive:Boolean},data:{target:null,selActive:!1,attrItem:"uk-filter-control",cls:"uk-active",animation:250},computed:{toggles:{get:function(t,e){t.attrItem;return ze("["+this.attrItem+"],[data-"+this.attrItem+"]",e)},watch:function(){var e,i=this;this.updateState(),!1!==this.selActive&&(e=ze(this.selActive,this.$el),this.toggles.forEach(function(t){return Oe(t,i.cls,x(e,t))}))},immediate:!0},children:{get:function(t,e){return ze(t.target+" > *",e)},watch:function(t,e){var i;i=e,(t=t).length===i.length&&t.every(function(t){return~i.indexOf(t)})||this.updateState()}}},events:[{name:"click",delegate:function(){return"["+this.attrItem+"],[data-"+this.attrItem+"]"},handler:function(t){t.preventDefault(),this.apply(t.current)}}],methods:{apply:function(t){this.setState(Ao(t,this.attrItem,this.getState()))},getState:function(){var i=this;return this.toggles.filter(function(t){return Pe(t,i.cls)}).reduce(function(t,e){return Ao(e,i.attrItem,t)},{filter:{"":""},sort:[]})},setState:function(i,n){var o=this;void 0===n&&(n=!0),i=X({filter:{"":""},sort:[]},i),Jt(this.$el,"beforeFilter",[this,i]),this.toggles.forEach(function(t){return Oe(t,o.cls,!!function(t,e,i){var n=i.filter;void 0===n&&(n={"":""});var o=i.sort,r=o[0],s=o[1],i=zo(t,e),o=i.filter;void 0===o&&(o="");t=i.group;void 0===t&&(t="");e=i.sort,i=i.order;void 0===i&&(i="asc");return P(e)?t in n&&o===n[t]||!o&&t&&!(t in n)&&!n[""]:r===e&&s===i}(t,o.attrItem,i))}),he.all(ze(this.target,this.$el).map(function(t){var e=Ut(t);return n?o.animate(function(){return _o(i,t,e)},t):_o(i,t,e)})).then(function(){return Jt(o.$el,"afterFilter",[o])})},updateState:function(){var t=this;yi.write(function(){return t.setState(t.getState(),!1)})}}};function zo(t,e){return Ei(at(t,e),["filter"])}function _o(t,e,i){var n,o=(h=(h=t).filter,n="",J(h,function(t){return n+=t||""}),n);i.forEach(function(t){return We(t,"display",o&&!_t(t,o)?"none":"")});var r,s,h=t.sort,t=h[0],h=h[1];t&&(r=t,s=h,U(h=X([],i).sort(function(t,e){return at(t,r).localeCompare(at(e,r),void 0,{numeric:!0})*("asc"===s||-1)}),i)||xe(e,h))}function Ao(t,e,i){var n=zo(t,e),o=n.filter,t=n.group,e=n.sort,n=n.order;return void 0===n&&(n="asc"),(o||P(e))&&(t?o?(delete i.filter[""],i.filter[t]=o):(delete i.filter[t],(H(i.filter)||""in i.filter)&&(i.filter={"":o||""})):i.filter={"":o||""}),P(e)||(i.sort=[e,n]),i}yn={slide:{show:function(t){return[{transform:Do(-100*t)},{transform:Do()}]},percent:No,translate:function(t,e){return[{transform:Do(-100*e*t)},{transform:Do(100*e*(1-t))}]}}};function No(t){return Math.abs(We(t,"transform").split(",")[4]/t.offsetWidth)||0}function Do(t,e){return void 0===t&&(t=0),void 0===e&&(e="%"),t+=t?e:"",ct?"translateX("+t+")":"translate3d("+t+", 0, 0)"}function Ho(t){return"scale3d("+t+", "+t+", 1)"}var Po=X({},yn,{fade:{show:function(){return[{opacity:0},{opacity:1}]},percent:function(t){return 1-We(t,"opacity")},translate:function(t){return[{opacity:1-t},{opacity:t}]}},scale:{show:function(){return[{opacity:0,transform:Ho(.8)},{opacity:1,transform:Ho(1)}]},percent:function(t){return 1-We(t,"opacity")},translate:function(t){return[{opacity:1-t,transform:Ho(1-.2*t)},{opacity:t,transform:Ho(.8+.2*t)}]}}});function Oo(t,e,i){Jt(t,Kt(e,!1,!1,i))}Xn={mixins:[{props:{autoplay:Boolean,autoplayInterval:Number,pauseOnHover:Boolean},data:{autoplay:!1,autoplayInterval:7e3,pauseOnHover:!0},connected:function(){this.autoplay&&this.startAutoplay()},disconnected:function(){this.stopAutoplay()},update:function(){rt(this.slides,"tabindex","-1")},events:[{name:"visibilitychange",el:lt&&document,filter:function(){return this.autoplay},handler:function(){document.hidden?this.stopAutoplay():this.startAutoplay()}}],methods:{startAutoplay:function(){var t=this;this.stopAutoplay(),this.interval=setInterval(function(){return(!t.draggable||!Ee(":focus",t.$el))&&(!t.pauseOnHover||!_t(t.$el,":hover"))&&!t.stack.length&&t.show("next")},this.autoplayInterval)},stopAutoplay:function(){this.interval&&clearInterval(this.interval)}}},{props:{draggable:Boolean},data:{draggable:!0,threshold:10},created:function(){var n=this;["start","move","end"].forEach(function(t){var i=n[t];n[t]=function(t){var e=re(t).x*(ut?-1:1);n.prevPos=e!==n.pos?n.pos:n.prevPos,n.pos=e,i(t)}})},events:[{name:pt,delegate:function(){return this.selSlides},handler:function(t){var e;!this.draggable||!oe(t)&&(!(e=t.target).children.length&&e.childNodes.length)||Nt(t.target,Ft)||0<t.button||this.length<2||this.start(t)}},{name:"dragstart",handler:function(t){t.preventDefault()}}],methods:{start:function(){this.drag=this.pos,this._transitioner?(this.percent=this._transitioner.percent(),this.drag+=this._transitioner.getDistance()*this.percent*this.dir,this._transitioner.cancel(),this._transitioner.translate(this.percent),this.dragging=!0,this.stack=[]):this.prevIndex=this.index,Yt(document,vt,this.move,{passive:!1}),Yt(document,wt+" "+yt,this.end,!0),We(this.list,"userSelect","none")},move:function(t){var e=this,i=this.pos-this.drag;if(!(0==i||this.prevPos===this.pos||!this.dragging&&Math.abs(i)<this.threshold)){We(this.list,"pointerEvents","none"),t.cancelable&&t.preventDefault(),this.dragging=!0,this.dir=i<0?1:-1;for(var n=this.slides,o=this.prevIndex,r=Math.abs(i),s=this.getIndex(o+this.dir,o),h=this._getDistance(o,s)||n[o].offsetWidth;s!==o&&h<r;)this.drag-=h*this.dir,o=s,r-=h,s=this.getIndex(o+this.dir,o),h=this._getDistance(o,s)||n[o].offsetWidth;this.percent=r/h;var a,l=n[o],t=n[s],i=this.index!==s,c=o===s;[this.index,this.prevIndex].filter(function(t){return!x([s,o],t)}).forEach(function(t){Jt(n[t],"itemhidden",[e]),c&&(a=!0,e.prevIndex=o)}),(this.index===o&&this.prevIndex!==o||a)&&Jt(n[this.index],"itemshown",[this]),i&&(this.prevIndex=o,this.index=s,c||Jt(l,"beforeitemhide",[this]),Jt(t,"beforeitemshow",[this])),this._transitioner=this._translate(Math.abs(this.percent),l,!c&&t),i&&(c||Jt(l,"itemhide",[this]),Jt(t,"itemshow",[this]))}},end:function(){var t;Xt(document,vt,this.move,{passive:!1}),Xt(document,wt+" "+yt,this.end,!0),this.dragging&&(this.dragging=null,this.index===this.prevIndex?(this.percent=1-this.percent,this.dir*=-1,this._show(!1,this.index,!0),this._transitioner=null):(t=(ut?this.dir*(ut?1:-1):this.dir)<0==this.prevPos>this.pos,this.index=t?this.index:this.prevIndex,t&&(this.percent=1-this.percent),this.show(0<this.dir&&!t||this.dir<0&&t?"next":"previous",!0))),We(this.list,{userSelect:"",pointerEvents:""}),this.drag=this.percent=null}}},{data:{selNav:!1},computed:{nav:function(t,e){return Ee(t.selNav,e)},selNavItem:function(t){t=t.attrItem;return"["+t+"],[data-"+t+"]"},navItems:function(t,e){return ze(this.selNavItem,e)}},update:{write:function(){var i=this;this.nav&&this.length!==this.nav.children.length&&me(this.nav,this.slides.map(function(t,e){return"<li "+i.attrItem+'="'+e+'"><a href></a></li>'}).join("")),Oe(ze(this.selNavItem,this.$el).concat(this.nav),"uk-hidden",!this.maxIndex),this.updateNav()},events:["resize"]},events:[{name:"click",delegate:function(){return this.selNavItem},handler:function(t){t.preventDefault(),this.show(at(t.current,this.attrItem))}},{name:"itemshow",handler:"updateNav"}],methods:{updateNav:function(){var i=this,n=this.getValidIndex();this.navItems.forEach(function(t){var e=at(t,i.attrItem);Oe(t,i.clsActive,Z(e)===n),Oe(t,"uk-invisible",i.finite&&("previous"===e&&0===n||"next"===e&&n>=i.maxIndex))})}}}],props:{clsActivated:Boolean,easing:String,index:Number,finite:Boolean,velocity:Number,selSlides:String},data:function(){return{easing:"ease",finite:!1,velocity:1,index:0,prevIndex:-1,stack:[],percent:0,clsActive:"uk-active",clsActivated:!1,Transitioner:!1,transitionOptions:{}}},connected:function(){this.prevIndex=-1,this.index=this.getValidIndex(this.index),this.stack=[]},disconnected:function(){Ne(this.slides,this.clsActive)},computed:{duration:function(t,e){t=t.velocity;return Zo(e.offsetWidth/t)},list:function(t,e){return Ee(t.selList,e)},maxIndex:function(){return this.length-1},selSlides:function(t){return t.selList+" "+(t.selSlides||"> *")},slides:{get:function(){return ze(this.selSlides,this.$el)},watch:function(){this.$reset()}},length:function(){return this.slides.length}},events:{itemshown:function(){this.$update(this.list)}},methods:{show:function(t,e){var i=this;if(void 0===e&&(e=!1),!this.dragging&&this.length){var n=this.stack,o=e?0:n.length,r=function(){n.splice(o,1),n.length&&i.show(n.shift(),!0)};if(n[e?"unshift":"push"](t),!e&&1<n.length)2===n.length&&this._transitioner.forward(Math.min(this.duration,200));else{var s,h=this.getIndex(this.index),a=Pe(this.slides,this.clsActive)&&this.slides[h],l=this.getIndex(t,this.index),c=this.slides[l];if(a!==c){if(this.dir=(s=h,"next"!==(t=t)&&("previous"===t||t<s)?-1:1),this.prevIndex=h,this.index=l,a&&!Jt(a,"beforeitemhide",[this])||!Jt(c,"beforeitemshow",[this,a]))return this.index=this.prevIndex,void r();e=this._show(a,c,e).then(function(){return a&&Jt(a,"itemhidden",[i]),Jt(c,"itemshown",[i]),new he(function(t){yi.write(function(){n.shift(),n.length?i.show(n.shift(),!0):i._transitioner=null,t()})})});return a&&Jt(a,"itemhide",[this]),Jt(c,"itemshow",[this]),e}r()}}},getIndex:function(t,e){return void 0===t&&(t=this.index),void 0===e&&(e=this.index),tt(ve(t,this.slides,e,this.finite),0,this.maxIndex)},getValidIndex:function(t,e){return void 0===t&&(t=this.index),void 0===e&&(e=this.prevIndex),this.getIndex(t,e)},_show:function(t,e,i){if(this._transitioner=this._getTransitioner(t,e,this.dir,X({easing:i?e.offsetWidth<600?"cubic-bezier(0.25, 0.46, 0.45, 0.94)":"cubic-bezier(0.165, 0.84, 0.44, 1)":this.easing},this.transitionOptions)),!i&&!t)return this._translate(1),he.resolve();t=this.stack.length;return this._transitioner[1<t?"forward":"show"](1<t?Math.min(this.duration,75+75/(t-1)):this.duration,this.percent)},_getDistance:function(t,e){return this._getTransitioner(t,t!==e&&e).getDistance()},_translate:function(t,e,i){void 0===e&&(e=this.prevIndex),void 0===i&&(i=this.index);i=this._getTransitioner(e!==i&&e,i);return i.translate(t),i},_getTransitioner:function(t,e,i,n){return void 0===t&&(t=this.prevIndex),void 0===e&&(e=this.index),void 0===i&&(i=this.dir||1),void 0===n&&(n=this.transitionOptions),new this.Transitioner(N(t)?this.slides[t]:t,N(e)?this.slides[e]:e,i*(ut?-1:1),n)}}};function Zo(t){return.5*t+300}var Gn={mixins:[Xn],props:{animation:String},data:{animation:"slide",clsActivated:"uk-transition-active",Animations:yn,Transitioner:function(o,r,s,t){var e=t.animation,h=t.easing,i=e.percent,n=e.translate;void 0===(e=e.show)&&(e=et);var a=e(s),l=new se;return{dir:s,show:function(t,e,i){var n=this;void 0===e&&(e=0);i=i?"linear":h;return t-=Math.round(t*tt(e,-1,1)),this.translate(e),Oo(r,"itemin",{percent:e,duration:t,timing:i,dir:s}),Oo(o,"itemout",{percent:1-e,duration:t,timing:i,dir:s}),he.all([Qe.start(r,a[1],t,i),Qe.start(o,a[0],t,i)]).then(function(){n.reset(),l.resolve()},et),l.promise},stop:function(){return Qe.stop([r,o])},cancel:function(){Qe.cancel([r,o])},reset:function(){for(var t in a[0])We([r,o],t,"")},forward:function(t,e){return void 0===e&&(e=this.percent()),Qe.cancel([r,o]),this.show(t,e,!0)},translate:function(t){this.reset();var e=n(t,s);We(r,e[1]),We(o,e[0]),Oo(r,"itemtranslatein",{percent:t,dir:s}),Oo(o,"itemtranslateout",{percent:1-t,dir:s})},percent:function(){return i(o||r,r,s)},getDistance:function(){return o&&o.offsetWidth}}}},computed:{animation:function(t){var e=t.animation,t=t.Animations;return X(t[e]||t.slide,{name:e})},transitionOptions:function(){return{animation:this.animation}}},events:{"itemshow itemhide itemshown itemhidden":function(t){t=t.target;this.$update(t)},beforeitemshow:function(t){Ae(t.target,this.clsActive)},itemshown:function(t){Ae(t.target,this.clsActivated)},itemhidden:function(t){Ne(t.target,this.clsActive,this.clsActivated)}}},jo={mixins:[uo,go,pn,Gn],functional:!0,props:{delayControls:Number,preload:Number,videoAutoplay:Boolean,template:String},data:function(){return{preload:1,videoAutoplay:!1,delayControls:3e3,items:[],cls:"uk-open",clsPage:"uk-lightbox-page",selList:".uk-lightbox-items",attrItem:"uk-lightbox-item",selClose:".uk-close-large",selCaption:".uk-lightbox-caption",pauseOnHover:!1,velocity:2,Animations:Po,template:'<div class="uk-lightbox uk-overflow-hidden"> <ul class="uk-lightbox-items"></ul> <div class="uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque"> <button class="uk-lightbox-toolbar-icon uk-close-large" type="button" uk-close></button> </div> <a class="uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade" href uk-slidenav-previous uk-lightbox-item="previous"></a> <a class="uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade" href uk-slidenav-next uk-lightbox-item="next"></a> <div class="uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque"></div> </div>'}},created:function(){var t=Ee(this.template),e=Ee(this.selList,t);this.items.forEach(function(){return xe(e,"<li>")}),this.$mount(xe(this.container,t))},computed:{caption:function(t,e){t.selCaption;return Ee(".uk-lightbox-caption",e)}},events:[{name:vt+" "+pt+" keydown",handler:"showControls"},{name:"click",self:!0,delegate:function(){return this.selSlides},handler:function(t){t.defaultPrevented||this.hide()}},{name:"shown",self:!0,handler:function(){this.showControls()}},{name:"hide",self:!0,handler:function(){this.hideControls(),Ne(this.slides,this.clsActive),Qe.stop(this.slides)}},{name:"hidden",self:!0,handler:function(){this.$destroy(!0)}},{name:"keyup",el:lt&&document,handler:function(t){if(this.isToggled(this.$el)&&this.draggable)switch(t.keyCode){case 37:this.show("previous");break;case 39:this.show("next")}}},{name:"beforeitemshow",handler:function(t){this.isToggled()||(this.draggable=!1,t.preventDefault(),this.toggleElement(this.$el,!0,!1),this.animation=Po.scale,Ne(t.target,this.clsActive),this.stack.splice(1,0,this.index))}},{name:"itemshow",handler:function(){me(this.caption,this.getItem().caption||"");for(var t=-this.preload;t<=this.preload;t++)this.loadItem(this.index+t)}},{name:"itemshown",handler:function(){this.draggable=this.$props.draggable}},{name:"itemload",handler:function(t,i){var n=this,o=i.source,e=i.type,r=i.alt;void 0===r&&(r="");var s,h,a,l=i.poster,c=i.attrs;void 0===c&&(c={}),this.setItem(i,"<span uk-spinner></span>"),o&&(h={frameborder:"0",allow:"autoplay",allowfullscreen:"",style:"max-width: 100%; box-sizing: border-box;","uk-responsive":"","uk-video":""+this.videoAutoplay},"image"===e||o.match(/\.(jpe?g|png|gif|svg|webp)($|\?)/i)?fe(o,c.srcset,c.size).then(function(t){var e=t.width,t=t.height;return n.setItem(i,Fo("img",X({src:o,width:e,height:t,alt:r},c)))},function(){return n.setError(i)}):"video"===e||o.match(/\.(mp4|webm|ogv)($|\?)/i)?(Yt(a=Fo("video",X({src:o,poster:l,controls:"",playsinline:"","uk-video":""+this.videoAutoplay},c)),"loadedmetadata",function(){rt(a,{width:a.videoWidth,height:a.videoHeight}),n.setItem(i,a)}),Yt(a,"error",function(){return n.setError(i)})):"iframe"===e||o.match(/\.(html|php)($|\?)/i)?this.setItem(i,Fo("iframe",X({src:o,frameborder:"0",allowfullscreen:"",class:"uk-lightbox-iframe"},c))):(s=o.match(/\/\/(?:.*?youtube(-nocookie)?\..*?[?&]v=|youtu\.be\/)([\w-]{11})[&?]?(.*)?/))?this.setItem(i,Fo("iframe",X({src:"https://www.youtube"+(s[1]||"")+".com/embed/"+s[2]+(s[3]?"?"+s[3]:""),width:1920,height:1080},h,c))):(s=o.match(/\/\/.*?vimeo\.[a-z]+\/(\d+)[&?]?(.*)?/))&&de("https://vimeo.com/api/oembed.json?maxwidth=1920&url="+encodeURI(o),{responseType:"json",withCredentials:!1}).then(function(t){var e=t.response,t=e.height,e=e.width;return n.setItem(i,Fo("iframe",X({src:"https://player.vimeo.com/video/"+s[1]+(s[2]?"?"+s[2]:""),width:e,height:t},h,c)))},function(){return n.setError(i)}))}}],methods:{loadItem:function(t){void 0===t&&(t=this.index);t=this.getItem(t);this.getSlide(t).childElementCount||Jt(this.$el,"itemload",[t])},getItem:function(t){return void 0===t&&(t=this.index),this.items[ve(t,this.slides)]},setItem:function(t,e){Jt(this.$el,"itemloaded",[this,me(this.getSlide(t),e)])},getSlide:function(t){return this.slides[this.items.indexOf(t)]},setError:function(t){this.setItem(t,'<span uk-icon="icon: bolt; ratio: 2"></span>')},showControls:function(){clearTimeout(this.controlsTimer),this.controlsTimer=setTimeout(this.hideControls,this.delayControls),Ae(this.$el,"uk-active","uk-transition-active")},hideControls:function(){Ne(this.$el,"uk-active","uk-transition-active")}}};function Fo(t,e){t=Se("<"+t+">");return rt(t,e),t}Un={install:function(t,e){t.lightboxPanel||t.component("lightboxPanel",jo);X(e.props,t.component("lightboxPanel").options.props)},props:{toggle:String},data:{toggle:"a"},computed:{toggles:{get:function(t,e){return ze(t.toggle,e)},watch:function(){this.hide()}}},disconnected:function(){this.hide()},events:[{name:"click",delegate:function(){return this.toggle+":not(.uk-disabled)"},handler:function(t){t.preventDefault(),this.show(t.current)}}],methods:{show:function(t){var e,i=this,n=Q(this.toggles.map(Vo),"source");return E(t)&&(e=Vo(t).source,t=k(n,function(t){t=t.source;return e===t})),this.panel=this.panel||this.$create("lightboxPanel",X({},this.$props,{items:n})),Yt(this.panel.$el,"hidden",function(){return i.panel=!1}),this.panel.show(t)},hide:function(){return this.panel&&this.panel.hide()}}};function Vo(e){var i={};return["href","caption","type","poster","alt","attrs"].forEach(function(t){i["href"===t?"source":t]=at(e,t)}),i.attrs=Ei(i.attrs),i}qn={functional:!0,args:["message","status"],data:{message:"",status:"",timeout:5e3,group:null,pos:"top-center",clsContainer:"uk-notification",clsClose:"uk-notification-close",clsMsg:"uk-notification-message"},install:function(n){n.notification.closeAll=function(e,i){Te(document.body,function(t){t=n.getComponent(t,"notification");!t||e&&e!==t.group||t.close(i)})}},computed:{marginProp:function(t){return"margin"+(v(t.pos,"top")?"Top":"Bottom")},startProps:function(){var t={opacity:0};return t[this.marginProp]=-this.$el.offsetHeight,t}},created:function(){var t=Ee("."+this.clsContainer+"-"+this.pos,this.$container)||xe(this.$container,'<div class="'+this.clsContainer+" "+this.clsContainer+"-"+this.pos+'" style="display: block"></div>');this.$mount(xe(t,'<div class="'+this.clsMsg+(this.status?" "+this.clsMsg+"-"+this.status:"")+'"> <a href class="'+this.clsClose+'" data-uk-close></a> <div>'+this.message+"</div> </div>"))},connected:function(){var t,e=this,i=j(We(this.$el,this.marginProp));Qe.start(We(this.$el,this.startProps),((t={opacity:1})[this.marginProp]=i,t)).then(function(){e.timeout&&(e.timer=setTimeout(e.close,e.timeout))})},events:((Yn={click:function(t){Nt(t.target,'a[href="#"],a[href=""]')&&t.preventDefault(),this.close()}})[mt]=function(){this.timer&&clearTimeout(this.timer)},Yn[xt]=function(){this.timeout&&(this.timer=setTimeout(this.close,this.timeout))},Yn),methods:{close:function(t){function e(){var t=i.$el.parentNode;Jt(i.$el,"close",[i]),be(i.$el),t&&!t.hasChildNodes()&&be(t)}var i=this;this.timer&&clearTimeout(this.timer),t?e():Qe.start(this.$el,this.startProps).then(e)}}};var Wo=["x","y","bgx","bgy","rotate","scale","color","backgroundColor","borderColor","opacity","blur","hue","grayscale","invert","saturate","sepia","fopacity","stroke"],go={mixins:[lo],props:Wo.reduce(function(t,e){return t[e]="list",t},{}),data:Wo.reduce(function(t,e){return t[e]=void 0,t},{}),computed:{props:function(f,g){var p=this;return Wo.reduce(function(t,e){if(P(f[e]))return t;var i,n,o=e.match(/color/i),r=o||"opacity"===e,s=f[e].slice(0);r&&We(g,e,""),s.length<2&&s.unshift(("scale"===e?1:r?We(g,e):0)||0);var h,a,l,c,u,r=s.reduce(function(t,e){return A(e)&&e.replace(/-|\d/g,"").trim()||t},"");if(o?(o=g.style.color,s=s.map(function(t){return We(We(g,"color",t),"color").split(/[(),]/g).slice(1,-1).concat(1).slice(0,4).map(j)}),g.style.color=o):v(e,"bg")?(h="bgy"===e?"height":"width",s=s.map(function(t){return mi(t,h,p.$el)}),We(g,"background-position-"+e[2],""),n=We(g,"backgroundPosition").split(" ")["x"===e[2]?0:1],i=p.covers?(a=Math.min.apply(Math,s),l=Math.max.apply(Math,s),c=s.indexOf(a)<s.indexOf(l),u=l-a,s=s.map(function(t){return t-(c?a:l)}),(c?-u:0)+"px"):n):s=s.map(j),"stroke"===e){if(!s.some(function(t){return t}))return t;var d=Fn(p.$el);We(g,"strokeDasharray",d),"%"===r&&(s=s.map(function(t){return t*d/100})),s=s.reverse(),e="strokeDashoffset"}return t[e]={steps:s,unit:r,pos:i,bgPos:n,diff:u},t},{})},bgProps:function(){var e=this;return["bgx","bgy"].filter(function(t){return t in e.props})},covers:function(t,e){return n=(i=e).style.backgroundSize,e="cover"===We(We(i,"backgroundSize",""),"backgroundSize"),i.style.backgroundSize=n,e;var i,n}},disconnected:function(){delete this._image},update:{read:function(t){var e,i,h,a,l,c=this;t.active=this.matchMedia,t.active&&(t.image||!this.covers||!this.bgProps.length||(e=We(this.$el,"backgroundImage").replace(/^none|url\(["']?(.+?)["']?\)$/,"$1"))&&((i=new Image).src=e,(t.image=i).naturalWidth||(i.onload=function(){return c.$update()})),(i=t.image)&&i.naturalWidth&&(h={width:this.$el.offsetWidth,height:this.$el.offsetHeight},a={width:i.naturalWidth,height:i.naturalHeight},l=ot.cover(a,h),this.bgProps.forEach(function(t){var e,i=c.props[t],n=i.diff,o=i.bgPos,r=i.steps,i="bgy"===t?"height":"width",s=l[i]-h[i];s<n?h[i]=l[i]+n-s:n<s&&((e=h[i]/mi(o,i,c.$el))&&(c.props[t].steps=r.map(function(t){return t-(s-n)/e}))),l=ot.cover(a,h)}),t.dim=l))},write:function(t){var e=t.dim;t.active?e&&We(this.$el,{backgroundSize:e.width+"px "+e.height+"px",backgroundRepeat:"no-repeat"}):We(this.$el,{backgroundSize:"",backgroundRepeat:""})},events:["resize"]},methods:{reset:function(){var i=this;J(this.getCss(0),function(t,e){return We(i.$el,e,"")})},getCss:function(a){var l=this.props;return Object.keys(l).reduce(function(t,e){var i=l[e],n=i.steps,o=i.unit,r=i.pos,i=function(t,e,i){void 0===i&&(i=2);var n=Ro(t,e),t=n[0],e=n[1],n=n[2];return(N(t)?t+Math.abs(t-e)*n*(t<e?1:-1):+e).toFixed(i)}(n,a);switch(e){case"x":case"y":o=o||"px",t.transform+=" translate"+u(e)+"("+j(i).toFixed("px"===o?0:2)+o+")";break;case"rotate":o=o||"deg",t.transform+=" rotate("+(i+o)+")";break;case"scale":t.transform+=" scale("+i+")";break;case"bgy":case"bgx":t["background-position-"+e[2]]="calc("+r+" + "+i+"px)";break;case"color":case"backgroundColor":case"borderColor":var r=Ro(n,a),n=r[0],s=r[1],h=r[2];t[e]="rgba("+n.map(function(t,e){return t+=h*(s[e]-t),3===e?j(t):parseInt(t,10)}).join(",")+")";break;case"blur":o=o||"px",t.filter+=" blur("+(i+o)+")";break;case"hue":o=o||"deg",t.filter+=" hue-rotate("+(i+o)+")";break;case"fopacity":o=o||"%",t.filter+=" opacity("+(i+o)+")";break;case"grayscale":case"invert":case"saturate":case"sepia":o=o||"%",t.filter+=" "+e+"("+(i+o)+")";break;default:t[e]=i}return t},{transform:"",filter:""})}}};function Ro(t,e){var i=t.length-1,n=Math.min(Math.floor(i*e),i-1),n=t.slice(n,n+2);return n.push(1===e?1:e%(1/i)*i),n}Yn={mixins:[go],props:{target:String,viewport:Number,easing:Number},data:{target:!1,viewport:1,easing:1},computed:{target:function(t,e){t=t.target;return function t(e){return e?"offsetTop"in e?e:t(e.parentNode):document.body}(t&&kt(t,e)||e)}},update:{read:function(t,e){var i=t.percent;if("scroll"!==e&&(i=!1),t.active){var n=i;return e=qi(this.target)/(this.viewport||1),t=this.easing,{percent:i=tt(e*(1-(t-t*e))),style:n!==i&&this.getCss(i)}}},write:function(t){var e=t.style;t.active?e&&We(this.$el,e):this.reset()},events:["scroll","resize"]}};lo={update:{write:function(){var t;this.stack.length||this.dragging||(t=this.getValidIndex(this.index),~this.prevIndex&&this.index===t||this.show(t))},events:["resize"]}};function qo(t,e,i){var n=Xo(t,e);return i?n-(t=t,si(e).width/2-si(t).width/2):Math.min(n,Uo(e))}function Uo(t){return Math.max(0,Yo(t)-si(t).width)}function Yo(t){return Jo(t).reduce(function(t,e){return si(e).width+t},0)}function Xo(t,e){return(ai(t).left+(ut?si(t).width-si(e).width:0))*(ut?-1:1)}function Go(t,e,i){Jt(t,Kt(e,!1,!1,i))}function Jo(t){return Ut(t)}Xn={mixins:[gn,Xn,lo],props:{center:Boolean,sets:Boolean},data:{center:!1,sets:!1,attrItem:"uk-slider-item",selList:".uk-slider-items",selNav:".uk-slider-nav",clsContainer:"uk-slider-container",Transitioner:function(n,o,r,t){var e=t.center,s=t.easing,h=t.list,a=new se,i=n?qo(n,h,e):qo(o,h,e)+si(o).width*r,l=o?qo(o,h,e):i+si(n).width*r*(ut?-1:1);return{dir:r,show:function(t,e,i){void 0===e&&(e=0);i=i?"linear":s;t-=Math.round(t*tt(e,-1,1)),this.translate(e),n&&this.updateTranslates(),e=n?e:tt(e,0,1),Go(this.getItemIn(),"itemin",{percent:e,duration:t,timing:i,dir:r}),n&&Go(this.getItemIn(!0),"itemout",{percent:1-e,duration:t,timing:i,dir:r});e=pe(o)/1e4;return Qe.start(h,{transform:Do((e-l)*(ut?-1:1),"px")},t,i).then(a.resolve,et),a.promise},stop:function(){return Qe.stop(h)},cancel:function(){Qe.cancel(h)},reset:function(){We(h,"transform","")},forward:function(t,e){return void 0===e&&(e=this.percent()),Qe.cancel(h),this.show(t,e,!0)},translate:function(t){var e=this.getDistance()*r*(ut?-1:1);We(h,"transform",Do(tt(e-e*t-l,-Yo(h),si(h).width)*(ut?-1:1),"px")),this.updateTranslates(),n&&(t=tt(t,-1,1),Go(this.getItemIn(),"itemtranslatein",{percent:t,dir:r}),Go(this.getItemIn(!0),"itemtranslateout",{percent:1-t,dir:r}))},percent:function(){return Math.abs((We(h,"transform").split(",")[4]*(ut?-1:1)+i)/(l-i))},getDistance:function(){return Math.abs(l-i)},getItemIn:function(t){void 0===t&&(t=!1);var e=this.getActives(),i=K(Jo(h),"offsetLeft"),e=pe(i,e[0<r*(t?-1:1)?e.length-1:0]);return~e&&i[e+(n&&!t?r:0)]},getActives:function(){var i=qo(n||o,h,e);return K(Jo(h).filter(function(t){var e=Xo(t,h);return i<=e&&e+si(t).width<=si(h).width+i}),"offsetLeft")},updateTranslates:function(){var i=this.getActives();Jo(h).forEach(function(t){var e=x(i,t);Go(t,"itemtranslate"+(e?"in":"out"),{percent:e?1:0,dir:t.offsetLeft<=o.offsetLeft?1:-1})})}}}},computed:{avgWidth:function(){return Yo(this.list)/this.length},finite:function(t){return t.finite||Math.ceil(Yo(this.list))<si(this.list).width+Jo(this.list).reduce(function(t,e){return Math.max(t,si(e).width)},0)+this.center},maxIndex:function(){if(!this.finite||this.center&&!this.sets)return this.length-1;if(this.center)return G(this.sets);We(this.slides,"order","");for(var t=Uo(this.list),e=this.length;e--;)if(Xo(this.list.children[e],this.list)<t)return Math.min(e+1,this.length-1);return 0},sets:function(t){var o=this,t=t.sets,r=si(this.list).width/(this.center?2:1),s=0,h=r,a=0;return!H(t=t&&this.slides.reduce(function(t,e,i){var n=si(e).width;return s<a+n&&(!o.center&&i>o.maxIndex&&(i=o.maxIndex),x(t,i)||(e=o.slides[i+1],o.center&&e&&n<h-si(e).width/2?h-=n:(h=r,t.push(i),s=a+r+(o.center?n/2:0)))),a+=n,t},[]))&&t},transitionOptions:function(){return{center:this.center,list:this.list}}},connected:function(){Oe(this.$el,this.clsContainer,!Ee("."+this.clsContainer,this.$el))},update:{write:function(){var i=this;ze("["+this.attrItem+"],[data-"+this.attrItem+"]",this.$el).forEach(function(t){var e=at(t,i.attrItem);i.maxIndex&&Oe(t,"uk-hidden",D(e)&&(i.sets&&!x(i.sets,j(e))||e>i.maxIndex))}),!this.length||this.dragging||this.stack.length||(this.reorder(),this._translate(1));var e=this._getTransitioner(this.index).getActives();this.slides.forEach(function(t){return Oe(t,i.clsActive,x(e,t))}),this.sets&&!x(this.sets,j(this.index))||this.slides.forEach(function(t){return Oe(t,i.clsActivated,x(e,t))})},events:["resize"]},events:{beforeitemshow:function(t){!this.dragging&&this.sets&&this.stack.length<2&&!x(this.sets,this.index)&&(this.index=this.getValidIndex());var e=Math.abs(this.index-this.prevIndex+(0<this.dir&&this.index<this.prevIndex||this.dir<0&&this.index>this.prevIndex?(this.maxIndex+1)*this.dir:0));if(!this.dragging&&1<e){for(var i=0;i<e;i++)this.stack.splice(1,0,0<this.dir?"next":"previous");t.preventDefault()}else this.duration=Zo(this.avgWidth/this.velocity)*(si(this.dir<0||!this.slides[this.prevIndex]?this.slides[this.index]:this.slides[this.prevIndex]).width/this.avgWidth),this.reorder()},itemshow:function(){~this.prevIndex&&Ae(this._getTransitioner().getItemIn(),this.clsActive)}},methods:{reorder:function(){var i=this;if(this.finite)We(this.slides,"order","");else{var n=0<this.dir&&this.slides[this.prevIndex]?this.prevIndex:this.index;if(this.slides.forEach(function(t,e){return We(t,"order",0<i.dir&&e<n?1:i.dir<0&&e>=i.index?-1:"")}),this.center)for(var t=this.slides[n],e=si(this.list).width/2-si(t).width/2,o=0;0<e;){var r=this.getIndex(--o+n,n),s=this.slides[r];We(s,"order",n<r?-2:-1),e-=si(s).width}}},getValidIndex:function(t,e){if(void 0===t&&(t=this.index),void 0===e&&(e=this.prevIndex),t=this.getIndex(t,e),!this.sets)return t;var i;do{if(x(this.sets,t))return t;i=t,t=this.getIndex(t+this.dir,e)}while(t!==i);return t}}},go={mixins:[go],data:{selItem:"!li"},computed:{item:function(t,e){return kt(t.selItem,e)}},events:[{name:"itemshown",self:!0,el:function(){return this.item},handler:function(){We(this.$el,this.getCss(.5))}},{name:"itemin itemout",self:!0,el:function(){return this.item},handler:function(t){var e=t.type,i=t.detail,n=i.percent,o=i.duration,t=i.timing,i=i.dir;Qe.cancel(this.$el),We(this.$el,this.getCss(Qo(e,i,n))),Qe.start(this.$el,this.getCss(Ko(e)?.5:0<i?1:0),o,t).catch(et)}},{name:"transitioncanceled transitionend",self:!0,el:function(){return this.item},handler:function(){Qe.cancel(this.$el)}},{name:"itemtranslatein itemtranslateout",self:!0,el:function(){return this.item},handler:function(t){var e=t.type,i=t.detail,t=i.percent,i=i.dir;Qe.cancel(this.$el),We(this.$el,this.getCss(Qo(e,i,t)))}}]};function Ko(t){return l(t,"in")}function Qo(t,e,i){return i/=2,Ko(t)?e<0?1-i:i:e<0?i:1-i}var tr,yn=X({},yn,{fade:{show:function(){return[{opacity:0,zIndex:0},{zIndex:-1}]},percent:function(t){return 1-We(t,"opacity")},translate:function(t){return[{opacity:1-t,zIndex:0},{zIndex:-1}]}},scale:{show:function(){return[{opacity:0,transform:Ho(1.5),zIndex:0},{zIndex:-1}]},percent:function(t){return 1-We(t,"opacity")},translate:function(t){return[{opacity:1-t,transform:Ho(1+.5*t),zIndex:0},{zIndex:-1}]}},pull:{show:function(t){return t<0?[{transform:Do(30),zIndex:-1},{transform:Do(),zIndex:0}]:[{transform:Do(-100),zIndex:0},{transform:Do(),zIndex:-1}]},percent:function(t,e,i){return i<0?1-No(e):No(t)},translate:function(t,e){return e<0?[{transform:Do(30*t),zIndex:-1},{transform:Do(-100*(1-t)),zIndex:0}]:[{transform:Do(100*-t),zIndex:0},{transform:Do(30*(1-t)),zIndex:-1}]}},push:{show:function(t){return t<0?[{transform:Do(100),zIndex:0},{transform:Do(),zIndex:-1}]:[{transform:Do(-30),zIndex:-1},{transform:Do(),zIndex:0}]},percent:function(t,e,i){return 0<i?1-No(e):No(t)},translate:function(t,e){return e<0?[{transform:Do(100*t),zIndex:0},{transform:Do(-30*(1-t)),zIndex:-1}]:[{transform:Do(-30*t),zIndex:-1},{transform:Do(100*(1-t)),zIndex:0}]}}}),yn={mixins:[gn,Gn,lo],props:{ratio:String,minHeight:Number,maxHeight:Number},data:{ratio:"16:9",minHeight:!1,maxHeight:!1,selList:".uk-slideshow-items",attrItem:"uk-slideshow-item",selNav:".uk-slideshow-nav",Animations:yn},update:{read:function(){var t=this.ratio.split(":").map(Number),e=t[0],t=(t=t[1])*this.list.offsetWidth/e||0;return this.minHeight&&(t=Math.max(this.minHeight,t)),this.maxHeight&&(t=Math.min(this.maxHeight,t)),{height:t-fi(this.list,"height","content-box")}},write:function(t){t=t.height;0<t&&We(this.list,"minHeight",t)},events:["resize"]}},ue={mixins:[gn,ue],props:{group:String,threshold:Number,clsItem:String,clsPlaceholder:String,clsDrag:String,clsDragState:String,clsBase:String,clsNoDrag:String,clsEmpty:String,clsCustom:String,handle:String},data:{group:!1,threshold:5,clsItem:"uk-sortable-item",clsPlaceholder:"uk-sortable-placeholder",clsDrag:"uk-sortable-drag",clsDragState:"uk-drag",clsBase:"uk-sortable",clsNoDrag:"uk-sortable-nodrag",clsEmpty:"uk-sortable-empty",clsCustom:"",handle:!1,pos:{}},created:function(){var i=this;["init","start","move","end"].forEach(function(t){var e=i[t];i[t]=function(t){X(i.pos,re(t)),e(t)}})},events:{name:pt,passive:!1,handler:"init"},computed:{target:function(){return(this.$el.tBodies||[this.$el])[0]},items:function(){return Ut(this.target)},isEmpty:{get:function(){return H(this.items)},watch:function(t){Oe(this.target,this.clsEmpty,t)},immediate:!0},handles:{get:function(t,e){t=t.handle;return t?ze(t,e):this.items},watch:function(t,e){We(e,{touchAction:"",userSelect:""}),We(t,{touchAction:gt?"none":"",userSelect:"none"})},immediate:!0}},update:{write:function(){if(this.drag&&Dt(this.placeholder)){var t=this.pos,e=t.x,i=t.y,n=this.origin,o=n.offsetTop,r=n.offsetLeft,s=this.drag,h=s.offsetHeight,t=s.offsetWidth,n=si(window),s=n.right,n=n.bottom,a=document.elementFromPoint(e,i);We(this.drag,{top:tt(i-o,0,n-h),left:tt(e-r,0,s-t)});r=this.getSortable(a),s=this.getSortable(this.placeholder),t=r!==s;if(r&&!Rt(a,this.placeholder)&&(!t||r.group&&r.group===s.group)){if(a=r.target===a.parentNode&&a||r.items.filter(function(t){return Rt(a,t)})[0],t)s.remove(this.placeholder);else if(!a)return;r.insert(this.placeholder,a),x(this.touched,r)||this.touched.push(r)}}},events:["move"]},methods:{init:function(t){var e=t.target,i=t.button,n=t.defaultPrevented,o=this.items.filter(function(t){return Rt(e,t)})[0];!o||n||0<i||Vt(e)||Rt(e,"."+this.clsNoDrag)||this.handle&&!Rt(e,this.handle)||(t.preventDefault(),this.touched=[this],this.placeholder=o,this.origin=X({target:e,index:pe(o)},this.pos),Yt(document,vt,this.move),Yt(document,wt,this.end),this.threshold||this.start(t))},start:function(t){this.drag=function(t,e){t=xe(t,e.outerHTML.replace(/(^<)(?:li|tr)|(?:li|tr)(\/>$)/g,"$1div$2"));return t.style.setProperty("margin","0","important"),We(t,X({boxSizing:"border-box",width:e.offsetWidth,height:e.offsetHeight,overflow:"hidden"},We(e,["paddingLeft","paddingRight","paddingTop","paddingBottom"]))),ci(t.firstElementChild,ci(e.firstElementChild)),t}(this.$container,this.placeholder);var e,i,n=this.placeholder.getBoundingClientRect(),o=n.left,n=n.top;X(this.origin,{offsetLeft:this.pos.x-o,offsetTop:this.pos.y-n}),Ae(this.drag,this.clsDrag,this.clsCustom),Ae(this.placeholder,this.clsPlaceholder),Ae(this.items,this.clsItem),Ae(document.documentElement,this.clsDragState),Jt(this.$el,"start",[this,this.placeholder]),e=this.pos,i=Date.now(),tr=setInterval(function(){var t=e.x,s=e.y;s+=window.pageYOffset;var h=.3*(Date.now()-i);i=Date.now(),Ui(document.elementFromPoint(t,e.y)).some(function(t){var e=t.scrollTop,i=t.scrollHeight,n=si(Yi(t)),o=n.top,r=n.bottom,n=n.height;if(o<s&&s<o+30)e-=h;else{if(!(s<r&&r-30<s))return;e+=h}if(0<e&&e<i-n)return Wi(t,e),!0})},15),this.move(t)},move:function(t){this.drag?this.$emit("move"):(Math.abs(this.pos.x-this.origin.x)>this.threshold||Math.abs(this.pos.y-this.origin.y)>this.threshold)&&this.start(t)},end:function(t){var e,i;Xt(document,vt,this.move),Xt(document,wt,this.end),Xt(window,"scroll",this.scroll),this.drag&&(clearInterval(tr),e=this.getSortable(this.placeholder),this===e?this.origin.index!==pe(this.placeholder)&&Jt(this.$el,"moved",[this,this.placeholder]):(Jt(e.$el,"added",[e,this.placeholder]),Jt(this.$el,"removed",[this,this.placeholder])),Jt(this.$el,"stop",[this,this.placeholder]),be(this.drag),this.drag=null,i=this.touched.map(function(t){return t.clsPlaceholder+" "+t.clsItem}).join(" "),this.touched.forEach(function(t){return Ne(t.items,i)}),Ne(document.documentElement,this.clsDragState))},insert:function(i,n){var o=this;Ae(this.items,this.clsItem);function t(){var t,e;n?(!Rt(i,o.target)||(e=n,(t=i).parentNode===e.parentNode&&pe(t)>pe(e))?ye:ke)(n,i):xe(o.target,i)}this.animation?this.animate(t):t()},remove:function(t){Rt(t,this.target)&&(this.animation?this.animate(function(){return be(t)}):be(t))},getSortable:function(t){return t&&(this.$getComponent(t,"sortable")||this.getSortable(t.parentNode))}}};var er=[],xt={mixins:[uo,pn,bn],args:"title",props:{delay:Number,title:String},data:{pos:"top",title:"",delay:0,animation:["uk-animation-scale-up"],duration:100,cls:"uk-active",clsPos:"uk-tooltip"},beforeConnect:function(){this._hasTitle=st(this.$el,"title"),rt(this.$el,{title:"","aria-expanded":!1})},disconnected:function(){this.hide(),rt(this.$el,{title:this._hasTitle?this.title:null,"aria-expanded":null})},methods:{show:function(){var e=this;!this.isActive()&&this.title&&(er.forEach(function(t){return t.hide()}),er.push(this),this._unbind=Yt(document,wt,function(t){return!Rt(t.target,e.$el)&&e.hide()}),clearTimeout(this.showTimer),this.showTimer=setTimeout(this._show,this.delay))},hide:function(){var t=this;this.isActive()&&!_t(this.$el,"input:focus")&&this.toggleElement(this.tooltip,!1,!1).then(function(){er.splice(er.indexOf(t),1),clearTimeout(t.showTimer),t.tooltip=be(t.tooltip),t._unbind()})},_show:function(){var e=this;this.tooltip=xe(this.container,'<div class="'+this.clsPos+'"> <div class="'+this.clsPos+'-inner">'+this.title+"</div> </div>"),Yt(this.tooltip,"toggled",function(){var t=e.isToggled(e.tooltip);rt(e.$el,"aria-expanded",t),t&&(e.positionAt(e.tooltip,e.$el),e.origin="y"===e.getAxis()?wi(e.dir)+"-"+e.align:e.align+"-"+wi(e.dir))}),this.toggleElement(this.tooltip,!0)},isActive:function(){return x(er,this)}},events:((bn={focus:"show",blur:"hide"})[mt+" "+xt]=function(t){oe(t)||(t.type===mt?this.show():this.hide())},bn[pt]=function(t){oe(t)&&(this.isActive()?this.hide():this.show())},bn)},bn={props:{allow:String,clsDragover:String,concurrent:Number,maxSize:Number,method:String,mime:String,msgInvalidMime:String,msgInvalidName:String,msgInvalidSize:String,multiple:Boolean,name:String,params:Object,type:String,url:String},data:{allow:!1,clsDragover:"uk-dragover",concurrent:1,maxSize:0,method:"POST",mime:!1,msgInvalidMime:"Invalid File Type: %s",msgInvalidName:"Invalid File Name: %s",msgInvalidSize:"Invalid File Size: %s Kilobytes Max",multiple:!1,name:"files[]",params:{},type:"",url:"",abort:et,beforeAll:et,beforeSend:et,complete:et,completeAll:et,error:et,fail:et,load:et,loadEnd:et,loadStart:et,progress:et},events:{change:function(t){_t(t.target,'input[type="file"]')&&(t.preventDefault(),t.target.files&&this.upload(t.target.files),t.target.value="")},drop:function(t){nr(t);t=t.dataTransfer;t&&t.files&&(Ne(this.$el,this.clsDragover),this.upload(t.files))},dragenter:function(t){nr(t)},dragover:function(t){nr(t),Ae(this.$el,this.clsDragover)},dragleave:function(t){nr(t),Ne(this.$el,this.clsDragover)}},methods:{upload:function(t){var n=this;if(t.length){Jt(this.$el,"upload",[t]);for(var e=0;e<t.length;e++){if(this.maxSize&&1e3*this.maxSize<t[e].size)return void this.fail(this.msgInvalidSize.replace("%s",this.maxSize));if(this.allow&&!ir(this.allow,t[e].name))return void this.fail(this.msgInvalidName.replace("%s",this.allow));if(this.mime&&!ir(this.mime,t[e].type))return void this.fail(this.msgInvalidMime.replace("%s",this.mime))}this.multiple||(t=[t[0]]),this.beforeAll(this,t);var o=function(t,e){for(var i=[],n=0;n<t.length;n+=e){for(var o=[],r=0;r<e;r++)o.push(t[n+r]);i.push(o)}return i}(t,this.concurrent),r=function(t){var e,i=new FormData;for(e in t.forEach(function(t){return i.append(n.name,t)}),n.params)i.append(e,n.params[e]);de(n.url,{data:i,method:n.method,responseType:n.type,beforeSend:function(t){var e=t.xhr;e.upload&&Yt(e.upload,"progress",n.progress),["loadStart","load","loadEnd","abort"].forEach(function(t){return Yt(e,t.toLowerCase(),n[t])}),n.beforeSend(t)}}).then(function(t){n.complete(t),o.length?r(o.shift()):n.completeAll(t)},function(t){return n.error(t)})};r(o.shift())}}}};function ir(t,e){return e.match(new RegExp("^"+t.replace(/\//g,"\\/").replace(/\*\*/g,"(\\/[^\\/]+)*").replace(/\*/g,"[^\\/]+").replace(/((?!\\))\?/g,"$1.")+"$","i"))}function nr(t){t.preventDefault(),t.stopPropagation()}return J(Object.freeze({__proto__:null,Countdown:Et,Filter:zn,Lightbox:Un,LightboxPanel:jo,Notification:qn,Parallax:Yn,Slider:Xn,SliderParallax:go,Slideshow:yn,SlideshowParallax:go,Sortable:ue,Tooltip:xt,Upload:bn}),function(t,e){return Qi.component(e,t)}),Qi}),function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define("uikiticons",e):(t="undefined"!=typeof globalThis?globalThis:t||self).UIkitIcons=e()}(this,function(){"use strict";function e(t){e.installed||t.icon.add({"500px":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.624,11.866c-0.141,0.132,0.479,0.658,0.662,0.418c0.051-0.046,0.607-0.61,0.662-0.664c0,0,0.738,0.719,0.814,0.719 c0.1,0,0.207-0.055,0.322-0.17c0.27-0.269,0.135-0.416,0.066-0.495l-0.631-0.616l0.658-0.668c0.146-0.156,0.021-0.314-0.1-0.449 c-0.182-0.18-0.359-0.226-0.471-0.125l-0.656,0.654l-0.654-0.654c-0.033-0.034-0.08-0.045-0.124-0.045 c-0.079,0-0.191,0.068-0.307,0.181c-0.202,0.202-0.247,0.351-0.133,0.462l0.665,0.665L9.624,11.866z"/><path d="M11.066,2.884c-1.061,0-2.185,0.248-3.011,0.604c-0.087,0.034-0.141,0.106-0.15,0.205C7.893,3.784,7.919,3.909,7.982,4.066 c0.05,0.136,0.187,0.474,0.452,0.372c0.844-0.326,1.779-0.507,2.633-0.507c0.963,0,1.9,0.191,2.781,0.564 c0.695,0.292,1.357,0.719,2.078,1.34c0.051,0.044,0.105,0.068,0.164,0.068c0.143,0,0.273-0.137,0.389-0.271 c0.191-0.214,0.324-0.395,0.135-0.575c-0.686-0.654-1.436-1.138-2.363-1.533C13.24,3.097,12.168,2.884,11.066,2.884z"/><path d="M16.43,15.747c-0.092-0.028-0.242,0.05-0.309,0.119l0,0c-0.652,0.652-1.42,1.169-2.268,1.521 c-0.877,0.371-1.814,0.551-2.779,0.551c-0.961,0-1.896-0.189-2.775-0.564c-0.848-0.36-1.612-0.879-2.268-1.53 c-0.682-0.688-1.196-1.455-1.529-2.268c-0.325-0.799-0.471-1.643-0.471-1.643c-0.045-0.24-0.258-0.249-0.567-0.203 c-0.128,0.021-0.519,0.079-0.483,0.36v0.01c0.105,0.644,0.289,1.284,0.545,1.895c0.417,0.969,1.002,1.849,1.756,2.604 c0.757,0.754,1.636,1.34,2.604,1.757C8.901,18.785,9.97,19,11.088,19c1.104,0,2.186-0.215,3.188-0.645 c1.838-0.896,2.604-1.757,2.604-1.757c0.182-0.204,0.227-0.317-0.1-0.643C16.779,15.956,16.525,15.774,16.43,15.747z"/><path d="M5.633,13.287c0.293,0.71,0.723,1.341,1.262,1.882c0.54,0.54,1.172,0.971,1.882,1.264c0.731,0.303,1.509,0.461,2.298,0.461 c0.801,0,1.578-0.158,2.297-0.461c0.711-0.293,1.344-0.724,1.883-1.264c0.543-0.541,0.971-1.172,1.264-1.882 c0.314-0.721,0.463-1.5,0.463-2.298c0-0.79-0.148-1.569-0.463-2.289c-0.293-0.699-0.721-1.329-1.264-1.881 c-0.539-0.541-1.172-0.959-1.867-1.263c-0.721-0.303-1.5-0.461-2.299-0.461c-0.802,0-1.613,0.159-2.322,0.461 c-0.577,0.25-1.544,0.867-2.119,1.454v0.012V2.108h8.16C15.1,2.104,15.1,1.69,15.1,1.552C15.1,1.417,15.1,1,14.809,1H5.915 C5.676,1,5.527,1.192,5.527,1.384v6.84c0,0.214,0.273,0.372,0.529,0.428c0.5,0.105,0.614-0.056,0.737-0.224l0,0 c0.18-0.273,0.776-0.884,0.787-0.894c0.901-0.905,2.117-1.408,3.416-1.408c1.285,0,2.5,0.501,3.412,1.408 c0.914,0.914,1.408,2.122,1.408,3.405c0,1.288-0.508,2.496-1.408,3.405c-0.9,0.896-2.152,1.406-3.438,1.406 c-0.877,0-1.711-0.229-2.433-0.671v-4.158c0-0.553,0.237-1.151,0.643-1.614c0.462-0.519,1.094-0.799,1.782-0.799 c0.664,0,1.293,0.253,1.758,0.715c0.459,0.459,0.709,1.071,0.709,1.723c0,1.385-1.094,2.468-2.488,2.468 c-0.273,0-0.769-0.121-0.781-0.125c-0.281-0.087-0.405,0.306-0.438,0.436c-0.159,0.496,0.079,0.585,0.123,0.607 c0.452,0.137,0.743,0.157,1.129,0.157c1.973,0,3.572-1.6,3.572-3.57c0-1.964-1.6-3.552-3.572-3.552c-0.97,0-1.872,0.36-2.546,1.038 c-0.656,0.631-1.027,1.487-1.027,2.322v3.438v-0.011c-0.372-0.42-0.732-1.041-0.981-1.682c-0.102-0.248-0.315-0.202-0.607-0.113 c-0.135,0.035-0.519,0.157-0.44,0.439C5.372,12.799,5.577,13.164,5.633,13.287z"/></svg>',album:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="5" y="2" width="10" height="1"/><rect x="3" y="4" width="14" height="1"/><rect fill="none" stroke="#000" x="1.5" y="6.5" width="17" height="11"/></svg>',"arrow-down":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="10.5,16.08 5.63,10.66 6.37,10 10.5,14.58 14.63,10 15.37,10.66"/><line fill="none" stroke="#000" x1="10.5" y1="4" x2="10.5" y2="15"/></svg>',"arrow-left":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="10 14 5 9.5 10 5"/><line fill="none" stroke="#000" x1="16" y1="9.5" x2="5" y2="9.52"/></svg>',"arrow-right":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="10 5 15 9.5 10 14"/><line fill="none" stroke="#000" x1="4" y1="9.5" x2="15" y2="9.5"/></svg>',"arrow-up":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="10.5,4 15.37,9.4 14.63,10.08 10.5,5.49 6.37,10.08 5.63,9.4"/><line fill="none" stroke="#000" x1="10.5" y1="16" x2="10.5" y2="5"/></svg>',ban:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/><line fill="none" stroke="#000" stroke-width="1.1" x1="4" y1="3.5" x2="16" y2="16.5"/></svg>',behance:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.5,10.6c-0.4-0.5-0.9-0.9-1.6-1.1c1.7-1,2.2-3.2,0.7-4.7C7.8,4,6.3,4,5.2,4C3.5,4,1.7,4,0,4v12c1.7,0,3.4,0,5.2,0 c1,0,2.1,0,3.1-0.5C10.2,14.6,10.5,12.3,9.5,10.6L9.5,10.6z M5.6,6.1c1.8,0,1.8,2.7-0.1,2.7c-1,0-2,0-2.9,0V6.1H5.6z M2.6,13.8v-3.1 c1.1,0,2.1,0,3.2,0c2.1,0,2.1,3.2,0.1,3.2L2.6,13.8z"/><path d="M19.9,10.9C19.7,9.2,18.7,7.6,17,7c-4.2-1.3-7.3,3.4-5.3,7.1c0.9,1.7,2.8,2.3,4.7,2.1c1.7-0.2,2.9-1.3,3.4-2.9h-2.2 c-0.4,1.3-2.4,1.5-3.5,0.6c-0.4-0.4-0.6-1.1-0.6-1.7H20C20,11.7,19.9,10.9,19.9,10.9z M13.5,10.6c0-1.6,2.3-2.7,3.5-1.4 c0.4,0.4,0.5,0.9,0.6,1.4H13.5L13.5,10.6z"/><rect x="13" y="4" width="5" height="1.4"/></svg>',bell:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M17,15.5 L3,15.5 C2.99,14.61 3.79,13.34 4.1,12.51 C4.58,11.3 4.72,10.35 5.19,7.01 C5.54,4.53 5.89,3.2 7.28,2.16 C8.13,1.56 9.37,1.5 9.81,1.5 L9.96,1.5 C9.96,1.5 11.62,1.41 12.67,2.17 C14.08,3.2 14.42,4.54 14.77,7.02 C15.26,10.35 15.4,11.31 15.87,12.52 C16.2,13.34 17.01,14.61 17,15.5 L17,15.5 Z"/><path fill="none" stroke="#000" d="M12.39,16 C12.39,17.37 11.35,18.43 9.91,18.43 C8.48,18.43 7.42,17.37 7.42,16"/></svg>',bold:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5,15.3 C5.66,15.3 5.9,15 5.9,14.53 L5.9,5.5 C5.9,4.92 5.56,4.7 5,4.7 L5,4 L8.95,4 C12.6,4 13.7,5.37 13.7,6.9 C13.7,7.87 13.14,9.17 10.86,9.59 L10.86,9.7 C13.25,9.86 14.29,11.28 14.3,12.54 C14.3,14.47 12.94,16 9,16 L5,16 L5,15.3 Z M9,9.3 C11.19,9.3 11.8,8.5 11.85,7 C11.85,5.65 11.3,4.8 9,4.8 L7.67,4.8 L7.67,9.3 L9,9.3 Z M9.185,15.22 C11.97,15 12.39,14 12.4,12.58 C12.4,11.15 11.39,10 9,10 L7.67,10 L7.67,15 L9.18,15 Z"/></svg>',bolt:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M4.74,20 L7.73,12 L3,12 L15.43,1 L12.32,9 L17.02,9 L4.74,20 L4.74,20 L4.74,20 Z M9.18,11 L7.1,16.39 L14.47,10 L10.86,10 L12.99,4.67 L5.61,11 L9.18,11 L9.18,11 L9.18,11 Z"/></svg>',bookmark:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="5.5 1.5 15.5 1.5 15.5 17.5 10.5 12.5 5.5 17.5"/></svg>',calendar:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M 2,3 2,17 18,17 18,3 2,3 Z M 17,16 3,16 3,8 17,8 17,16 Z M 17,7 3,7 3,4 17,4 17,7 Z"/><rect width="1" height="3" x="6" y="2"/><rect width="1" height="3" x="13" y="2"/></svg>',camera:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10.8" r="3.8"/><path fill="none" stroke="#000" d="M1,4.5 C0.7,4.5 0.5,4.7 0.5,5 L0.5,17 C0.5,17.3 0.7,17.5 1,17.5 L19,17.5 C19.3,17.5 19.5,17.3 19.5,17 L19.5,5 C19.5,4.7 19.3,4.5 19,4.5 L13.5,4.5 L13.5,2.9 C13.5,2.6 13.3,2.5 13,2.5 L7,2.5 C6.7,2.5 6.5,2.6 6.5,2.9 L6.5,4.5 L1,4.5 L1,4.5 Z"/></svg>',cart:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="7.3" cy="17.3" r="1.4"/><circle cx="13.3" cy="17.3" r="1.4"/><polyline fill="none" stroke="#000" points="0 2 3.2 4 5.3 12.5 16 12.5 18 6.5 8 6.5"/></svg>',check:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.1" points="4,10 8,15 17,4"/></svg>',"chevron-double-left":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="10 14 6 10 10 6"/><polyline fill="none" stroke="#000" stroke-width="1.03" points="14 14 10 10 14 6"/></svg>',"chevron-double-right":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="10 6 14 10 10 14"/><polyline fill="none" stroke="#000" stroke-width="1.03" points="6 6 10 10 6 14"/></svg>',"chevron-down":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="16 7 10 13 4 7"/></svg>',"chevron-left":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="13 16 7 10 13 4"/></svg>',"chevron-right":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="7 4 13 10 7 16"/></svg>',"chevron-up":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="4 13 10 7 16 13"/></svg>',clock:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/><rect x="9" y="4" width="1" height="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M13.018,14.197 L9.445,10.625"/></svg>',close:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.06" d="M16,16 L4,4"/><path fill="none" stroke="#000" stroke-width="1.06" d="M16,4 L4,16"/></svg>',"cloud-download":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.3,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6"/><polyline fill="none" stroke="#000" points="11.75 16 9.5 18.25 7.25 16"/><path fill="none" stroke="#000" d="M9.5,18 L9.5,9.5"/></svg>',"cloud-upload":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.31,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6"/><polyline fill="none" stroke="#000" points="7.25 11.75 9.5 9.5 11.75 11.75"/><path fill="none" stroke="#000" d="M9.5,18 L9.5,9.5"/></svg>',code:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.01" points="13,4 19,10 13,16"/><polyline fill="none" stroke="#000" stroke-width="1.01" points="7,4 1,10 7,16"/></svg>',cog:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" cx="9.997" cy="10" r="3.31"/><path fill="none" stroke="#000" d="M18.488,12.285 L16.205,16.237 C15.322,15.496 14.185,15.281 13.303,15.791 C12.428,16.289 12.047,17.373 12.246,18.5 L7.735,18.5 C7.938,17.374 7.553,16.299 6.684,15.791 C5.801,15.27 4.655,15.492 3.773,16.237 L1.5,12.285 C2.573,11.871 3.317,10.999 3.317,9.991 C3.305,8.98 2.573,8.121 1.5,7.716 L3.765,3.784 C4.645,4.516 5.794,4.738 6.687,4.232 C7.555,3.722 7.939,2.637 7.735,1.5 L12.263,1.5 C12.072,2.637 12.441,3.71 13.314,4.22 C14.206,4.73 15.343,4.516 16.225,3.794 L18.487,7.714 C17.404,8.117 16.661,8.988 16.67,10.009 C16.672,11.018 17.415,11.88 18.488,12.285 L18.488,12.285 Z"/></svg>',comment:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6,18.71 L6,14 L1,14 L1,1 L19,1 L19,14 L10.71,14 L6,18.71 L6,18.71 Z M2,13 L7,13 L7,16.29 L10.29,13 L18,13 L18,2 L2,2 L2,13 L2,13 Z"/></svg>',commenting:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="1.5,1.5 18.5,1.5 18.5,13.5 10.5,13.5 6.5,17.5 6.5,13.5 1.5,13.5"/><circle cx="10" cy="8" r="1"/><circle cx="6" cy="8" r="1"/><circle cx="14" cy="8" r="1"/></svg>',comments:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="2 0.5 19.5 0.5 19.5 13"/><path d="M5,19.71 L5,15 L0,15 L0,2 L18,2 L18,15 L9.71,15 L5,19.71 L5,19.71 L5,19.71 Z M1,14 L6,14 L6,17.29 L9.29,14 L17,14 L17,3 L1,3 L1,14 L1,14 L1,14 Z"/></svg>',copy:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" x="3.5" y="2.5" width="12" height="16"/><polyline fill="none" stroke="#000" points="5 0.5 17.5 0.5 17.5 17"/></svg>',"credit-card":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" x="1.5" y="4.5" width="17" height="12"/><rect x="1" y="7" width="18" height="3"/></svg>',database:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><ellipse fill="none" stroke="#000" cx="10" cy="4.64" rx="7.5" ry="3.14"/><path fill="none" stroke="#000" d="M17.5,8.11 C17.5,9.85 14.14,11.25 10,11.25 C5.86,11.25 2.5,9.84 2.5,8.11"/><path fill="none" stroke="#000" d="M17.5,11.25 C17.5,12.99 14.14,14.39 10,14.39 C5.86,14.39 2.5,12.98 2.5,11.25"/><path fill="none" stroke="#000" d="M17.49,4.64 L17.5,14.36 C17.5,16.1 14.14,17.5 10,17.5 C5.86,17.5 2.5,16.09 2.5,14.36 L2.5,4.64"/></svg>',desktop:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="8" y="15" width="1" height="2"/><rect x="11" y="15" width="1" height="2"/><rect x="5" y="16" width="10" height="1"/><rect fill="none" stroke="#000" x="1.5" y="3.5" width="17" height="11"/></svg>',download:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="14,10 9.5,14.5 5,10"/><rect x="3" y="17" width="13" height="1"/><line fill="none" stroke="#000" x1="9.5" y1="13.91" x2="9.5" y2="3"/></svg>',dribbble:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.4" d="M1.3,8.9c0,0,5,0.1,8.6-1c1.4-0.4,2.6-0.9,4-1.9 c1.4-1.1,2.5-2.5,2.5-2.5"/><path fill="none" stroke="#000" stroke-width="1.4" d="M3.9,16.6c0,0,1.7-2.8,3.5-4.2 c1.8-1.3,4-2,5.7-2.2C16,10,19,10.6,19,10.6"/><path fill="none" stroke="#000" stroke-width="1.4" d="M6.9,1.6c0,0,3.3,4.6,4.2,6.8 c0.4,0.9,1.3,3.1,1.9,5.2c0.6,2,0.9,4.4,0.9,4.4"/><circle fill="none" stroke="#000" stroke-width="1.4" cx="10" cy="10" r="9"/></svg>',etsy:'<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><path d="M8,4.26C8,4.07,8,4,8.31,4h4.46c.79,0,1.22.67,1.53,1.91l.25,1h.76c.14-2.82.26-4,.26-4S13.65,3,12.52,3H6.81L3.75,2.92v.84l1,.2c.73.11.9.27,1,1,0,0,.06,2,.06,5.17s-.06,5.14-.06,5.14c0,.59-.23.81-1,.94l-1,.2v.84l3.06-.1h5.11c1.15,0,3.82.1,3.82.1,0-.7.45-3.88.51-4.22h-.73l-.76,1.69a2.25,2.25,0,0,1-2.45,1.47H9.4c-1,0-1.44-.4-1.44-1.24V10.44s2.16,0,2.86.06c.55,0,.85.19,1.06,1l.23,1H13L12.9,9.94,13,7.41h-.85l-.28,1.13c-.16.74-.28.84-1,1-1,.1-2.89.09-2.89.09Z"/></svg>',expand:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="13 2 18 2 18 7 17 7 17 3 13 3"/><polygon points="2 13 3 13 3 17 7 17 7 18 2 18"/><path fill="none" stroke="#000" stroke-width="1.1" d="M11,9 L17,3"/><path fill="none" stroke="#000" stroke-width="1.1" d="M3,17 L9,11"/></svg>',facebook:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M11,10h2.6l0.4-3H11V5.3c0-0.9,0.2-1.5,1.5-1.5H14V1.1c-0.3,0-1-0.1-2.1-0.1C9.6,1,8,2.4,8,5v2H5.5v3H8v8h3V10z"/></svg>',"file-edit":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M18.65,1.68 C18.41,1.45 18.109,1.33 17.81,1.33 C17.499,1.33 17.209,1.45 16.98,1.68 L8.92,9.76 L8,12.33 L10.55,11.41 L18.651,3.34 C19.12,2.87 19.12,2.15 18.65,1.68 L18.65,1.68 L18.65,1.68 Z"/><polyline fill="none" stroke="#000" points="16.5 8.482 16.5 18.5 3.5 18.5 3.5 1.5 14.211 1.5"/></svg>',"file-pdf":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" width="13" height="17" x="3.5" y="1.5"/><path d="M14.65 11.67c-.48.3-1.37-.19-1.79-.37a4.65 4.65 0 0 1 1.49.06c.35.1.36.28.3.31zm-6.3.06l.43-.79a14.7 14.7 0 0 0 .75-1.64 5.48 5.48 0 0 0 1.25 1.55l.2.15a16.36 16.36 0 0 0-2.63.73zM9.5 5.32c.2 0 .32.5.32.97a1.99 1.99 0 0 1-.23 1.04 5.05 5.05 0 0 1-.17-1.3s0-.71.08-.71zm-3.9 9a4.35 4.35 0 0 1 1.21-1.46l.24-.22a4.35 4.35 0 0 1-1.46 1.68zm9.23-3.3a2.05 2.05 0 0 0-1.32-.3 11.07 11.07 0 0 0-1.58.11 4.09 4.09 0 0 1-.74-.5 5.39 5.39 0 0 1-1.32-2.06 10.37 10.37 0 0 0 .28-2.62 1.83 1.83 0 0 0-.07-.25.57.57 0 0 0-.52-.4H9.4a.59.59 0 0 0-.6.38 6.95 6.95 0 0 0 .37 3.14c-.26.63-1 2.12-1 2.12-.3.58-.57 1.08-.82 1.5l-.8.44A3.11 3.11 0 0 0 5 14.16a.39.39 0 0 0 .15.42l.24.13c1.15.56 2.28-1.74 2.66-2.42a23.1 23.1 0 0 1 3.59-.85 4.56 4.56 0 0 0 2.91.8.5.5 0 0 0 .3-.21 1.1 1.1 0 0 0 .12-.75.84.84 0 0 0-.14-.25z"/></svg>',"file-text":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" width="13" height="17" x="3.5" y="1.5"/><line fill="none" stroke="#000" x1="6" x2="12" y1="12.5" y2="12.5"/><line fill="none" stroke="#000" x1="6" x2="14" y1="8.5" y2="8.5"/><line fill="none" stroke="#000" x1="6" x2="14" y1="6.5" y2="6.5"/><line fill="none" stroke="#000" x1="6" x2="14" y1="10.5" y2="10.5"/></svg>',file:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" x="3.5" y="1.5" width="13" height="17"/></svg>',flickr:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="5.5" cy="9.5" r="3.5"/><circle cx="14.5" cy="9.5" r="3.5"/></svg>',folder:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="9.5 5.5 8.5 3.5 1.5 3.5 1.5 16.5 18.5 16.5 18.5 5.5"/></svg>',forward:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2.47,13.11 C4.02,10.02 6.27,7.85 9.04,6.61 C9.48,6.41 10.27,6.13 11,5.91 L11,2 L18.89,9 L11,16 L11,12.13 C9.25,12.47 7.58,13.19 6.02,14.25 C3.03,16.28 1.63,18.54 1.63,18.54 C1.63,18.54 1.38,15.28 2.47,13.11 L2.47,13.11 Z M5.3,13.53 C6.92,12.4 9.04,11.4 12,10.92 L12,13.63 L17.36,9 L12,4.25 L12,6.8 C11.71,6.86 10.86,7.02 9.67,7.49 C6.79,8.65 4.58,10.96 3.49,13.08 C3.18,13.7 2.68,14.87 2.49,16 C3.28,15.05 4.4,14.15 5.3,13.53 L5.3,13.53 Z"/></svg>',foursquare:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.23,2 C15.96,2 16.4,2.41 16.5,2.86 C16.57,3.15 16.56,3.44 16.51,3.73 C16.46,4.04 14.86,11.72 14.75,12.03 C14.56,12.56 14.16,12.82 13.61,12.83 C13.03,12.84 11.09,12.51 10.69,13 C10.38,13.38 7.79,16.39 6.81,17.53 C6.61,17.76 6.4,17.96 6.08,17.99 C5.68,18.04 5.29,17.87 5.17,17.45 C5.12,17.28 5.1,17.09 5.1,16.91 C5.1,12.4 4.86,7.81 5.11,3.31 C5.17,2.5 5.81,2.12 6.53,2 L15.23,2 L15.23,2 Z M9.76,11.42 C9.94,11.19 10.17,11.1 10.45,11.1 L12.86,11.1 C13.12,11.1 13.31,10.94 13.36,10.69 C13.37,10.64 13.62,9.41 13.74,8.83 C13.81,8.52 13.53,8.28 13.27,8.28 C12.35,8.29 11.42,8.28 10.5,8.28 C9.84,8.28 9.83,7.69 9.82,7.21 C9.8,6.85 10.13,6.55 10.5,6.55 C11.59,6.56 12.67,6.55 13.76,6.55 C14.03,6.55 14.23,6.4 14.28,6.14 C14.34,5.87 14.67,4.29 14.67,4.29 C14.67,4.29 14.82,3.74 14.19,3.74 L7.34,3.74 C7,3.75 6.84,4.02 6.84,4.33 C6.84,7.58 6.85,14.95 6.85,14.99 C6.87,15 8.89,12.51 9.76,11.42 L9.76,11.42 Z"/></svg>',future:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline points="19 2 18 2 18 6 14 6 14 7 19 7 19 2"/><path fill="none" stroke="#000" stroke-width="1.1" d="M18,6.548 C16.709,3.29 13.354,1 9.6,1 C4.6,1 0.6,5 0.6,10 C0.6,15 4.6,19 9.6,19 C14.6,19 18.6,15 18.6,10"/><rect x="9" y="4" width="1" height="7"/><path d="M13.018,14.197 L9.445,10.625" fill="none" stroke="#000" stroke-width="1.1"/></svg>',"git-branch":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.2" cx="7" cy="3" r="2"/><circle fill="none" stroke="#000" stroke-width="1.2" cx="14" cy="6" r="2"/><circle fill="none" stroke="#000" stroke-width="1.2" cx="7" cy="17" r="2"/><path fill="none" stroke="#000" stroke-width="2" d="M14,8 C14,10.41 12.43,10.87 10.56,11.25 C9.09,11.54 7,12.06 7,15 L7,5"/></svg>',"git-fork":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.2" cx="5.79" cy="2.79" r="1.79"/><circle fill="none" stroke="#000" stroke-width="1.2" cx="14.19" cy="2.79" r="1.79"/><circle fill="none" stroke="#000" stroke-width="1.2" cx="10.03" cy="16.79" r="1.79"/><path fill="none" stroke="#000" stroke-width="2" d="M5.79,4.57 L5.79,6.56 C5.79,9.19 10.03,10.22 10.03,13.31 C10.03,14.86 10.04,14.55 10.04,14.55 C10.04,14.37 10.04,14.86 10.04,13.31 C10.04,10.22 14.2,9.19 14.2,6.56 L14.2,4.57"/></svg>',"github-alt":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10,0.5 C4.75,0.5 0.5,4.76 0.5,10.01 C0.5,15.26 4.75,19.51 10,19.51 C15.24,19.51 19.5,15.26 19.5,10.01 C19.5,4.76 15.25,0.5 10,0.5 L10,0.5 Z M12.81,17.69 C12.81,17.69 12.81,17.7 12.79,17.69 C12.47,17.75 12.35,17.59 12.35,17.36 L12.35,16.17 C12.35,15.45 12.09,14.92 11.58,14.56 C12.2,14.51 12.77,14.39 13.26,14.21 C13.87,13.98 14.36,13.69 14.74,13.29 C15.42,12.59 15.76,11.55 15.76,10.17 C15.76,9.25 15.45,8.46 14.83,7.8 C15.1,7.08 15.07,6.29 14.75,5.44 L14.51,5.42 C14.34,5.4 14.06,5.46 13.67,5.61 C13.25,5.78 12.79,6.03 12.31,6.35 C11.55,6.16 10.81,6.05 10.09,6.05 C9.36,6.05 8.61,6.15 7.88,6.35 C7.28,5.96 6.75,5.68 6.26,5.54 C6.07,5.47 5.9,5.44 5.78,5.44 L5.42,5.44 C5.06,6.29 5.04,7.08 5.32,7.8 C4.7,8.46 4.4,9.25 4.4,10.17 C4.4,11.94 4.96,13.16 6.08,13.84 C6.53,14.13 7.05,14.32 7.69,14.43 C8.03,14.5 8.32,14.54 8.55,14.55 C8.07,14.89 7.82,15.42 7.82,16.16 L7.82,17.51 C7.8,17.69 7.7,17.8 7.51,17.8 C4.21,16.74 1.82,13.65 1.82,10.01 C1.82,5.5 5.49,1.83 10,1.83 C14.5,1.83 18.17,5.5 18.17,10.01 C18.18,13.53 15.94,16.54 12.81,17.69 L12.81,17.69 Z"/></svg>',github:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10,1 C5.03,1 1,5.03 1,10 C1,13.98 3.58,17.35 7.16,18.54 C7.61,18.62 7.77,18.34 7.77,18.11 C7.77,17.9 7.76,17.33 7.76,16.58 C5.26,17.12 4.73,15.37 4.73,15.37 C4.32,14.33 3.73,14.05 3.73,14.05 C2.91,13.5 3.79,13.5 3.79,13.5 C4.69,13.56 5.17,14.43 5.17,14.43 C5.97,15.8 7.28,15.41 7.79,15.18 C7.87,14.6 8.1,14.2 8.36,13.98 C6.36,13.75 4.26,12.98 4.26,9.53 C4.26,8.55 4.61,7.74 5.19,7.11 C5.1,6.88 4.79,5.97 5.28,4.73 C5.28,4.73 6.04,4.49 7.75,5.65 C8.47,5.45 9.24,5.35 10,5.35 C10.76,5.35 11.53,5.45 12.25,5.65 C13.97,4.48 14.72,4.73 14.72,4.73 C15.21,5.97 14.9,6.88 14.81,7.11 C15.39,7.74 15.73,8.54 15.73,9.53 C15.73,12.99 13.63,13.75 11.62,13.97 C11.94,14.25 12.23,14.8 12.23,15.64 C12.23,16.84 12.22,17.81 12.22,18.11 C12.22,18.35 12.38,18.63 12.84,18.54 C16.42,17.35 19,13.98 19,10 C19,5.03 14.97,1 10,1 L10,1 Z"/></svg>',gitter:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="3.5" y="1" width="1.531" height="11.471"/><rect x="7.324" y="4.059" width="1.529" height="15.294"/><rect x="11.148" y="4.059" width="1.527" height="15.294"/><rect x="14.971" y="4.059" width="1.529" height="8.412"/></svg>',"google-plus":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M12.9,9c0,2.7-0.6,5-3.2,6.3c-3.7,1.8-8.1,0.2-9.4-3.6C-1.1,7.6,1.9,3.3,6.1,3c1.7-0.1,3.2,0.3,4.6,1.3 c0.1,0.1,0.3,0.2,0.4,0.4c-0.5,0.5-1.2,1-1.7,1.6c-1-0.8-2.1-1.1-3.5-0.9C5,5.6,4.2,6,3.6,6.7c-1.3,1.3-1.5,3.4-0.5,5 c1,1.7,2.6,2.3,4.6,1.9c1.4-0.3,2.4-1.2,2.6-2.6H6.9V9H12.9z"/><polygon points="20,9 20,11 18,11 18,13 16,13 16,11 14,11 14,9 16,9 16,7 18,7 18,9"/></svg>',google:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.86,9.09 C18.46,12.12 17.14,16.05 13.81,17.56 C9.45,19.53 4.13,17.68 2.47,12.87 C0.68,7.68 4.22,2.42 9.5,2.03 C11.57,1.88 13.42,2.37 15.05,3.65 C15.22,3.78 15.37,3.93 15.61,4.14 C14.9,4.81 14.23,5.45 13.5,6.14 C12.27,5.08 10.84,4.72 9.28,4.98 C8.12,5.17 7.16,5.76 6.37,6.63 C4.88,8.27 4.62,10.86 5.76,12.82 C6.95,14.87 9.17,15.8 11.57,15.25 C13.27,14.87 14.76,13.33 14.89,11.75 L10.51,11.75 L10.51,9.09 L17.86,9.09 L17.86,9.09 Z"/></svg>',grid:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="2" y="2" width="3" height="3"/><rect x="8" y="2" width="3" height="3"/><rect x="14" y="2" width="3" height="3"/><rect x="2" y="8" width="3" height="3"/><rect x="8" y="8" width="3" height="3"/><rect x="14" y="8" width="3" height="3"/><rect x="2" y="14" width="3" height="3"/><rect x="8" y="14" width="3" height="3"/><rect x="14" y="14" width="3" height="3"/></svg>',happy:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="13" cy="7" r="1"/><circle cx="7" cy="7" r="1"/><circle fill="none" stroke="#000" cx="10" cy="10" r="8.5"/><path fill="none" stroke="#000" d="M14.6,11.4 C13.9,13.3 12.1,14.5 10,14.5 C7.9,14.5 6.1,13.3 5.4,11.4"/></svg>',hashtag:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.431,8 L15.661,7 L12.911,7 L13.831,3 L12.901,3 L11.98,7 L9.29,7 L10.21,3 L9.281,3 L8.361,7 L5.23,7 L5,8 L8.13,8 L7.21,12 L4.23,12 L4,13 L6.98,13 L6.061,17 L6.991,17 L7.911,13 L10.601,13 L9.681,17 L10.611,17 L11.531,13 L14.431,13 L14.661,12 L11.76,12 L12.681,8 L15.431,8 Z M10.831,12 L8.141,12 L9.061,8 L11.75,8 L10.831,12 Z"/></svg>',heart:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.03" d="M10,4 C10,4 8.1,2 5.74,2 C3.38,2 1,3.55 1,6.73 C1,8.84 2.67,10.44 2.67,10.44 L10,18 L17.33,10.44 C17.33,10.44 19,8.84 19,6.73 C19,3.55 16.62,2 14.26,2 C11.9,2 10,4 10,4 L10,4 Z"/></svg>',history:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="#000" points="1 2 2 2 2 6 6 6 6 7 1 7 1 2"/><path fill="none" stroke="#000" stroke-width="1.1" d="M2.1,6.548 C3.391,3.29 6.746,1 10.5,1 C15.5,1 19.5,5 19.5,10 C19.5,15 15.5,19 10.5,19 C5.5,19 1.5,15 1.5,10"/><rect x="9" y="4" width="1" height="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M13.018,14.197 L9.445,10.625"/></svg>',home:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="18.65 11.35 10 2.71 1.35 11.35 0.65 10.65 10 1.29 19.35 10.65"/><polygon points="15 4 18 4 18 7 17 7 17 5 15 5"/><polygon points="3 11 4 11 4 18 7 18 7 12 12 12 12 18 16 18 16 11 17 11 17 19 11 19 11 13 8 13 8 19 3 19"/></svg>',image:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="16.1" cy="6.1" r="1.1"/><rect fill="none" stroke="#000" x=".5" y="2.5" width="19" height="15"/><polyline fill="none" stroke="#000" stroke-width="1.01" points="4,13 8,9 13,14"/><polyline fill="none" stroke="#000" stroke-width="1.01" points="11,12 12.5,10.5 16,14"/></svg>',info:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M12.13,11.59 C11.97,12.84 10.35,14.12 9.1,14.16 C6.17,14.2 9.89,9.46 8.74,8.37 C9.3,8.16 10.62,7.83 10.62,8.81 C10.62,9.63 10.12,10.55 9.88,11.32 C8.66,15.16 12.13,11.15 12.14,11.18 C12.16,11.21 12.16,11.35 12.13,11.59 C12.08,11.95 12.16,11.35 12.13,11.59 L12.13,11.59 Z M11.56,5.67 C11.56,6.67 9.36,7.15 9.36,6.03 C9.36,5 11.56,4.54 11.56,5.67 L11.56,5.67 Z"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/></svg>',instagram:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M13.55,1H6.46C3.45,1,1,3.44,1,6.44v7.12c0,3,2.45,5.44,5.46,5.44h7.08c3.02,0,5.46-2.44,5.46-5.44V6.44 C19.01,3.44,16.56,1,13.55,1z M17.5,14c0,1.93-1.57,3.5-3.5,3.5H6c-1.93,0-3.5-1.57-3.5-3.5V6c0-1.93,1.57-3.5,3.5-3.5h8 c1.93,0,3.5,1.57,3.5,3.5V14z"/><circle cx="14.87" cy="5.26" r="1.09"/><path d="M10.03,5.45c-2.55,0-4.63,2.06-4.63,4.6c0,2.55,2.07,4.61,4.63,4.61c2.56,0,4.63-2.061,4.63-4.61 C14.65,7.51,12.58,5.45,10.03,5.45L10.03,5.45L10.03,5.45z M10.08,13c-1.66,0-3-1.34-3-2.99c0-1.65,1.34-2.99,3-2.99s3,1.34,3,2.99 C13.08,11.66,11.74,13,10.08,13L10.08,13L10.08,13z"/></svg>',italic:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M12.63,5.48 L10.15,14.52 C10,15.08 10.37,15.25 11.92,15.3 L11.72,16 L6,16 L6.2,15.31 C7.78,15.26 8.19,15.09 8.34,14.53 L10.82,5.49 C10.97,4.92 10.63,4.76 9.09,4.71 L9.28,4 L15,4 L14.81,4.69 C13.23,4.75 12.78,4.91 12.63,5.48 L12.63,5.48 Z"/></svg>',joomla:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M7.8,13.4l1.7-1.7L5.9,8c-0.6-0.5-0.6-1.5,0-2c0.6-0.6,1.4-0.6,2,0l1.7-1.7c-1-1-2.3-1.3-3.6-1C5.8,2.2,4.8,1.4,3.7,1.4 c-1.3,0-2.3,1-2.3,2.3c0,1.1,0.8,2,1.8,2.3c-0.4,1.3-0.1,2.8,1,3.8L7.8,13.4L7.8,13.4z"/><path d="M10.2,4.3c1-1,2.5-1.4,3.8-1c0.2-1.1,1.1-2,2.3-2c1.3,0,2.3,1,2.3,2.3c0,1.2-0.9,2.2-2,2.3c0.4,1.3,0,2.8-1,3.8L13.9,8 c0.6-0.5,0.6-1.5,0-2c-0.5-0.6-1.5-0.6-2,0L8.2,9.7L6.5,8"/><path d="M14.1,16.8c-1.3,0.4-2.8,0.1-3.8-1l1.7-1.7c0.6,0.6,1.5,0.6,2,0c0.5-0.6,0.6-1.5,0-2l-3.7-3.7L12,6.7l3.7,3.7 c1,1,1.3,2.4,1,3.6c1.1,0.2,2,1.1,2,2.3c0,1.3-1,2.3-2.3,2.3C15.2,18.6,14.3,17.8,14.1,16.8"/><path d="M13.2,12.2l-3.7,3.7c-1,1-2.4,1.3-3.6,1c-0.2,1-1.2,1.8-2.2,1.8c-1.3,0-2.3-1-2.3-2.3c0-1.1,0.8-2,1.8-2.3 c-0.3-1.3,0-2.7,1-3.7l1.7,1.7c-0.6,0.6-0.6,1.5,0,2c0.6,0.6,1.4,0.6,2,0l3.7-3.7"/></svg>',laptop:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect y="16" width="20" height="1"/><rect fill="none" stroke="#000" x="2.5" y="4.5" width="15" height="10"/></svg>',lifesaver:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10,0.5 C4.76,0.5 0.5,4.76 0.5,10 C0.5,15.24 4.76,19.5 10,19.5 C15.24,19.5 19.5,15.24 19.5,10 C19.5,4.76 15.24,0.5 10,0.5 L10,0.5 Z M10,1.5 C11.49,1.5 12.89,1.88 14.11,2.56 L11.85,4.82 C11.27,4.61 10.65,4.5 10,4.5 C9.21,4.5 8.47,4.67 7.79,4.96 L5.58,2.75 C6.87,1.95 8.38,1.5 10,1.5 L10,1.5 Z M4.96,7.8 C4.67,8.48 4.5,9.21 4.5,10 C4.5,10.65 4.61,11.27 4.83,11.85 L2.56,14.11 C1.88,12.89 1.5,11.49 1.5,10 C1.5,8.38 1.95,6.87 2.75,5.58 L4.96,7.79 L4.96,7.8 L4.96,7.8 Z M10,18.5 C8.25,18.5 6.62,17.97 5.27,17.06 L7.46,14.87 C8.22,15.27 9.08,15.5 10,15.5 C10.79,15.5 11.53,15.33 12.21,15.04 L14.42,17.25 C13.13,18.05 11.62,18.5 10,18.5 L10,18.5 Z M10,14.5 C7.52,14.5 5.5,12.48 5.5,10 C5.5,7.52 7.52,5.5 10,5.5 C12.48,5.5 14.5,7.52 14.5,10 C14.5,12.48 12.48,14.5 10,14.5 L10,14.5 Z M15.04,12.21 C15.33,11.53 15.5,10.79 15.5,10 C15.5,9.08 15.27,8.22 14.87,7.46 L17.06,5.27 C17.97,6.62 18.5,8.25 18.5,10 C18.5,11.62 18.05,13.13 17.25,14.42 L15.04,12.21 L15.04,12.21 Z"/></svg>',link:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M10.625,12.375 L7.525,15.475 C6.825,16.175 5.925,16.175 5.225,15.475 L4.525,14.775 C3.825,14.074 3.825,13.175 4.525,12.475 L7.625,9.375"/><path fill="none" stroke="#000" stroke-width="1.1" d="M9.325,7.375 L12.425,4.275 C13.125,3.575 14.025,3.575 14.724,4.275 L15.425,4.975 C16.125,5.675 16.125,6.575 15.425,7.275 L12.325,10.375"/><path fill="none" stroke="#000" stroke-width="1.1" d="M7.925,11.875 L11.925,7.975"/></svg>',linkedin:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5.77,17.89 L5.77,7.17 L2.21,7.17 L2.21,17.89 L5.77,17.89 L5.77,17.89 Z M3.99,5.71 C5.23,5.71 6.01,4.89 6.01,3.86 C5.99,2.8 5.24,2 4.02,2 C2.8,2 2,2.8 2,3.85 C2,4.88 2.77,5.7 3.97,5.7 L3.99,5.7 L3.99,5.71 L3.99,5.71 Z"/><path d="M7.75,17.89 L11.31,17.89 L11.31,11.9 C11.31,11.58 11.33,11.26 11.43,11.03 C11.69,10.39 12.27,9.73 13.26,9.73 C14.55,9.73 15.06,10.71 15.06,12.15 L15.06,17.89 L18.62,17.89 L18.62,11.74 C18.62,8.45 16.86,6.92 14.52,6.92 C12.6,6.92 11.75,7.99 11.28,8.73 L11.3,8.73 L11.3,7.17 L7.75,7.17 C7.79,8.17 7.75,17.89 7.75,17.89 L7.75,17.89 L7.75,17.89 Z"/></svg>',list:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="6" y="4" width="12" height="1"/><rect x="6" y="9" width="12" height="1"/><rect x="6" y="14" width="12" height="1"/><rect x="2" y="4" width="2" height="1"/><rect x="2" y="9" width="2" height="1"/><rect x="2" y="14" width="2" height="1"/></svg>',location:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.01" d="M10,0.5 C6.41,0.5 3.5,3.39 3.5,6.98 C3.5,11.83 10,19 10,19 C10,19 16.5,11.83 16.5,6.98 C16.5,3.39 13.59,0.5 10,0.5 L10,0.5 Z"/><circle fill="none" stroke="#000" cx="10" cy="6.8" r="2.3"/></svg>',lock:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" height="10" width="13" y="8.5" x="3.5"/><path fill="none" stroke="#000" d="M6.5,8 L6.5,4.88 C6.5,3.01 8.07,1.5 10,1.5 C11.93,1.5 13.5,3.01 13.5,4.88 L13.5,8"/></svg>',mail:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="1.4,6.5 10,11 18.6,6.5"/><path d="M 1,4 1,16 19,16 19,4 1,4 Z M 18,15 2,15 2,5 18,5 18,15 Z"/></svg>',menu:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="2" y="4" width="16" height="1"/><rect x="2" y="9" width="16" height="1"/><rect x="2" y="14" width="16" height="1"/></svg>',microphone:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" x1="10" x2="10" y1="16.44" y2="18.5"/><line fill="none" stroke="#000" x1="7" x2="13" y1="18.5" y2="18.5"/><path fill="none" stroke="#000" stroke-width="1.1" d="M13.5 4.89v5.87a3.5 3.5 0 0 1-7 0V4.89a3.5 3.5 0 0 1 7 0z"/><path fill="none" stroke="#000" stroke-width="1.1" d="M15.5 10.36V11a5.5 5.5 0 0 1-11 0v-.6"/></svg>',"minus-circle":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9.5" cy="9.5" r="9"/><line fill="none" stroke="#000" x1="5" y1="9.5" x2="14" y2="9.5"/></svg>',minus:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect height="1" width="18" y="9" x="1"/></svg>',"more-vertical":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="10" cy="3" r="2"/><circle cx="10" cy="10" r="2"/><circle cx="10" cy="17" r="2"/></svg>',more:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="3" cy="10" r="2"/><circle cx="10" cy="10" r="2"/><circle cx="17" cy="10" r="2"/></svg>',move:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="4,5 1,5 1,9 2,9 2,6 4,6"/><polygon points="1,16 2,16 2,18 4,18 4,19 1,19"/><polygon points="14,16 14,19 11,19 11,18 13,18 13,16"/><rect fill="none" stroke="#000" x="5.5" y="1.5" width="13" height="13"/><rect x="1" y="11" width="1" height="3"/><rect x="6" y="18" width="3" height="1"/></svg>',nut:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="2.5,5.7 10,1.3 17.5,5.7 17.5,14.3 10,18.7 2.5,14.3"/><circle fill="none" stroke="#000" cx="10" cy="10" r="3.5"/></svg>',pagekit:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="3,1 17,1 17,16 10,16 10,13 14,13 14,4 6,4 6,16 10,16 10,19 3,19"/></svg>',"paint-bucket":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10.21,1 L0,11.21 L8.1,19.31 L18.31,9.1 L10.21,1 L10.21,1 Z M16.89,9.1 L15,11 L1.7,11 L10.21,2.42 L16.89,9.1 Z"/><path fill="none" stroke="#000" stroke-width="1.1" d="M6.42,2.33 L11.7,7.61"/><path d="M18.49,12 C18.49,12 20,14.06 20,15.36 C20,16.28 19.24,17 18.49,17 L18.49,17 C17.74,17 17,16.28 17,15.36 C17,14.06 18.49,12 18.49,12 L18.49,12 Z"/></svg>',pencil:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M17.25,6.01 L7.12,16.1 L3.82,17.2 L5.02,13.9 L15.12,3.88 C15.71,3.29 16.66,3.29 17.25,3.88 C17.83,4.47 17.83,5.42 17.25,6.01 L17.25,6.01 Z"/><path fill="none" stroke="#000" d="M15.98,7.268 L13.851,5.148"/></svg>',"phone-landscape":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M17,5.5 C17.8,5.5 18.5,6.2 18.5,7 L18.5,14 C18.5,14.8 17.8,15.5 17,15.5 L3,15.5 C2.2,15.5 1.5,14.8 1.5,14 L1.5,7 C1.5,6.2 2.2,5.5 3,5.5 L17,5.5 L17,5.5 L17,5.5 Z"/><circle cx="3.8" cy="10.5" r=".8"/></svg>',phone:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M15.5,17 C15.5,17.8 14.8,18.5 14,18.5 L7,18.5 C6.2,18.5 5.5,17.8 5.5,17 L5.5,3 C5.5,2.2 6.2,1.5 7,1.5 L14,1.5 C14.8,1.5 15.5,2.2 15.5,3 L15.5,17 L15.5,17 L15.5,17 Z"/><circle cx="10.5" cy="16.5" r=".8"/></svg>',pinterest:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10.21,1 C5.5,1 3,4.16 3,7.61 C3,9.21 3.85,11.2 5.22,11.84 C5.43,11.94 5.54,11.89 5.58,11.69 C5.62,11.54 5.8,10.8 5.88,10.45 C5.91,10.34 5.89,10.24 5.8,10.14 C5.36,9.59 5,8.58 5,7.65 C5,5.24 6.82,2.91 9.93,2.91 C12.61,2.91 14.49,4.74 14.49,7.35 C14.49,10.3 13,12.35 11.06,12.35 C9.99,12.35 9.19,11.47 9.44,10.38 C9.75,9.08 10.35,7.68 10.35,6.75 C10.35,5.91 9.9,5.21 8.97,5.21 C7.87,5.21 6.99,6.34 6.99,7.86 C6.99,8.83 7.32,9.48 7.32,9.48 C7.32,9.48 6.24,14.06 6.04,14.91 C5.7,16.35 6.08,18.7 6.12,18.9 C6.14,19.01 6.26,19.05 6.33,18.95 C6.44,18.81 7.74,16.85 8.11,15.44 C8.24,14.93 8.79,12.84 8.79,12.84 C9.15,13.52 10.19,14.09 11.29,14.09 C14.58,14.09 16.96,11.06 16.96,7.3 C16.94,3.7 14,1 10.21,1"/></svg>',"play-circle":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" stroke-width="1.1" points="8.5 7 13.5 10 8.5 13"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/></svg>',play:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="6.5,5 14.5,10 6.5,15"/></svg>',"plus-circle":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9.5" cy="9.5" r="9"/><line fill="none" stroke="#000" x1="9.5" y1="5" x2="9.5" y2="14"/><line fill="none" stroke="#000" x1="5" y1="9.5" x2="14" y2="9.5"/></svg>',plus:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="9" y="1" width="1" height="17"/><rect x="1" y="9" width="17" height="1"/></svg>',print:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="4.5 13.5 1.5 13.5 1.5 6.5 18.5 6.5 18.5 13.5 15.5 13.5"/><polyline fill="none" stroke="#000" points="15.5 6.5 15.5 2.5 4.5 2.5 4.5 6.5"/><rect fill="none" stroke="#000" width="11" height="6" x="4.5" y="11.5"/><rect width="8" height="1" x="6" y="13"/><rect width="8" height="1" x="6" y="15"/></svg>',pull:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="6.85,8 9.5,10.6 12.15,8 12.85,8.7 9.5,12 6.15,8.7"/><line fill="none" stroke="#000" x1="9.5" y1="11" x2="9.5" y2="2"/><polyline fill="none" stroke="#000" points="6,5.5 3.5,5.5 3.5,18.5 15.5,18.5 15.5,5.5 13,5.5"/></svg>',push:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="12.15,4 9.5,1.4 6.85,4 6.15,3.3 9.5,0 12.85,3.3"/><line fill="none" stroke="#000" x1="9.5" y1="10" x2="9.5" y2="1"/><polyline fill="none" stroke="#000" points="6 5.5 3.5 5.5 3.5 18.5 15.5 18.5 15.5 5.5 13 5.5"/></svg>',question:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/><circle cx="10.44" cy="14.42" r="1.05"/><path fill="none" stroke="#000" stroke-width="1.2" d="M8.17,7.79 C8.17,4.75 12.72,4.73 12.72,7.72 C12.72,8.67 11.81,9.15 11.23,9.75 C10.75,10.24 10.51,10.73 10.45,11.4 C10.44,11.53 10.43,11.64 10.43,11.75"/></svg>',"quote-right":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.27,7.79 C17.27,9.45 16.97,10.43 15.99,12.02 C14.98,13.64 13,15.23 11.56,15.97 L11.1,15.08 C12.34,14.2 13.14,13.51 14.02,11.82 C14.27,11.34 14.41,10.92 14.49,10.54 C14.3,10.58 14.09,10.6 13.88,10.6 C12.06,10.6 10.59,9.12 10.59,7.3 C10.59,5.48 12.06,4 13.88,4 C15.39,4 16.67,5.02 17.05,6.42 C17.19,6.82 17.27,7.27 17.27,7.79 L17.27,7.79 Z"/><path d="M8.68,7.79 C8.68,9.45 8.38,10.43 7.4,12.02 C6.39,13.64 4.41,15.23 2.97,15.97 L2.51,15.08 C3.75,14.2 4.55,13.51 5.43,11.82 C5.68,11.34 5.82,10.92 5.9,10.54 C5.71,10.58 5.5,10.6 5.29,10.6 C3.47,10.6 2,9.12 2,7.3 C2,5.48 3.47,4 5.29,4 C6.8,4 8.08,5.02 8.46,6.42 C8.6,6.82 8.68,7.27 8.68,7.79 L8.68,7.79 Z"/></svg>',receiver:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.01" d="M6.189,13.611C8.134,15.525 11.097,18.239 13.867,18.257C16.47,18.275 18.2,16.241 18.2,16.241L14.509,12.551L11.539,13.639L6.189,8.29L7.313,5.355L3.76,1.8C3.76,1.8 1.732,3.537 1.7,6.092C1.667,8.809 4.347,11.738 6.189,13.611"/></svg>',reddit:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M19 9.05a2.56 2.56 0 0 0-2.56-2.56 2.59 2.59 0 0 0-1.88.82 10.63 10.63 0 0 0-4.14-1v-.08c.58-1.62 1.58-3.89 2.7-4.1.38-.08.77.12 1.19.57a1.15 1.15 0 0 0-.06.37 1.48 1.48 0 1 0 1.51-1.45 1.43 1.43 0 0 0-.76.19A2.29 2.29 0 0 0 12.91 1c-2.11.43-3.39 4.38-3.63 5.19 0 0 0 .11-.06.11a10.65 10.65 0 0 0-3.75 1A2.56 2.56 0 0 0 1 9.05a2.42 2.42 0 0 0 .72 1.76A5.18 5.18 0 0 0 1.24 13c0 3.66 3.92 6.64 8.73 6.64s8.74-3 8.74-6.64a5.23 5.23 0 0 0-.46-2.13A2.58 2.58 0 0 0 19 9.05zm-16.88 0a1.44 1.44 0 0 1 2.27-1.19 7.68 7.68 0 0 0-2.07 1.91 1.33 1.33 0 0 1-.2-.72zM10 18.4c-4.17 0-7.55-2.4-7.55-5.4S5.83 7.53 10 7.53 17.5 10 17.5 13s-3.38 5.4-7.5 5.4zm7.69-8.61a7.62 7.62 0 0 0-2.09-1.91 1.41 1.41 0 0 1 .84-.28 1.47 1.47 0 0 1 1.44 1.45 1.34 1.34 0 0 1-.21.72z"/><path d="M6.69 12.58a1.39 1.39 0 1 1 1.39-1.39 1.38 1.38 0 0 1-1.38 1.39z"/><path d="M14.26 11.2a1.39 1.39 0 1 1-1.39-1.39 1.39 1.39 0 0 1 1.39 1.39z"/><path d="M13.09 14.88a.54.54 0 0 1-.09.77 5.3 5.3 0 0 1-3.26 1.19 5.61 5.61 0 0 1-3.4-1.22.55.55 0 1 1 .73-.83 4.09 4.09 0 0 0 5.25 0 .56.56 0 0 1 .77.09z"/></svg>',refresh:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M17.08,11.15 C17.09,11.31 17.1,11.47 17.1,11.64 C17.1,15.53 13.94,18.69 10.05,18.69 C6.16,18.68 3,15.53 3,11.63 C3,7.74 6.16,4.58 10.05,4.58 C10.9,4.58 11.71,4.73 12.46,5"/><polyline fill="none" stroke="#000" points="9.9 2 12.79 4.89 9.79 7.9"/></svg>',reply:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.7,13.11 C16.12,10.02 13.84,7.85 11.02,6.61 C10.57,6.41 9.75,6.13 9,5.91 L9,2 L1,9 L9,16 L9,12.13 C10.78,12.47 12.5,13.19 14.09,14.25 C17.13,16.28 18.56,18.54 18.56,18.54 C18.56,18.54 18.81,15.28 17.7,13.11 L17.7,13.11 Z M14.82,13.53 C13.17,12.4 11.01,11.4 8,10.92 L8,13.63 L2.55,9 L8,4.25 L8,6.8 C8.3,6.86 9.16,7.02 10.37,7.49 C13.3,8.65 15.54,10.96 16.65,13.08 C16.97,13.7 17.48,14.86 17.68,16 C16.87,15.05 15.73,14.15 14.82,13.53 L14.82,13.53 Z"/></svg>',rss:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="3.12" cy="16.8" r="1.85"/><path fill="none" stroke="#000" stroke-width="1.1" d="M1.5,8.2 C1.78,8.18 2.06,8.16 2.35,8.16 C7.57,8.16 11.81,12.37 11.81,17.57 C11.81,17.89 11.79,18.19 11.76,18.5"/><path fill="none" stroke="#000" stroke-width="1.1" d="M1.5,2.52 C1.78,2.51 2.06,2.5 2.35,2.5 C10.72,2.5 17.5,9.24 17.5,17.57 C17.5,17.89 17.49,18.19 17.47,18.5"/></svg>',search:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9" cy="9" r="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M14,14 L18,18 L14,14 Z"/></svg>',server:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="3" y="3" width="1" height="2"/><rect x="5" y="3" width="1" height="2"/><rect x="7" y="3" width="1" height="2"/><rect x="16" y="3" width="1" height="1"/><rect x="16" y="10" width="1" height="1"/><circle fill="none" stroke="#000" cx="9.9" cy="17.4" r="1.4"/><rect x="3" y="10" width="1" height="2"/><rect x="5" y="10" width="1" height="2"/><rect x="9.5" y="14" width="1" height="2"/><rect x="3" y="17" width="6" height="1"/><rect x="11" y="17" width="6" height="1"/><rect fill="none" stroke="#000" x="1.5" y="1.5" width="17" height="5"/><rect fill="none" stroke="#000" x="1.5" y="8.5" width="17" height="5"/></svg>',settings:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><ellipse fill="none" stroke="#000" cx="6.11" cy="3.55" rx="2.11" ry="2.15"/><ellipse fill="none" stroke="#000" cx="6.11" cy="15.55" rx="2.11" ry="2.15"/><circle fill="none" stroke="#000" cx="13.15" cy="9.55" r="2.15"/><rect x="1" y="3" width="3" height="1"/><rect x="10" y="3" width="8" height="1"/><rect x="1" y="9" width="8" height="1"/><rect x="15" y="9" width="3" height="1"/><rect x="1" y="15" width="3" height="1"/><rect x="10" y="15" width="8" height="1"/></svg>',shrink:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="11 4 12 4 12 8 16 8 16 9 11 9"/><polygon points="4 11 9 11 9 16 8 16 8 12 4 12"/><path fill="none" stroke="#000" stroke-width="1.1" d="M12,8 L18,2"/><path fill="none" stroke="#000" stroke-width="1.1" d="M2,18 L8,12"/></svg>',"sign-in":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="7 2 17 2 17 17 7 17 7 16 16 16 16 3 7 3"/><polygon points="9.1 13.4 8.5 12.8 11.28 10 4 10 4 9 11.28 9 8.5 6.2 9.1 5.62 13 9.5"/></svg>',"sign-out":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="13.1 13.4 12.5 12.8 15.28 10 8 10 8 9 15.28 9 12.5 6.2 13.1 5.62 17 9.5"/><polygon points="13 2 3 2 3 17 13 17 13 16 4 16 4 3 13 3"/></svg>',social:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.1" x1="13.4" y1="14" x2="6.3" y2="10.7"/><line fill="none" stroke="#000" stroke-width="1.1" x1="13.5" y1="5.5" x2="6.5" y2="8.8"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="15.5" cy="4.6" r="2.3"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="15.5" cy="14.8" r="2.3"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="4.5" cy="9.8" r="2.3"/></svg>',soundcloud:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.2,9.4c-0.4,0-0.8,0.1-1.101,0.2c-0.199-2.5-2.399-4.5-5-4.5c-0.6,0-1.2,0.1-1.7,0.3C9.2,5.5,9.1,5.6,9.1,5.6V15h8 c1.601,0,2.801-1.2,2.801-2.8C20,10.7,18.7,9.4,17.2,9.4L17.2,9.4z"/><rect x="6" y="6.5" width="1.5" height="8.5"/><rect x="3" y="8" width="1.5" height="7"/><rect y="10" width="1.5" height="5"/></svg>',star:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" stroke-width="1.01" points="10 2 12.63 7.27 18.5 8.12 14.25 12.22 15.25 18 10 15.27 4.75 18 5.75 12.22 1.5 8.12 7.37 7.27"/></svg>',strikethrough:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6,13.02 L6.65,13.02 C7.64,15.16 8.86,16.12 10.41,16.12 C12.22,16.12 12.92,14.93 12.92,13.89 C12.92,12.55 11.99,12.03 9.74,11.23 C8.05,10.64 6.23,10.11 6.23,7.83 C6.23,5.5 8.09,4.09 10.4,4.09 C11.44,4.09 12.13,4.31 12.72,4.54 L13.33,4 L13.81,4 L13.81,7.59 L13.16,7.59 C12.55,5.88 11.52,4.89 10.07,4.89 C8.84,4.89 7.89,5.69 7.89,7.03 C7.89,8.29 8.89,8.78 10.88,9.45 C12.57,10.03 14.38,10.6 14.38,12.91 C14.38,14.75 13.27,16.93 10.18,16.93 C9.18,16.93 8.17,16.69 7.46,16.39 L6.52,17 L6,17 L6,13.02 L6,13.02 Z"/><rect x="3" y="10" width="15" height="1"/></svg>',table:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="1" y="3" width="18" height="1"/><rect x="1" y="7" width="18" height="1"/><rect x="1" y="11" width="18" height="1"/><rect x="1" y="15" width="18" height="1"/></svg>',"tablet-landscape":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M1.5,5 C1.5,4.2 2.2,3.5 3,3.5 L17,3.5 C17.8,3.5 18.5,4.2 18.5,5 L18.5,16 C18.5,16.8 17.8,17.5 17,17.5 L3,17.5 C2.2,17.5 1.5,16.8 1.5,16 L1.5,5 L1.5,5 L1.5,5 Z"/><circle cx="3.7" cy="10.5" r=".8"/></svg>',tablet:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M5,18.5 C4.2,18.5 3.5,17.8 3.5,17 L3.5,3 C3.5,2.2 4.2,1.5 5,1.5 L16,1.5 C16.8,1.5 17.5,2.2 17.5,3 L17.5,17 C17.5,17.8 16.8,18.5 16,18.5 L5,18.5 L5,18.5 L5,18.5 Z"/><circle cx="10.5" cy="16.3" r=".8"/></svg>',tag:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M17.5,3.71 L17.5,7.72 C17.5,7.96 17.4,8.2 17.21,8.39 L8.39,17.2 C7.99,17.6 7.33,17.6 6.93,17.2 L2.8,13.07 C2.4,12.67 2.4,12.01 2.8,11.61 L11.61,2.8 C11.81,2.6 12.08,2.5 12.34,2.5 L16.19,2.5 C16.52,2.5 16.86,2.63 17.11,2.88 C17.35,3.11 17.48,3.4 17.5,3.71 L17.5,3.71 Z"/><circle cx="14" cy="6" r="1"/></svg>',thumbnails:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" x="3.5" y="3.5" width="5" height="5"/><rect fill="none" stroke="#000" x="11.5" y="3.5" width="5" height="5"/><rect fill="none" stroke="#000" x="11.5" y="11.5" width="5" height="5"/><rect fill="none" stroke="#000" x="3.5" y="11.5" width="5" height="5"/></svg>',trash:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="6.5 3 6.5 1.5 13.5 1.5 13.5 3"/><polyline fill="none" stroke="#000" points="4.5 4 4.5 18.5 15.5 18.5 15.5 4"/><rect x="8" y="7" width="1" height="9"/><rect x="11" y="7" width="1" height="9"/><rect x="2" y="3" width="16" height="1"/></svg>',"triangle-down":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="5 7 15 7 10 12"/></svg>',"triangle-left":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="12 5 7 10 12 15"/></svg>',"triangle-right":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="8 5 13 10 8 15"/></svg>',"triangle-up":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="5 13 10 8 15 13"/></svg>',tripadvisor:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M19.021,7.866C19.256,6.862,20,5.854,20,5.854h-3.346C14.781,4.641,12.504,4,9.98,4C7.363,4,4.999,4.651,3.135,5.876H0\tc0,0,0.738,0.987,0.976,1.988c-0.611,0.837-0.973,1.852-0.973,2.964c0,2.763,2.249,5.009,5.011,5.009\tc1.576,0,2.976-0.737,3.901-1.879l1.063,1.599l1.075-1.615c0.475,0.611,1.1,1.111,1.838,1.451c1.213,0.547,2.574,0.612,3.825,0.15\tc2.589-0.963,3.913-3.852,2.964-6.439c-0.175-0.463-0.4-0.876-0.675-1.238H19.021z M16.38,14.594\tc-1.002,0.371-2.088,0.328-3.06-0.119c-0.688-0.317-1.252-0.817-1.657-1.438c-0.164-0.25-0.313-0.52-0.417-0.811\tc-0.124-0.328-0.186-0.668-0.217-1.014c-0.063-0.689,0.037-1.396,0.339-2.043c0.448-0.971,1.251-1.71,2.25-2.079\tc2.075-0.765,4.375,0.3,5.14,2.366c0.762,2.066-0.301,4.37-2.363,5.134L16.38,14.594L16.38,14.594z M8.322,13.066\tc-0.72,1.059-1.935,1.76-3.309,1.76c-2.207,0-4.001-1.797-4.001-3.996c0-2.203,1.795-4.002,4.001-4.002\tc2.204,0,3.999,1.8,3.999,4.002c0,0.137-0.024,0.261-0.04,0.396c-0.067,0.678-0.284,1.313-0.648,1.853v-0.013H8.322z M2.472,10.775\tc0,1.367,1.112,2.479,2.476,2.479c1.363,0,2.472-1.11,2.472-2.479c0-1.359-1.11-2.468-2.472-2.468\tC3.584,8.306,2.473,9.416,2.472,10.775L2.472,10.775z M12.514,10.775c0,1.367,1.104,2.479,2.471,2.479\tc1.363,0,2.474-1.108,2.474-2.479c0-1.359-1.11-2.468-2.474-2.468c-1.364,0-2.477,1.109-2.477,2.468H12.514z M3.324,10.775\tc0-0.893,0.726-1.618,1.614-1.618c0.889,0,1.625,0.727,1.625,1.618c0,0.898-0.725,1.627-1.625,1.627\tc-0.901,0-1.625-0.729-1.625-1.627H3.324z M13.354,10.775c0-0.893,0.726-1.618,1.627-1.618c0.886,0,1.61,0.727,1.61,1.618\tc0,0.898-0.726,1.627-1.626,1.627s-1.625-0.729-1.625-1.627H13.354z M9.977,4.875c1.798,0,3.425,0.324,4.849,0.968\tc-0.535,0.015-1.061,0.108-1.586,0.3c-1.264,0.463-2.264,1.388-2.815,2.604c-0.262,0.551-0.398,1.133-0.448,1.72\tC9.79,7.905,7.677,5.873,5.076,5.82C6.501,5.208,8.153,4.875,9.94,4.875H9.977z"/></svg>',tumblr:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6.885,8.598c0,0,0,3.393,0,4.996c0,0.282,0,0.66,0.094,0.942c0.377,1.509,1.131,2.545,2.545,3.11 c1.319,0.472,2.356,0.472,3.676,0c0.565-0.188,1.132-0.659,1.132-0.659l-0.849-2.263c0,0-1.036,0.378-1.603,0.283 c-0.565-0.094-1.226-0.66-1.226-1.508c0-1.603,0-4.902,0-4.902h2.828V5.771h-2.828V2H8.205c0,0-0.094,0.66-0.188,0.942 C7.828,3.791,7.262,4.733,6.603,5.394C5.848,6.147,5,6.43,5,6.43v2.168H6.885z"/></svg>',tv:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="7" y="16" width="6" height="1"/><rect fill="none" stroke="#000" x=".5" y="3.5" width="19" height="11"/></svg>',twitter:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M19,4.74 C18.339,5.029 17.626,5.229 16.881,5.32 C17.644,4.86 18.227,4.139 18.503,3.28 C17.79,3.7 17.001,4.009 16.159,4.17 C15.485,3.45 14.526,3 13.464,3 C11.423,3 9.771,4.66 9.771,6.7 C9.771,6.99 9.804,7.269 9.868,7.539 C6.795,7.38 4.076,5.919 2.254,3.679 C1.936,4.219 1.754,4.86 1.754,5.539 C1.754,6.82 2.405,7.95 3.397,8.61 C2.79,8.589 2.22,8.429 1.723,8.149 L1.723,8.189 C1.723,9.978 2.997,11.478 4.686,11.82 C4.376,11.899 4.049,11.939 3.713,11.939 C3.475,11.939 3.245,11.919 3.018,11.88 C3.49,13.349 4.852,14.419 6.469,14.449 C5.205,15.429 3.612,16.019 1.882,16.019 C1.583,16.019 1.29,16.009 1,15.969 C2.635,17.019 4.576,17.629 6.662,17.629 C13.454,17.629 17.17,12 17.17,7.129 C17.17,6.969 17.166,6.809 17.157,6.649 C17.879,6.129 18.504,5.478 19,4.74"/></svg>',uikit:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="14.4,3.1 11.3,5.1 15,7.3 15,12.9 10,15.7 5,12.9 5,8.5 2,6.8 2,14.8 9.9,19.5 18,14.8 18,5.3"/><polygon points="9.8,4.2 6.7,2.4 9.8,0.4 12.9,2.3"/></svg>',unlock:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" x="3.5" y="8.5" width="13" height="10"/><path fill="none" stroke="#000" d="M6.5,8.5 L6.5,4.9 C6.5,3 8.1,1.5 10,1.5 C11.9,1.5 13.5,3 13.5,4.9"/></svg>',upload:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="5 8 9.5 3.5 14 8"/><rect x="3" y="17" width="13" height="1"/><line fill="none" stroke="#000" x1="9.5" y1="15" x2="9.5" y2="4"/></svg>',user:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9.9" cy="6.4" r="4.4"/><path fill="none" stroke="#000" stroke-width="1.1" d="M1.5,19 C2.3,14.5 5.8,11.2 10,11.2 C14.2,11.2 17.7,14.6 18.5,19.2"/></svg>',users:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="7.7" cy="8.6" r="3.5"/><path fill="none" stroke="#000" stroke-width="1.1" d="M1,18.1 C1.7,14.6 4.4,12.1 7.6,12.1 C10.9,12.1 13.7,14.8 14.3,18.3"/><path fill="none" stroke="#000" stroke-width="1.1" d="M11.4,4 C12.8,2.4 15.4,2.8 16.3,4.7 C17.2,6.6 15.7,8.9 13.6,8.9 C16.5,8.9 18.8,11.3 19.2,14.1"/></svg>',"video-camera":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="17.5 6.9 17.5 13.1 13.5 10.4 13.5 14.5 2.5 14.5 2.5 5.5 13.5 5.5 13.5 9.6 17.5 6.9"/></svg>',vimeo:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2.065,7.59C1.84,7.367,1.654,7.082,1.468,6.838c-0.332-0.42-0.137-0.411,0.274-0.772c1.026-0.91,2.004-1.896,3.127-2.688 c1.017-0.713,2.365-1.173,3.286-0.039c0.849,1.045,0.869,2.629,1.084,3.891c0.215,1.309,0.421,2.648,0.88,3.901 c0.127,0.352,0.37,1.018,0.81,1.074c0.567,0.078,1.145-0.917,1.408-1.289c0.684-0.987,1.611-2.317,1.494-3.587 c-0.115-1.349-1.572-1.095-2.482-0.773c0.146-1.514,1.555-3.216,2.912-3.792c1.439-0.597,3.579-0.587,4.302,1.036 c0.772,1.759,0.078,3.802-0.763,5.396c-0.918,1.731-2.1,3.333-3.363,4.829c-1.114,1.329-2.432,2.787-4.093,3.422 c-1.897,0.723-3.021-0.686-3.667-2.318c-0.705-1.777-1.056-3.771-1.565-5.621C4.898,8.726,4.644,7.836,4.136,7.191 C3.473,6.358,2.72,7.141,2.065,7.59C1.977,7.502,2.115,7.551,2.065,7.59L2.065,7.59z"/></svg>',warning:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="10" cy="14" r="1"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/><path d="M10.97,7.72 C10.85,9.54 10.56,11.29 10.56,11.29 C10.51,11.87 10.27,12 9.99,12 C9.69,12 9.49,11.87 9.43,11.29 C9.43,11.29 9.16,9.54 9.03,7.72 C8.96,6.54 9.03,6 9.03,6 C9.03,5.45 9.46,5.02 9.99,5 C10.53,5.01 10.97,5.44 10.97,6 C10.97,6 11.04,6.54 10.97,7.72 L10.97,7.72 Z"/></svg>',whatsapp:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M16.7,3.3c-1.8-1.8-4.1-2.8-6.7-2.8c-5.2,0-9.4,4.2-9.4,9.4c0,1.7,0.4,3.3,1.3,4.7l-1.3,4.9l5-1.3c1.4,0.8,2.9,1.2,4.5,1.2 l0,0l0,0c5.2,0,9.4-4.2,9.4-9.4C19.5,7.4,18.5,5,16.7,3.3 M10.1,17.7L10.1,17.7c-1.4,0-2.8-0.4-4-1.1l-0.3-0.2l-3,0.8l0.8-2.9 l-0.2-0.3c-0.8-1.2-1.2-2.7-1.2-4.2c0-4.3,3.5-7.8,7.8-7.8c2.1,0,4.1,0.8,5.5,2.3c1.5,1.5,2.3,3.4,2.3,5.5 C17.9,14.2,14.4,17.7,10.1,17.7 M14.4,11.9c-0.2-0.1-1.4-0.7-1.6-0.8c-0.2-0.1-0.4-0.1-0.5,0.1c-0.2,0.2-0.6,0.8-0.8,0.9 c-0.1,0.2-0.3,0.2-0.5,0.1c-0.2-0.1-1-0.4-1.9-1.2c-0.7-0.6-1.2-1.4-1.3-1.6c-0.1-0.2,0-0.4,0.1-0.5C8,8.8,8.1,8.7,8.2,8.5 c0.1-0.1,0.2-0.2,0.2-0.4c0.1-0.2,0-0.3,0-0.4C8.4,7.6,7.9,6.5,7.7,6C7.5,5.5,7.3,5.6,7.2,5.6c-0.1,0-0.3,0-0.4,0 c-0.2,0-0.4,0.1-0.6,0.3c-0.2,0.2-0.8,0.8-0.8,2c0,1.2,0.8,2.3,1,2.4c0.1,0.2,1.7,2.5,4,3.5c0.6,0.2,1,0.4,1.3,0.5 c0.6,0.2,1.1,0.2,1.5,0.1c0.5-0.1,1.4-0.6,1.6-1.1c0.2-0.5,0.2-1,0.1-1.1C14.8,12.1,14.6,12,14.4,11.9"/></svg>',wordpress:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10,0.5c-5.2,0-9.5,4.3-9.5,9.5s4.3,9.5,9.5,9.5c5.2,0,9.5-4.3,9.5-9.5S15.2,0.5,10,0.5L10,0.5L10,0.5z M15.6,3.9h-0.1 c-0.8,0-1.4,0.7-1.4,1.5c0,0.7,0.4,1.3,0.8,1.9c0.3,0.6,0.7,1.3,0.7,2.3c0,0.7-0.3,1.5-0.6,2.7L14.1,15l-3-8.9 c0.5,0,0.9-0.1,0.9-0.1C12.5,6,12.5,5.3,12,5.4c0,0-1.3,0.1-2.2,0.1C9,5.5,7.7,5.4,7.7,5.4C7.2,5.3,7.2,6,7.6,6c0,0,0.4,0.1,0.9,0.1 l1.3,3.5L8,15L5,6.1C5.5,6.1,5.9,6,5.9,6C6.4,6,6.3,5.3,5.9,5.4c0,0-1.3,0.1-2.2,0.1c-0.2,0-0.3,0-0.5,0c1.5-2.2,4-3.7,6.9-3.7 C12.2,1.7,14.1,2.6,15.6,3.9L15.6,3.9L15.6,3.9z M2.5,6.6l3.9,10.8c-2.7-1.3-4.6-4.2-4.6-7.4C1.8,8.8,2,7.6,2.5,6.6L2.5,6.6L2.5,6.6 z M10.2,10.7l2.5,6.9c0,0,0,0.1,0.1,0.1C11.9,18,11,18.2,10,18.2c-0.8,0-1.6-0.1-2.3-0.3L10.2,10.7L10.2,10.7L10.2,10.7z M14.2,17.1 l2.5-7.3c0.5-1.2,0.6-2.1,0.6-2.9c0-0.3,0-0.6-0.1-0.8c0.6,1.2,1,2.5,1,4C18.3,13,16.6,15.7,14.2,17.1L14.2,17.1L14.2,17.1z"/></svg>',world:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M1,10.5 L19,10.5"/><path fill="none" stroke="#000" d="M2.35,15.5 L17.65,15.5"/><path fill="none" stroke="#000" d="M2.35,5.5 L17.523,5.5"/><path fill="none" stroke="#000" d="M10,19.46 L9.98,19.46 C7.31,17.33 5.61,14.141 5.61,10.58 C5.61,7.02 7.33,3.83 10,1.7 C10.01,1.7 9.99,1.7 10,1.7 L10,1.7 C12.67,3.83 14.4,7.02 14.4,10.58 C14.4,14.141 12.67,17.33 10,19.46 L10,19.46 L10,19.46 L10,19.46 Z"/><circle fill="none" stroke="#000" cx="10" cy="10.5" r="9"/></svg>',xing:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M4.4,4.56 C4.24,4.56 4.11,4.61 4.05,4.72 C3.98,4.83 3.99,4.97 4.07,5.12 L5.82,8.16 L5.82,8.17 L3.06,13.04 C2.99,13.18 2.99,13.33 3.06,13.44 C3.12,13.55 3.24,13.62 3.4,13.62 L6,13.62 C6.39,13.62 6.57,13.36 6.71,13.12 C6.71,13.12 9.41,8.35 9.51,8.16 C9.49,8.14 7.72,5.04 7.72,5.04 C7.58,4.81 7.39,4.56 6.99,4.56 L4.4,4.56 L4.4,4.56 Z"/><path d="M15.3,1 C14.91,1 14.74,1.25 14.6,1.5 C14.6,1.5 9.01,11.42 8.82,11.74 C8.83,11.76 12.51,18.51 12.51,18.51 C12.64,18.74 12.84,19 13.23,19 L15.82,19 C15.98,19 16.1,18.94 16.16,18.83 C16.23,18.72 16.23,18.57 16.16,18.43 L12.5,11.74 L12.5,11.72 L18.25,1.56 C18.32,1.42 18.32,1.27 18.25,1.16 C18.21,1.06 18.08,1 17.93,1 L15.3,1 L15.3,1 Z"/></svg>',yelp:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.175,14.971c-0.112,0.77-1.686,2.767-2.406,3.054c-0.246,0.1-0.487,0.076-0.675-0.069\tc-0.122-0.096-2.446-3.859-2.446-3.859c-0.194-0.293-0.157-0.682,0.083-0.978c0.234-0.284,0.581-0.393,0.881-0.276\tc0.016,0.01,4.21,1.394,4.332,1.482c0.178,0.148,0.263,0.379,0.225,0.646L17.175,14.971L17.175,14.971z M11.464,10.789\tc-0.203-0.307-0.199-0.666,0.009-0.916c0,0,2.625-3.574,2.745-3.657c0.203-0.135,0.452-0.141,0.69-0.025\tc0.691,0.335,2.085,2.405,2.167,3.199v0.027c0.024,0.271-0.082,0.491-0.273,0.623c-0.132,0.083-4.43,1.155-4.43,1.155\tc-0.322,0.096-0.68-0.06-0.882-0.381L11.464,10.789z M9.475,9.563C9.32,9.609,8.848,9.757,8.269,8.817c0,0-3.916-6.16-4.007-6.351\tc-0.057-0.212,0.011-0.455,0.202-0.65C5.047,1.211,8.21,0.327,9.037,0.529c0.27,0.069,0.457,0.238,0.522,0.479\tc0.047,0.266,0.433,5.982,0.488,7.264C10.098,9.368,9.629,9.517,9.475,9.563z M9.927,19.066c-0.083,0.225-0.273,0.373-0.54,0.421\tc-0.762,0.13-3.15-0.751-3.647-1.342c-0.096-0.131-0.155-0.262-0.167-0.394c-0.011-0.095,0-0.189,0.036-0.272\tc0.061-0.155,2.917-3.538,2.917-3.538c0.214-0.272,0.595-0.355,0.952-0.213c0.345,0.13,0.56,0.428,0.536,0.749\tC10.014,14.479,9.977,18.923,9.927,19.066z M3.495,13.912c-0.235-0.009-0.444-0.148-0.568-0.382c-0.089-0.17-0.151-0.453-0.19-0.794\tC2.63,11.701,2.761,10.144,3.07,9.648c0.145-0.226,0.357-0.345,0.592-0.336c0.154,0,4.255,1.667,4.255,1.667\tc0.321,0.118,0.521,0.453,0.5,0.833c-0.023,0.37-0.236,0.655-0.551,0.738L3.495,13.912z"/></svg>',youtube:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15,4.1c1,0.1,2.3,0,3,0.8c0.8,0.8,0.9,2.1,0.9,3.1C19,9.2,19,10.9,19,12c-0.1,1.1,0,2.4-0.5,3.4c-0.5,1.1-1.4,1.5-2.5,1.6 c-1.2,0.1-8.6,0.1-11,0c-1.1-0.1-2.4-0.1-3.2-1c-0.7-0.8-0.7-2-0.8-3C1,11.8,1,10.1,1,8.9c0-1.1,0-2.4,0.5-3.4C2,4.5,3,4.3,4.1,4.2 C5.3,4.1,12.6,4,15,4.1z M8,7.5v6l5.5-3L8,7.5z"/></svg>'})}return"undefined"!=typeof window&&window.UIkit&&window.UIkit.use(e),e});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
